drivers/video/mxc/mxcfb_hx8369_wvga.c:2: * Copyright (C) 2011-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_hx8369_wvga.c:16: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mxcfb_hx8369_wvga.c:156:		dev_err(&mipi_dsi->pdev->dev,			\
drivers/video/mxc/mxcfb_hx8369_wvga.c:168:	 "TRULY-WVGA", 64, 480, 800, 37880,
drivers/video/mxc/mxcfb_hx8369_wvga.c:199:	dev_dbg(&mipi_dsi->pdev->dev, "MIPI DSI LCD setup.\n");
drivers/video/mxc/mxcfb_hx8369_wvga.c:214:		dev_info(&mipi_dsi->pdev->dev,
drivers/video/mxc/mxcfb_hx8369_wvga.c:217:		dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mxcfb_hx8369_wvga.c:220:		dev_info(&mipi_dsi->pdev->dev,
drivers/video/mxc/mxcfb_hx8369_wvga.c:395:	int brightness = bl->props.brightness;
drivers/video/mxc/mxcfb_hx8369_wvga.c:398:	if (bl->props.power != FB_BLANK_UNBLANK ||
drivers/video/mxc/mxcfb_hx8369_wvga.c:399:	    bl->props.fb_blank != FB_BLANK_UNBLANK)
drivers/video/mxc/mxcfb_hx8369_wvga.c:409:	dev_dbg(&bl->dev, "mipid backlight bringtness:%d.\n", brightness);
drivers/video/mxc/mxcfb_hx8369_wvga.c:434:	if (mipi_dsi->bl) {
drivers/video/mxc/mxcfb_hx8369_wvga.c:441:	bl = backlight_device_register("mipid-bl", &mipi_dsi->pdev->dev,
drivers/video/mxc/mxcfb_hx8369_wvga.c:447:	mipi_dsi->bl = bl;
drivers/video/mxc/mxcfb_hx8369_wvga.c:448:	bl->props.power = FB_BLANK_UNBLANK;
drivers/video/mxc/mxcfb_hx8369_wvga.c:449:	bl->props.fb_blank = FB_BLANK_UNBLANK;
drivers/video/mxc/mxcfb_hx8369_wvga.c:450:	bl->props.brightness = HX8369BL_DEF_BRIGHT;
drivers/video/mxc/mxc_elcdif_fb.c:2: * Copyright (C) 2010-2012 Freescale Semiconductor, Inc.
drivers/video/mxc/mxc_elcdif_fb.c:18: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mxc_elcdif_fb.c:22: *	    and arch/arm/mach-mx28/include/mach/lcdif.h.
drivers/video/mxc/mxc_elcdif_fb.c:35:#include <linux/dma-mapping.h>
drivers/video/mxc/mxc_elcdif_fb.c:47:/*  Four-character-code (FOURCC) */
drivers/video/mxc/mxc_elcdif_fb.c:112:		m->refresh, m->xres, m->yres, m->pixclock, m->left_margin,
drivers/video/mxc/mxc_elcdif_fb.c:113:		m->right_margin, m->upper_margin, m->lower_margin,
drivers/video/mxc/mxc_elcdif_fb.c:114:		m->hsync_len, m->vsync_len, m->sync, m->vmode, m->flag);
drivers/video/mxc/mxc_elcdif_fb.c:383:	/* convert input RGB -> YCbCr */
drivers/video/mxc/mxc_elcdif_fb.c:405:	/* set start/end of field-1 and start of field-2 */
drivers/video/mxc/mxc_elcdif_fb.c:415:	/* set first vertical blanking interval and end of filed-2 */
drivers/video/mxc/mxc_elcdif_fb.c:437:		/* the input frame can't be less then (720-256) pixels/line */
drivers/video/mxc/mxc_elcdif_fb.c:438:		if (720 - h_active > 0xff)
drivers/video/mxc/mxc_elcdif_fb.c:439:			h_active = 720 - 0xff;
drivers/video/mxc/mxc_elcdif_fb.c:446:		val |= BF_ELCDIF_DVICTRL4_H_FILL_CNT(720 - h_active) |
drivers/video/mxc/mxc_elcdif_fb.c:453:	/* Color Space Conversion RGB->YCbCr */
drivers/video/mxc/mxc_elcdif_fb.c:632:	data->running = true;
drivers/video/mxc/mxc_elcdif_fb.c:669:		for (count = 10000; count; count--) {
drivers/video/mxc/mxc_elcdif_fb.c:684:		ret = -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:698:	 * Make sure we do a high-to-low transition to reset the panel.
drivers/video/mxc/mxc_elcdif_fb.c:727:	if (fbi->var.nonstd)
drivers/video/mxc/mxc_elcdif_fb.c:728:		return fbi->var.nonstd;
drivers/video/mxc/mxc_elcdif_fb.c:730:	switch (fbi->var.bits_per_pixel) {
drivers/video/mxc/mxc_elcdif_fb.c:752:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mxc_elcdif_fb.c:753:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mxc_elcdif_fb.c:755:	fix->line_length = var->xres_virtual * var->bits_per_pixel / 8;
drivers/video/mxc/mxc_elcdif_fb.c:757:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxc_elcdif_fb.c:758:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxc_elcdif_fb.c:759:	fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxc_elcdif_fb.c:760:	fix->xpanstep = 1;
drivers/video/mxc/mxc_elcdif_fb.c:761:	fix->ypanstep = 1;
drivers/video/mxc/mxc_elcdif_fb.c:773:		data->wait4vsync) {
drivers/video/mxc/mxc_elcdif_fb.c:777:		data->wait4vsync = 0;
drivers/video/mxc/mxc_elcdif_fb.c:778:		complete(&data->vsync_complete);
drivers/video/mxc/mxc_elcdif_fb.c:781:		data->wait4framedone) {
drivers/video/mxc/mxc_elcdif_fb.c:785:		if (data->panning) {
drivers/video/mxc/mxc_elcdif_fb.c:786:			up(&data->flip_sem);
drivers/video/mxc/mxc_elcdif_fb.c:787:			data->panning = 0;
drivers/video/mxc/mxc_elcdif_fb.c:789:		data->wait4framedone = 0;
drivers/video/mxc/mxc_elcdif_fb.c:790:		complete(&data->frame_done_complete);
drivers/video/mxc/mxc_elcdif_fb.c:808:	chan >>= 16 - bf->length;
drivers/video/mxc/mxc_elcdif_fb.c:809:	return chan << bf->offset;
drivers/video/mxc/mxc_elcdif_fb.c:823:	if (fbi->var.grayscale)
drivers/video/mxc/mxc_elcdif_fb.c:826:	switch (fbi->fix.visual) {
drivers/video/mxc/mxc_elcdif_fb.c:829:		 * 16-bit True Colour.  We encode the RGB value
drivers/video/mxc/mxc_elcdif_fb.c:833:			u32 *pal = fbi->pseudo_palette;
drivers/video/mxc/mxc_elcdif_fb.c:835:			val = _chan_to_field(red, &fbi->var.red);
drivers/video/mxc/mxc_elcdif_fb.c:836:			val |= _chan_to_field(green, &fbi->var.green);
drivers/video/mxc/mxc_elcdif_fb.c:837:			val |= _chan_to_field(blue, &fbi->var.blue);
drivers/video/mxc/mxc_elcdif_fb.c:860:	struct fb_var_screeninfo oldvar = data->var;
drivers/video/mxc/mxc_elcdif_fb.c:861:	struct fb_var_screeninfo newvar = fbi->var;
drivers/video/mxc/mxc_elcdif_fb.c:863:	if ((fbi->var.activate & FB_ACTIVATE_MASK) == FB_ACTIVATE_NOW &&
drivers/video/mxc/mxc_elcdif_fb.c:864:	    fbi->var.activate & FB_ACTIVATE_FORCE)
drivers/video/mxc/mxc_elcdif_fb.c:875: * the hardware state info->par and fix which can be affected by the
drivers/video/mxc/mxc_elcdif_fb.c:881:	struct mxc_elcdif_fb_data *data = (struct mxc_elcdif_fb_data *)fbi->par;
drivers/video/mxc/mxc_elcdif_fb.c:885:	dev_dbg(fbi->device, "Reconfiguring framebuffer\n");
drivers/video/mxc/mxc_elcdif_fb.c:888:	if (mxc_elcdif_fb_par_equal(fbi, data) && (data->running == true))
drivers/video/mxc/mxc_elcdif_fb.c:891:	sema_init(&data->flip_sem, 1);
drivers/video/mxc/mxc_elcdif_fb.c:908:	mem_len = fbi->var.yres_virtual * fbi->fix.line_length;
drivers/video/mxc/mxc_elcdif_fb.c:909:	if (!fbi->fix.smem_start || (mem_len > fbi->fix.smem_len)) {
drivers/video/mxc/mxc_elcdif_fb.c:910:		if (fbi->fix.smem_start)
drivers/video/mxc/mxc_elcdif_fb.c:914:			return -ENOMEM;
drivers/video/mxc/mxc_elcdif_fb.c:917:	if (data->next_blank != FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_elcdif_fb.c:928:	dev_dbg(fbi->device, "pixclock = %u Hz\n",
drivers/video/mxc/mxc_elcdif_fb.c:929:		(u32) (PICOS2KHZ(fbi->var.pixclock) * 1000UL));
drivers/video/mxc/mxc_elcdif_fb.c:932:	if (fbi->var.sync & FB_SYNC_HOR_HIGH_ACT)
drivers/video/mxc/mxc_elcdif_fb.c:934:	if (fbi->var.sync & FB_SYNC_VERT_HIGH_ACT)
drivers/video/mxc/mxc_elcdif_fb.c:936:	if (fbi->var.sync & FB_SYNC_CLK_LAT_FALL)
drivers/video/mxc/mxc_elcdif_fb.c:938:	if (!(fbi->var.sync & FB_SYNC_OE_LOW_ACT))
drivers/video/mxc/mxc_elcdif_fb.c:941:	setup_dotclk_panel((PICOS2KHZ(fbi->var.pixclock)) * 1000UL,
drivers/video/mxc/mxc_elcdif_fb.c:942:			   fbi->var.vsync_len,
drivers/video/mxc/mxc_elcdif_fb.c:943:			   fbi->var.upper_margin +
drivers/video/mxc/mxc_elcdif_fb.c:944:			   fbi->var.yres + fbi->var.lower_margin,
drivers/video/mxc/mxc_elcdif_fb.c:945:			   fbi->var.upper_margin,
drivers/video/mxc/mxc_elcdif_fb.c:946:			   fbi->var.yres,
drivers/video/mxc/mxc_elcdif_fb.c:947:			   fbi->var.hsync_len,
drivers/video/mxc/mxc_elcdif_fb.c:948:			   fbi->var.left_margin +
drivers/video/mxc/mxc_elcdif_fb.c:949:			   fbi->var.xres + fbi->var.right_margin,
drivers/video/mxc/mxc_elcdif_fb.c:950:			   fbi->var.left_margin,
drivers/video/mxc/mxc_elcdif_fb.c:951:			   fbi->var.xres,
drivers/video/mxc/mxc_elcdif_fb.c:953:			   data->output_pix_fmt,
drivers/video/mxc/mxc_elcdif_fb.c:956:	mxc_elcdif_frame_addr_setup(fbi->fix.smem_start);
drivers/video/mxc/mxc_elcdif_fb.c:960:	fbi->mode = (struct fb_videomode *)fb_match_mode(&fbi->var,
drivers/video/mxc/mxc_elcdif_fb.c:961:							 &fbi->modelist);
drivers/video/mxc/mxc_elcdif_fb.c:962:	data->var = fbi->var;
drivers/video/mxc/mxc_elcdif_fb.c:970:	if (var->xres_virtual < var->xres)
drivers/video/mxc/mxc_elcdif_fb.c:971:		var->xres_virtual = var->xres;
drivers/video/mxc/mxc_elcdif_fb.c:972:	if (var->yres_virtual < var->yres)
drivers/video/mxc/mxc_elcdif_fb.c:973:		var->yres_virtual = var->yres;
drivers/video/mxc/mxc_elcdif_fb.c:975:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mxc_elcdif_fb.c:976:	    (var->bits_per_pixel != 16) && (var->bits_per_pixel != 8))
drivers/video/mxc/mxc_elcdif_fb.c:977:		var->bits_per_pixel = default_bpp;
drivers/video/mxc/mxc_elcdif_fb.c:979:	switch (var->bits_per_pixel) {
drivers/video/mxc/mxc_elcdif_fb.c:981:		var->red.length = 3;
drivers/video/mxc/mxc_elcdif_fb.c:982:		var->red.offset = 5;
drivers/video/mxc/mxc_elcdif_fb.c:983:		var->red.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:985:		var->green.length = 3;
drivers/video/mxc/mxc_elcdif_fb.c:986:		var->green.offset = 2;
drivers/video/mxc/mxc_elcdif_fb.c:987:		var->green.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:989:		var->blue.length = 2;
drivers/video/mxc/mxc_elcdif_fb.c:990:		var->blue.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:991:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:993:		var->transp.length = 0;
drivers/video/mxc/mxc_elcdif_fb.c:994:		var->transp.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:995:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:998:		var->red.length = 5;
drivers/video/mxc/mxc_elcdif_fb.c:999:		var->red.offset = 11;
drivers/video/mxc/mxc_elcdif_fb.c:1000:		var->red.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1002:		var->green.length = 6;
drivers/video/mxc/mxc_elcdif_fb.c:1003:		var->green.offset = 5;
drivers/video/mxc/mxc_elcdif_fb.c:1004:		var->green.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1006:		var->blue.length = 5;
drivers/video/mxc/mxc_elcdif_fb.c:1007:		var->blue.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1008:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1010:		var->transp.length = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1011:		var->transp.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1012:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1015:		var->red.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1016:		var->red.offset = 16;
drivers/video/mxc/mxc_elcdif_fb.c:1017:		var->red.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1019:		var->green.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1020:		var->green.offset = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1021:		var->green.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1023:		var->blue.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1024:		var->blue.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1025:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1027:		var->transp.length = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1028:		var->transp.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1029:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1032:		var->red.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1033:		var->red.offset = 16;
drivers/video/mxc/mxc_elcdif_fb.c:1034:		var->red.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1036:		var->green.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1037:		var->green.offset = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1038:		var->green.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1040:		var->blue.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1041:		var->blue.offset = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1042:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1044:		var->transp.length = 8;
drivers/video/mxc/mxc_elcdif_fb.c:1045:		var->transp.offset = 24;
drivers/video/mxc/mxc_elcdif_fb.c:1046:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1050:	var->height = -1;
drivers/video/mxc/mxc_elcdif_fb.c:1051:	var->width = -1;
drivers/video/mxc/mxc_elcdif_fb.c:1052:	var->grayscale = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1060:				(struct mxc_elcdif_fb_data *)info->par;
drivers/video/mxc/mxc_elcdif_fb.c:1063:	if (data->cur_blank != FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_elcdif_fb.c:1064:		dev_err(info->device, "can't wait for VSYNC when fb "
drivers/video/mxc/mxc_elcdif_fb.c:1066:		return -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:1069:	init_completion(&data->vsync_complete);
drivers/video/mxc/mxc_elcdif_fb.c:1073:	data->wait4vsync = 1;
drivers/video/mxc/mxc_elcdif_fb.c:1077:				&data->vsync_complete, 1 * HZ);
drivers/video/mxc/mxc_elcdif_fb.c:1079:		dev_err(info->device,
drivers/video/mxc/mxc_elcdif_fb.c:1081:		data->wait4vsync = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1082:		ret = -ETIME;
drivers/video/mxc/mxc_elcdif_fb.c:1092:				(struct mxc_elcdif_fb_data *)info->par;
drivers/video/mxc/mxc_elcdif_fb.c:1095:	if (data->cur_blank != FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_elcdif_fb.c:1096:		dev_err(info->device, "can't wait for frame done when fb "
drivers/video/mxc/mxc_elcdif_fb.c:1098:		return -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:1101:	init_completion(&data->frame_done_complete);
drivers/video/mxc/mxc_elcdif_fb.c:1105:	data->wait4framedone = 1;
drivers/video/mxc/mxc_elcdif_fb.c:1109:				&data->frame_done_complete, 1 * HZ);
drivers/video/mxc/mxc_elcdif_fb.c:1111:		dev_err(info->device,
drivers/video/mxc/mxc_elcdif_fb.c:1113:		data->wait4framedone = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1114:		ret = -ETIME;
drivers/video/mxc/mxc_elcdif_fb.c:1124:	int ret = -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:1133:				(struct mxc_elcdif_fb_data *)info->par;
drivers/video/mxc/mxc_elcdif_fb.c:1135:			if (put_user(data->cur_blank, (__u32 __user *)arg))
drivers/video/mxc/mxc_elcdif_fb.c:1136:				return -EFAULT;
drivers/video/mxc/mxc_elcdif_fb.c:1148:				(struct mxc_elcdif_fb_data *)info->par;
drivers/video/mxc/mxc_elcdif_fb.c:1151:	if (data->cur_blank == blank)
drivers/video/mxc/mxc_elcdif_fb.c:1154:	data->next_blank = blank;
drivers/video/mxc/mxc_elcdif_fb.c:1162:		data->cur_blank = blank;
drivers/video/mxc/mxc_elcdif_fb.c:1172:	if (data->cur_blank != FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_elcdif_fb.c:1199:				(struct mxc_elcdif_fb_data *)info->par;
drivers/video/mxc/mxc_elcdif_fb.c:1202:	if (data->cur_blank != FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_elcdif_fb.c:1203:		dev_err(info->device, "can't do pan display when fb "
drivers/video/mxc/mxc_elcdif_fb.c:1205:		return -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:1208:	if (var->xoffset > 0) {
drivers/video/mxc/mxc_elcdif_fb.c:1209:		dev_dbg(info->device, "x panning not supported\n");
drivers/video/mxc/mxc_elcdif_fb.c:1210:		return -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:1213:	if ((var->yoffset + var->yres > var->yres_virtual)) {
drivers/video/mxc/mxc_elcdif_fb.c:1214:		dev_err(info->device, "y panning exceeds\n");
drivers/video/mxc/mxc_elcdif_fb.c:1215:		return -EINVAL;
drivers/video/mxc/mxc_elcdif_fb.c:1219:	base = (var->yoffset * var->xres_virtual + var->xoffset);
drivers/video/mxc/mxc_elcdif_fb.c:1220:	base = (var->bits_per_pixel) * base / 8;
drivers/video/mxc/mxc_elcdif_fb.c:1221:	base += info->fix.smem_start;
drivers/video/mxc/mxc_elcdif_fb.c:1223:	if (down_timeout(&data->flip_sem, HZ / 2)) {
drivers/video/mxc/mxc_elcdif_fb.c:1224:		dev_err(info->device, "timeout when waiting for flip irq\n");
drivers/video/mxc/mxc_elcdif_fb.c:1225:		return -ETIMEDOUT;
drivers/video/mxc/mxc_elcdif_fb.c:1230:	data->panning = 1;
drivers/video/mxc/mxc_elcdif_fb.c:1249: * into a non-cached, non-buffered, memory region to allow palette and pixel
drivers/video/mxc/mxc_elcdif_fb.c:1259:	if (fbi->fix.smem_len < fbi->var.yres_virtual * fbi->fix.line_length)
drivers/video/mxc/mxc_elcdif_fb.c:1260:		fbi->fix.smem_len = fbi->var.yres_virtual *
drivers/video/mxc/mxc_elcdif_fb.c:1261:				    fbi->fix.line_length;
drivers/video/mxc/mxc_elcdif_fb.c:1263:	fbi->screen_base = dma_alloc_writecombine(fbi->device,
drivers/video/mxc/mxc_elcdif_fb.c:1264:				fbi->fix.smem_len,
drivers/video/mxc/mxc_elcdif_fb.c:1265:				(dma_addr_t *)&fbi->fix.smem_start,
drivers/video/mxc/mxc_elcdif_fb.c:1267:	if (fbi->screen_base == 0) {
drivers/video/mxc/mxc_elcdif_fb.c:1268:		dev_err(fbi->device, "Unable to allocate framebuffer memory\n");
drivers/video/mxc/mxc_elcdif_fb.c:1269:		fbi->fix.smem_len = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1270:		fbi->fix.smem_start = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1271:		return -EBUSY;
drivers/video/mxc/mxc_elcdif_fb.c:1274:	dev_dbg(fbi->device, "allocated fb @ paddr=0x%08X, size=%d.\n",
drivers/video/mxc/mxc_elcdif_fb.c:1275:		(uint32_t) fbi->fix.smem_start, fbi->fix.smem_len);
drivers/video/mxc/mxc_elcdif_fb.c:1277:	fbi->screen_size = fbi->fix.smem_len;
drivers/video/mxc/mxc_elcdif_fb.c:1280:	memset((char *)fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxc_elcdif_fb.c:1286: * De-allocates the DRAM memory for the frame buffer.
drivers/video/mxc/mxc_elcdif_fb.c:1294:	dma_free_writecombine(fbi->device, fbi->fix.smem_len,
drivers/video/mxc/mxc_elcdif_fb.c:1295:			      fbi->screen_base, fbi->fix.smem_start);
drivers/video/mxc/mxc_elcdif_fb.c:1296:	fbi->screen_base = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1297:	fbi->fix.smem_start = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1298:	fbi->fix.smem_len = 0;
drivers/video/mxc/mxc_elcdif_fb.c:1308:	struct mxc_fb_platform_data *pdata = pdev->dev.platform_data;
drivers/video/mxc/mxc_elcdif_fb.c:1313:	fbi = framebuffer_alloc(sizeof(struct mxc_elcdif_fb_data), &pdev->dev);
drivers/video/mxc/mxc_elcdif_fb.c:1315:		ret = -ENOMEM;
drivers/video/mxc/mxc_elcdif_fb.c:1319:	data = (struct mxc_elcdif_fb_data *)fbi->par;
drivers/video/mxc/mxc_elcdif_fb.c:1320:	data->cur_blank = data->next_blank = FB_BLANK_UNBLANK;
drivers/video/mxc/mxc_elcdif_fb.c:1322:	fbi->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mxc_elcdif_fb.c:1323:	fbi->fbops = &mxc_elcdif_fb_ops;
drivers/video/mxc/mxc_elcdif_fb.c:1324:	fbi->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mxc_elcdif_fb.c:1325:	fbi->pseudo_palette = data->pseudo_palette;
drivers/video/mxc/mxc_elcdif_fb.c:1327:	ret = fb_alloc_cmap(&fbi->cmap, 16, 0);
drivers/video/mxc/mxc_elcdif_fb.c:1331:	g_elcdif_dev = &pdev->dev;
drivers/video/mxc/mxc_elcdif_fb.c:1335:		dev_err(&pdev->dev, "cannot get IRQ resource\n");
drivers/video/mxc/mxc_elcdif_fb.c:1336:		ret = -ENODEV;
drivers/video/mxc/mxc_elcdif_fb.c:1339:	data->dma_irq = res->start;
drivers/video/mxc/mxc_elcdif_fb.c:1341:	ret = request_irq(data->dma_irq, lcd_irq_handler, 0,
drivers/video/mxc/mxc_elcdif_fb.c:1344:		dev_err(&pdev->dev, "request_irq (%d) failed with error %d\n",
drivers/video/mxc/mxc_elcdif_fb.c:1345:				data->dma_irq, ret);
drivers/video/mxc/mxc_elcdif_fb.c:1351:		ret = -ENODEV;
drivers/video/mxc/mxc_elcdif_fb.c:1354:	elcdif_base = ioremap(res->start, SZ_4K);
drivers/video/mxc/mxc_elcdif_fb.c:1358:		fbi->fix.smem_len = res->end - res->start + 1;
drivers/video/mxc/mxc_elcdif_fb.c:1359:		fbi->fix.smem_start = res->start;
drivers/video/mxc/mxc_elcdif_fb.c:1360:		fbi->screen_base = ioremap(fbi->fix.smem_start,
drivers/video/mxc/mxc_elcdif_fb.c:1361:					   fbi->fix.smem_len);
drivers/video/mxc/mxc_elcdif_fb.c:1364:	strcpy(fbi->fix.id, "mxc_elcdif_fb");
drivers/video/mxc/mxc_elcdif_fb.c:1366:	fbi->var.xres = 800;
drivers/video/mxc/mxc_elcdif_fb.c:1367:	fbi->var.yres = 480;
drivers/video/mxc/mxc_elcdif_fb.c:1369:	if (pdata && !data->output_pix_fmt)
drivers/video/mxc/mxc_elcdif_fb.c:1370:		data->output_pix_fmt = pdata->interface_pix_fmt;
drivers/video/mxc/mxc_elcdif_fb.c:1372:	INIT_LIST_HEAD(&fbi->modelist);
drivers/video/mxc/mxc_elcdif_fb.c:1374:	if (pdata && pdata->mode && pdata->num_modes)
drivers/video/mxc/mxc_elcdif_fb.c:1375:		fb_videomode_to_modelist(pdata->mode, pdata->num_modes,
drivers/video/mxc/mxc_elcdif_fb.c:1376:				&fbi->modelist);
drivers/video/mxc/mxc_elcdif_fb.c:1393:				dev_dbg(&pdev->dev, "Added mode %d:", i);
drivers/video/mxc/mxc_elcdif_fb.c:1394:				dev_dbg(&pdev->dev,
drivers/video/mxc/mxc_elcdif_fb.c:1398:				fb_add_videomode(&mode[i], &fbi->modelist);
drivers/video/mxc/mxc_elcdif_fb.c:1403:	if (!fb_mode && pdata && pdata->mode_str)
drivers/video/mxc/mxc_elcdif_fb.c:1404:		fb_mode = pdata->mode_str;
drivers/video/mxc/mxc_elcdif_fb.c:1407:		dev_dbg(&pdev->dev, "default video mode %s\n", fb_mode);
drivers/video/mxc/mxc_elcdif_fb.c:1408:		ret = fb_find_mode(&fbi->var, fbi, fb_mode, NULL, 0, NULL,
drivers/video/mxc/mxc_elcdif_fb.c:1411:			fb_var_to_videomode(&m, &fbi->var);
drivers/video/mxc/mxc_elcdif_fb.c:1414:				&fbi->modelist);
drivers/video/mxc/mxc_elcdif_fb.c:1415:			fb_videomode_to_var(&fbi->var, mode);
drivers/video/mxc/mxc_elcdif_fb.c:1416:		} else if (pdata && pdata->mode && pdata->num_modes) {
drivers/video/mxc/mxc_elcdif_fb.c:1417:			ret = fb_find_mode(&fbi->var, fbi, fb_mode, pdata->mode,
drivers/video/mxc/mxc_elcdif_fb.c:1418:					pdata->num_modes, NULL, default_bpp);
drivers/video/mxc/mxc_elcdif_fb.c:1420:				dev_err(fbi->device,
drivers/video/mxc/mxc_elcdif_fb.c:1425:			dev_err(fbi->device,
drivers/video/mxc/mxc_elcdif_fb.c:1431:	mxc_elcdif_fb_check_var(&fbi->var, fbi);
drivers/video/mxc/mxc_elcdif_fb.c:1433:	fbi->var.xres_virtual = fbi->var.xres;
drivers/video/mxc/mxc_elcdif_fb.c:1434:	fbi->var.yres_virtual = fbi->var.yres * 3;
drivers/video/mxc/mxc_elcdif_fb.c:1438:	if (!res || !res->end)
drivers/video/mxc/mxc_elcdif_fb.c:1440:			ret = -ENOMEM;
drivers/video/mxc/mxc_elcdif_fb.c:1446:		dev_err(&pdev->dev, "can't get ELCDIF axi clk\n");
drivers/video/mxc/mxc_elcdif_fb.c:1447:		ret = -ENODEV;
drivers/video/mxc/mxc_elcdif_fb.c:1452:		dev_err(&pdev->dev, "can't get ELCDIF pix clk\n");
drivers/video/mxc/mxc_elcdif_fb.c:1453:		ret = -ENODEV;
drivers/video/mxc/mxc_elcdif_fb.c:1462:	fbi->var.activate |= FB_ACTIVATE_FORCE;
drivers/video/mxc/mxc_elcdif_fb.c:1464:	fbi->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxc_elcdif_fb.c:1465:	ret = fb_set_var(fbi, &fbi->var);
drivers/video/mxc/mxc_elcdif_fb.c:1466:	fbi->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxc_elcdif_fb.c:1469:	if (data->cur_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_elcdif_fb.c:1487:	free_irq(data->dma_irq, data);
drivers/video/mxc/mxc_elcdif_fb.c:1489:	fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxc_elcdif_fb.c:1498:	struct mxc_elcdif_fb_data *data = (struct mxc_elcdif_fb_data *)fbi->par;
drivers/video/mxc/mxc_elcdif_fb.c:1516:	free_irq(data->dma_irq, data);
drivers/video/mxc/mxc_elcdif_fb.c:1519:	if (&fbi->cmap)
drivers/video/mxc/mxc_elcdif_fb.c:1520:		fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxc_elcdif_fb.c:1534:	struct mxc_elcdif_fb_data *data = (struct mxc_elcdif_fb_data *)fbi->par;
drivers/video/mxc/mxc_elcdif_fb.c:1539:	saved_blank = data->cur_blank;
drivers/video/mxc/mxc_elcdif_fb.c:1541:	data->next_blank = saved_blank;
drivers/video/mxc/mxc_elcdif_fb.c:1556:	data->running = false;
drivers/video/mxc/mxc_elcdif_fb.c:1564:	struct mxc_elcdif_fb_data *data = (struct mxc_elcdif_fb_data *)fbi->par;
drivers/video/mxc/mxc_elcdif_fb.c:1567:	mxc_elcdif_fb_blank(data->next_blank, fbi);
drivers/video/mxc/mxc_elcdif_fb.c:1616:		return -ENODEV;
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1:cmd_drivers/video/mxc/mxc_ipuv3_fb.o := arm-reach-linux-gnueabi-gcc -Wp,-MD,drivers/video/mxc/.mxc_ipuv3_fb.o.d  -nostdinc -isystem /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include -I/home/reach/projects/reach-imx-linux/arch/arm/include -Iarch/arm/include/generated -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-mx6/include -Iarch/arm/plat-mxc/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -Os -marm -fno-dwarf2-cfi-asm -fno-omit-frame-pointer -mapcs -mno-sched-prolog -mabi=aapcs-linux -mno-thumb-interwork -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=4096 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -DCC_HAVE_ASM_GOTO    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(mxc_ipuv3_fb)"  -D"KBUILD_MODNAME=KBUILD_STR(mxc_ipuv3_fb)" -c -o drivers/video/mxc/.tmp_mxc_ipuv3_fb.o drivers/video/mxc/mxc_ipuv3_fb.c
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:32:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/types.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:33:  include/asm-generic/int-ll64.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:34:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitsperlong.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:35:  include/asm-generic/bitsperlong.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:44:  include/linux/compiler-gcc.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:47:  include/linux/compiler-gcc4.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:48:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/posix_types.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:53:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/stat.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:65:  /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include/stdarg.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:67:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/linkage.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:69:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitops.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:70:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/system.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:86:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irqflags.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:87:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ptrace.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:90:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hwcap.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:91:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/outercache.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:94:  include/asm-generic/cmpxchg-local.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:95:  include/asm-generic/bitops/non-atomic.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:96:  include/asm-generic/bitops/fls64.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:97:  include/asm-generic/bitops/sched.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:98:  include/asm-generic/bitops/hweight.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:99:  include/asm-generic/bitops/arch_hweight.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:100:  include/asm-generic/bitops/const_hweight.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:101:  include/asm-generic/bitops/lock.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:102:  include/asm-generic/bitops/le.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:103:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/byteorder.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:106:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/swab.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:117:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bug.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:120:  include/asm-generic/bug.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:122:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/div64.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:123:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cache.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:137:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/thread_info.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:139:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fpstate.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:142:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/domain.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:148:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock_types.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:154:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:156:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/processor.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:160:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hw_breakpoint.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:192:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/atomic.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:194:  include/asm-generic/atomic-long.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:223:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/current.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:233:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/string.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:234:  include/linux/pageblock-flags.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:238:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/page.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:246:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/glue.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:247:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/memory.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:254:  arch/arm/plat-mxc/include/mach/memory.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:269:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sizes.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:270:  include/asm-generic/sizes.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:271:  include/asm-generic/memory_model.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:273:  include/asm-generic/getorder.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:279:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/errno.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:280:  include/asm-generic/errno.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:281:  include/asm-generic/errno-base.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:287:  include/linux/rwsem-spinlock.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:301:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/smp.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:307:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/percpu.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:308:  include/asm-generic/percpu.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:309:  include/linux/percpu-defs.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:311:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/topology.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:312:  include/asm-generic/topology.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:327:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/param.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:329:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/timex.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:330:  arch/arm/plat-mxc/include/mach/timex.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:349:  include/linux/elf-em.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:350:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/elf.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:351:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/user.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:363:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/module.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:380:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/device.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:435:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/auxvec.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:437:  include/linux/page-debug-flags.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:440:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/mmu.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:442:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cputime.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:443:  include/asm-generic/cputime.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:446:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ipcbuf.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:447:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sembuf.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:449:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/signal.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:450:  include/asm-generic/signal-defs.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:451:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sigcontext.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:452:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/siginfo.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:453:  include/asm-generic/siginfo.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:465:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/resource.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:466:  include/asm-generic/resource.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:493:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hardirq.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:495:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irq.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:496:  arch/arm/plat-mxc/include/mach/irqs.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:556:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctl.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:557:  include/asm-generic/ioctl.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:566:  include/linux/radix-tree.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:580:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fcntl.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:581:  include/asm-generic/fcntl.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:585:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termios.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:586:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termbits.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:587:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctls.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:588:  include/asm-generic/ioctls.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:598:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/kgdb.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:601:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/io.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:602:  arch/arm/plat-mxc/include/mach/io.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:606:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/delay.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:607:  include/linux/dma-mapping.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:611:  include/linux/dma-attrs.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:613:  include/linux/dma-direction.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:616:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/scatterlist.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:617:  include/asm-generic/scatterlist.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:627:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/pgtable.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:629:  include/asm-generic/4level-fixup.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:630:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/proc-fns.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:631:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/glue-proc.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:652:  arch/arm/plat-mxc/include/mach/vmalloc.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:653:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/pgtable-hwdef.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:654:  include/asm-generic/pgtable.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:655:  include/linux/page-flags.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:665:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/dma-mapping.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:666:  include/linux/dma-debug.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:668:  include/asm-generic/dma-coherent.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:682:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/uaccess.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:683:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/unified.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:687:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/mach-types.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:688:  include/generated/mach-types.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1790:  arch/arm/plat-mxc/include/mach/ipu-v3.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1792:  arch/arm/plat-mxc/include/mach/gpio.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1793:  arch/arm/plat-mxc/include/mach/hardware.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1794:  arch/arm/plat-mxc/include/mach/mxc.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1797:  arch/arm/plat-mxc/include/mach/mx6.h \
drivers/video/mxc/.mxc_ipuv3_fb.o.cmd:1798:  include/asm-generic/gpio.h \
drivers/video/mxc/mxcfb_sii902x_elcdif.c:2: * Copyright (C) 2010-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_sii902x_elcdif.c:18: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mxcfb_sii902x_elcdif.c:49:#include <asm/mach-types.h>
drivers/video/mxc/mxcfb_sii902x_elcdif.c:76:		m->refresh, m->xres, m->yres, m->pixclock, m->left_margin,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:77:		m->right_margin, m->upper_margin, m->lower_margin,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:78:		m->hsync_len, m->vsync_len, m->sync, m->vmode, m->flag);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:92:		dev_dbg(&sii902x.client->dev, "reg[0x%02X]: 0x%02X\n",
drivers/video/mxc/mxcfb_sii902x_elcdif.c:99:	strcpy(buf, sii902x.fbi->fix.id);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:144:	dev_dbg(&sii902x.client->dev, "Sii902x: setup..\n");
drivers/video/mxc/mxcfb_sii902x_elcdif.c:150:	data[0] = PICOS2KHZ(fbi->var.pixclock) / 10;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:151:	data[2] = fbi->var.hsync_len + fbi->var.left_margin +
drivers/video/mxc/mxcfb_sii902x_elcdif.c:152:		  fbi->var.xres + fbi->var.right_margin;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:153:	data[3] = fbi->var.vsync_len + fbi->var.upper_margin +
drivers/video/mxc/mxcfb_sii902x_elcdif.c:154:		  fbi->var.yres + fbi->var.lower_margin;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:156:	refresh = (PICOS2KHZ(fbi->var.pixclock) * 1000) / refresh;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:180:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:186:		cnt--;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:192:		ret = -1;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:199:	ret = mxc_edid_read(sii902x.client->adapter, addr,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:204:		cnt--;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:211:		ret = -1;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:221:	return -1;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:231:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:238:			dev_dbg(&sii902x.pdev->dev, "EVENT=plugin\n");
drivers/video/mxc/mxcfb_sii902x_elcdif.c:247:				dev_err(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:250:				if (sii902x.fbi->monspecs.modedb_len > 0) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:256:					fb_destroy_modelist(&sii902x.fbi->modelist);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:258:					for (i = 0; i < sii902x.fbi->monspecs.modedb_len; i++) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:260:						mode = &sii902x.fbi->monspecs.modedb[i];
drivers/video/mxc/mxcfb_sii902x_elcdif.c:262:						if (!(mode->vmode & FB_VMODE_INTERLACED)) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:264:							dev_dbg(&sii902x.pdev->dev, "Added mode %d:", i);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:265:							dev_dbg(&sii902x.pdev->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:267:								mode->xres, mode->yres, mode->refresh,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:268:								mode->vmode, mode->flag);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:270:							fb_add_videomode(mode, &sii902x.fbi->modelist);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:274:					fb_var_to_videomode(&m, &sii902x.fbi->var);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:278:							&sii902x.fbi->modelist);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:280:					fb_videomode_to_var(&sii902x.fbi->var, mode);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:282:					sii902x.fbi->var.activate |= FB_ACTIVATE_FORCE;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:284:					sii902x.fbi->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:285:					fb_set_var(sii902x.fbi, &sii902x.fbi->var);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:286:					sii902x.fbi->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:296:			dev_dbg(&sii902x.pdev->dev, "EVENT=plugout\n");
drivers/video/mxc/mxcfb_sii902x_elcdif.c:302:		kobject_uevent_env(&sii902x.pdev->dev.kobj, KOBJ_CHANGE, envp);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:306:	dev_dbg(&sii902x.pdev->dev, "exit %s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:323:	struct fb_info *fbi = event->info;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:325:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:340:		if (*((int *)event->data) == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:341:			dev_dbg(&sii902x.pdev->dev, "FB_BLANK_UNBLANK\n");
drivers/video/mxc/mxcfb_sii902x_elcdif.c:344:			dev_dbg(&sii902x.pdev->dev, "FB_BLANK_BLANK\n");
drivers/video/mxc/mxcfb_sii902x_elcdif.c:360:	struct fsl_mxc_lcd_platform_data *plat = client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:363:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:368:	if (plat->get_pins)
drivers/video/mxc/mxcfb_sii902x_elcdif.c:369:		if (!plat->get_pins())
drivers/video/mxc/mxcfb_sii902x_elcdif.c:370:			return -EACCES;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:372:	if (plat->reset) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:373:		sii902x_reset = plat->reset;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:379:		dev_err(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:381:		return -ENODEV;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:385:	for (i = 10; i > 0; i--) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:390:			printk(KERN_DEBUG "-0x%02X", dat);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:392:			printk(KERN_DEBUG "-0x%02X", dat);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:394:			printk(KERN_DEBUG "-0x%02X\n", dat);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:399:		dev_err(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:401:		return -ENODEV;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:407:		dev_warn(&sii902x.client->dev, "Can not read edid\n");
drivers/video/mxc/mxcfb_sii902x_elcdif.c:413:	if (sii902x.client->irq) {
drivers/video/mxc/mxcfb_sii902x_elcdif.c:414:		ret = request_irq(sii902x.client->irq, sii902x_detect_handler,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:418:			dev_warn(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:420:				sii902x.client->irq);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:426:		ret = device_create_file(&sii902x.pdev->dev, &dev_attr_fb_name);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:428:			dev_warn(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:430:		ret = device_create_file(&sii902x.pdev->dev, &dev_attr_cable_state);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:432:			dev_warn(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:434:		ret = device_create_file(&sii902x.pdev->dev, &dev_attr_edid);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:436:			dev_warn(&sii902x.client->dev,
drivers/video/mxc/mxcfb_sii902x_elcdif.c:443:	dev_dbg(&sii902x.pdev->dev, "%s exit\n", __func__);;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:450:	struct fsl_mxc_lcd_platform_data *plat = sii902x.client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:452:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:458:	if (plat->put_pins)
drivers/video/mxc/mxcfb_sii902x_elcdif.c:459:		plat->put_pins();
drivers/video/mxc/mxcfb_sii902x_elcdif.c:478:	struct fsl_mxc_lcd_platform_data *plat = sii902x.client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:480:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:483:	if (plat->enable_pins)
drivers/video/mxc/mxcfb_sii902x_elcdif.c:484:		plat->enable_pins();
drivers/video/mxc/mxcfb_sii902x_elcdif.c:496:	struct fsl_mxc_lcd_platform_data *plat = sii902x.client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x_elcdif.c:498:	dev_dbg(&sii902x.pdev->dev, "%s\n", __func__);
drivers/video/mxc/mxcfb_sii902x_elcdif.c:507:	if (plat->disable_pins)
drivers/video/mxc/mxcfb_sii902x_elcdif.c:508:		plat->disable_pins();
drivers/video/mxc/Kconfig:11:	  See <http://www.linux-fbdev.org/> for information on framebuffer
drivers/video/mxc/Kconfig:104:	tristate "E-Ink Panel Framebuffer"
drivers/video/mxc/Kconfig:107:    bool "E-Ink Auto-update Mode Support"
drivers/video/mxc/Kconfig:118:	bool "SIPIX Auto-update Mode Support"
drivers/video/mxc/Kconfig:132:	bool "8-bit Parallel Bus Interface"
drivers/video/mxc/Kconfig:135:	bool "16-bit Parallel Bus Interface"
Binary file drivers/video/mxc/.mxc_ipuv3_fb.c.swp matches
Binary file drivers/video/mxc/.ldb.c.swp matches
drivers/video/mxc/mxcfb_ch7026.c:2: * Copyright 2009-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_ch7026.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxcfb_ch7026.c:55:	/* 8 800x600-60 VESA */
drivers/video/mxc/mxcfb_ch7026.c:73:	info->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_ch7026.c:76:	info->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_ch7026.c:84:	if (strcmp(event->info->fix.id, "DISP3 BG - DI1"))
drivers/video/mxc/mxcfb_ch7026.c:89:		lcd_init_fb(event->info);
drivers/video/mxc/mxcfb_ch7026.c:90:		lcd_poweron(event->info);
drivers/video/mxc/mxcfb_ch7026.c:93:		if (*((int *)event->data) == FB_BLANK_UNBLANK)
drivers/video/mxc/mxcfb_ch7026.c:94:			lcd_poweron(event->info);
drivers/video/mxc/mxcfb_ch7026.c:117:	struct mxc_lcd_platform_data *plat = dev->platform_data;
drivers/video/mxc/mxcfb_ch7026.c:121:		io_reg = regulator_get(dev, plat->io_reg);
drivers/video/mxc/mxcfb_ch7026.c:129:		core_reg = regulator_get(dev, plat->core_reg);
drivers/video/mxc/mxcfb_ch7026.c:136:		analog_reg = regulator_get(dev, plat->analog_reg);
drivers/video/mxc/mxcfb_ch7026.c:145:		lcd_reset = plat->reset;
drivers/video/mxc/mxcfb_ch7026.c:151:		if (strcmp(registered_fb[i]->fix.id, "DISP3 BG - DI1") == 0) {
drivers/video/mxc/mxcfb_ch7026.c:180:	return lcd_probe(&client->dev);
drivers/video/mxc/mxcfb_ch7026.c:277:	dev_dbg(&ch7026_client->dev, "initializing CH7026\n");
drivers/video/mxc/mxcfb_ch7026.c:282:	dev_dbg(&ch7026_client->dev, "read id = 0x%02X\n", dat);
drivers/video/mxc/mxcfb_ch7026.c:284:		return -ENODEV;
drivers/video/mxc/mxcfb_ch7026.c:289:			return -EIO;
drivers/video/mxc/mxcfb_ch7026.c:308:	dev_dbg(&ch7026_client->dev, "turning on LCD\n");
drivers/video/mxc/mxcfb_ch7026.c:310:	data[0] = PICOS2KHZ(info->var.pixclock) / 10;
drivers/video/mxc/mxcfb_ch7026.c:311:	data[2] = info->var.hsync_len + info->var.left_margin +
drivers/video/mxc/mxcfb_ch7026.c:312:	    info->var.xres + info->var.right_margin;
drivers/video/mxc/mxcfb_ch7026.c:313:	data[3] = info->var.vsync_len + info->var.upper_margin +
drivers/video/mxc/mxcfb_ch7026.c:314:	    info->var.yres + info->var.lower_margin;
drivers/video/mxc/mxcfb_ch7026.c:317:	refresh = (PICOS2KHZ(info->var.pixclock) * 1000) / refresh;
drivers/video/mxc/mxcfb_ch7026.c:332:	dev_dbg(&ch7026_client->dev, "turning off LCD\n");
drivers/video/mxc/mxc_spdc_fb.h:16: * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
drivers/video/mxc/mxc_spdc_fb.h:44:#include <linux/dma-mapping.h>
drivers/video/mxc/mxc_spdc_fb.h:109:	SPDC_UPDATE_W_H_MAX_SIZE = ((0x1 << 12) - 1),
drivers/video/mxc/mxc_spdc_fb.h:110:	SPDC_UPDATE_X_Y_MAX_SIZE = ((0x1 << 12) - 1),
drivers/video/mxc/mxc_lcdif.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxc_lcdif.c:32:	"CLAA-WVGA", 57, 800, 480, 37037, 40, 60, 10, 10, 20, 10,
drivers/video/mxc/mxc_lcdif.c:38:	"SEIKO-WVGA", 60, 800, 480, 29850, 89, 164, 23, 10, 10, 10,
drivers/video/mxc/mxc_lcdif.c:51:			= lcdif->pdev->dev.platform_data;
drivers/video/mxc/mxc_lcdif.c:56:	setting->dev_id = plat_data->ipu_id;
drivers/video/mxc/mxc_lcdif.c:57:	setting->disp_id = plat_data->disp_id;
drivers/video/mxc/mxc_lcdif.c:59:	ret = fb_find_mode(&setting->fbi->var, setting->fbi, setting->dft_mode_str,
drivers/video/mxc/mxc_lcdif.c:60:				modedb, modedb_sz, NULL, setting->default_bpp);
drivers/video/mxc/mxc_lcdif.c:62:		fb_videomode_to_var(&setting->fbi->var, &modedb[0]);
drivers/video/mxc/mxc_lcdif.c:63:		setting->if_fmt = plat_data->default_ifmt;
drivers/video/mxc/mxc_lcdif.c:66:	INIT_LIST_HEAD(&setting->fbi->modelist);
drivers/video/mxc/mxc_lcdif.c:69:		fb_var_to_videomode(&m, &setting->fbi->var);
drivers/video/mxc/mxc_lcdif.c:72:					&setting->fbi->modelist);
drivers/video/mxc/mxc_lcdif.c:100:		ret = -ENOMEM;
drivers/video/mxc/mxc_lcdif.c:104:	lcdif->pdev = pdev;
drivers/video/mxc/mxc_lcdif.c:105:	lcdif->disp_lcdif = mxc_dispdrv_register(&lcdif_drv);
drivers/video/mxc/mxc_lcdif.c:106:	mxc_dispdrv_setdata(lcdif->disp_lcdif, lcdif);
drivers/video/mxc/mxc_lcdif.c:108:	dev_set_drvdata(&pdev->dev, lcdif);
drivers/video/mxc/mxc_lcdif.c:116:	struct mxc_lcdif_data *lcdif = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/mxc_lcdif.c:118:	mxc_dispdrv_puthandle(lcdif->disp_lcdif);
drivers/video/mxc/mxc_lcdif.c:119:	mxc_dispdrv_unregister(lcdif->disp_lcdif);
drivers/video/mxc/.ldb.o.cmd:1:cmd_drivers/video/mxc/ldb.o := arm-reach-linux-gnueabi-gcc -Wp,-MD,drivers/video/mxc/.ldb.o.d  -nostdinc -isystem /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include -I/home/reach/projects/reach-imx-linux/arch/arm/include -Iarch/arm/include/generated -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-mx6/include -Iarch/arm/plat-mxc/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -Os -marm -fno-dwarf2-cfi-asm -fno-omit-frame-pointer -mapcs -mno-sched-prolog -mabi=aapcs-linux -mno-thumb-interwork -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=4096 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -DCC_HAVE_ASM_GOTO    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(ldb)"  -D"KBUILD_MODNAME=KBUILD_STR(ldb)" -c -o drivers/video/mxc/.tmp_ldb.o drivers/video/mxc/ldb.c
drivers/video/mxc/.ldb.o.cmd:12:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/types.h \
drivers/video/mxc/.ldb.o.cmd:13:  include/asm-generic/int-ll64.h \
drivers/video/mxc/.ldb.o.cmd:14:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitsperlong.h \
drivers/video/mxc/.ldb.o.cmd:15:  include/asm-generic/bitsperlong.h \
drivers/video/mxc/.ldb.o.cmd:24:  include/linux/compiler-gcc.h \
drivers/video/mxc/.ldb.o.cmd:27:  include/linux/compiler-gcc4.h \
drivers/video/mxc/.ldb.o.cmd:28:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/posix_types.h \
drivers/video/mxc/.ldb.o.cmd:54:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/errno.h \
drivers/video/mxc/.ldb.o.cmd:55:  include/asm-generic/errno.h \
drivers/video/mxc/.ldb.o.cmd:56:  include/asm-generic/errno-base.h \
drivers/video/mxc/.ldb.o.cmd:64:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/atomic.h \
drivers/video/mxc/.ldb.o.cmd:67:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/system.h \
drivers/video/mxc/.ldb.o.cmd:78:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/linkage.h \
drivers/video/mxc/.ldb.o.cmd:84:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irqflags.h \
drivers/video/mxc/.ldb.o.cmd:85:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ptrace.h \
drivers/video/mxc/.ldb.o.cmd:88:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hwcap.h \
drivers/video/mxc/.ldb.o.cmd:89:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/outercache.h \
drivers/video/mxc/.ldb.o.cmd:92:  include/asm-generic/cmpxchg-local.h \
drivers/video/mxc/.ldb.o.cmd:93:  include/asm-generic/atomic-long.h \
drivers/video/mxc/.ldb.o.cmd:104:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitops.h \
drivers/video/mxc/.ldb.o.cmd:105:  include/asm-generic/bitops/non-atomic.h \
drivers/video/mxc/.ldb.o.cmd:106:  include/asm-generic/bitops/fls64.h \
drivers/video/mxc/.ldb.o.cmd:107:  include/asm-generic/bitops/sched.h \
drivers/video/mxc/.ldb.o.cmd:108:  include/asm-generic/bitops/hweight.h \
drivers/video/mxc/.ldb.o.cmd:109:  include/asm-generic/bitops/arch_hweight.h \
drivers/video/mxc/.ldb.o.cmd:110:  include/asm-generic/bitops/const_hweight.h \
drivers/video/mxc/.ldb.o.cmd:111:  include/asm-generic/bitops/lock.h \
drivers/video/mxc/.ldb.o.cmd:112:  include/asm-generic/bitops/le.h \
drivers/video/mxc/.ldb.o.cmd:113:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/byteorder.h \
drivers/video/mxc/.ldb.o.cmd:116:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/swab.h \
drivers/video/mxc/.ldb.o.cmd:118:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/thread_info.h \
drivers/video/mxc/.ldb.o.cmd:120:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fpstate.h \
drivers/video/mxc/.ldb.o.cmd:123:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/domain.h \
drivers/video/mxc/.ldb.o.cmd:133:  /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include/stdarg.h \
drivers/video/mxc/.ldb.o.cmd:139:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bug.h \
drivers/video/mxc/.ldb.o.cmd:142:  include/asm-generic/bug.h \
drivers/video/mxc/.ldb.o.cmd:145:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/div64.h \
drivers/video/mxc/.ldb.o.cmd:149:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock_types.h \
drivers/video/mxc/.ldb.o.cmd:151:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock.h \
drivers/video/mxc/.ldb.o.cmd:153:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/processor.h \
drivers/video/mxc/.ldb.o.cmd:157:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hw_breakpoint.h \
drivers/video/mxc/.ldb.o.cmd:191:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/current.h \
drivers/video/mxc/.ldb.o.cmd:204:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/stat.h \
drivers/video/mxc/.ldb.o.cmd:209:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cache.h \
drivers/video/mxc/.ldb.o.cmd:249:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/string.h \
drivers/video/mxc/.ldb.o.cmd:250:  include/linux/pageblock-flags.h \
drivers/video/mxc/.ldb.o.cmd:254:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/page.h \
drivers/video/mxc/.ldb.o.cmd:262:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/glue.h \
drivers/video/mxc/.ldb.o.cmd:263:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/memory.h \
drivers/video/mxc/.ldb.o.cmd:270:  arch/arm/plat-mxc/include/mach/memory.h \
drivers/video/mxc/.ldb.o.cmd:285:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sizes.h \
drivers/video/mxc/.ldb.o.cmd:286:  include/asm-generic/sizes.h \
drivers/video/mxc/.ldb.o.cmd:287:  include/asm-generic/memory_model.h \
drivers/video/mxc/.ldb.o.cmd:289:  include/asm-generic/getorder.h \
drivers/video/mxc/.ldb.o.cmd:299:  include/linux/rwsem-spinlock.h \
drivers/video/mxc/.ldb.o.cmd:313:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/smp.h \
drivers/video/mxc/.ldb.o.cmd:319:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/percpu.h \
drivers/video/mxc/.ldb.o.cmd:320:  include/asm-generic/percpu.h \
drivers/video/mxc/.ldb.o.cmd:321:  include/linux/percpu-defs.h \
drivers/video/mxc/.ldb.o.cmd:323:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/topology.h \
drivers/video/mxc/.ldb.o.cmd:324:  include/asm-generic/topology.h \
drivers/video/mxc/.ldb.o.cmd:339:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/param.h \
drivers/video/mxc/.ldb.o.cmd:341:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/timex.h \
drivers/video/mxc/.ldb.o.cmd:342:  arch/arm/plat-mxc/include/mach/timex.h \
drivers/video/mxc/.ldb.o.cmd:361:  include/linux/elf-em.h \
drivers/video/mxc/.ldb.o.cmd:362:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/elf.h \
drivers/video/mxc/.ldb.o.cmd:363:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/user.h \
drivers/video/mxc/.ldb.o.cmd:371:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/module.h \
drivers/video/mxc/.ldb.o.cmd:378:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/device.h \
drivers/video/mxc/.ldb.o.cmd:390:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/io.h \
drivers/video/mxc/.ldb.o.cmd:391:  arch/arm/plat-mxc/include/mach/io.h \
drivers/video/mxc/.ldb.o.cmd:398:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctl.h \
drivers/video/mxc/.ldb.o.cmd:399:  include/asm-generic/ioctl.h \
drivers/video/mxc/.ldb.o.cmd:412:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hardirq.h \
drivers/video/mxc/.ldb.o.cmd:414:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irq.h \
drivers/video/mxc/.ldb.o.cmd:415:  arch/arm/plat-mxc/include/mach/irqs.h \
drivers/video/mxc/.ldb.o.cmd:488:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/auxvec.h \
drivers/video/mxc/.ldb.o.cmd:490:  include/linux/page-debug-flags.h \
drivers/video/mxc/.ldb.o.cmd:493:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/mmu.h \
drivers/video/mxc/.ldb.o.cmd:495:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cputime.h \
drivers/video/mxc/.ldb.o.cmd:496:  include/asm-generic/cputime.h \
drivers/video/mxc/.ldb.o.cmd:499:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ipcbuf.h \
drivers/video/mxc/.ldb.o.cmd:500:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sembuf.h \
drivers/video/mxc/.ldb.o.cmd:502:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/signal.h \
drivers/video/mxc/.ldb.o.cmd:503:  include/asm-generic/signal-defs.h \
drivers/video/mxc/.ldb.o.cmd:504:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sigcontext.h \
drivers/video/mxc/.ldb.o.cmd:505:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/siginfo.h \
drivers/video/mxc/.ldb.o.cmd:506:  include/asm-generic/siginfo.h \
drivers/video/mxc/.ldb.o.cmd:518:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/resource.h \
drivers/video/mxc/.ldb.o.cmd:519:  include/asm-generic/resource.h \
drivers/video/mxc/.ldb.o.cmd:569:  include/linux/radix-tree.h \
drivers/video/mxc/.ldb.o.cmd:583:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fcntl.h \
drivers/video/mxc/.ldb.o.cmd:584:  include/asm-generic/fcntl.h \
drivers/video/mxc/.ldb.o.cmd:587:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termios.h \
drivers/video/mxc/.ldb.o.cmd:588:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termbits.h \
drivers/video/mxc/.ldb.o.cmd:589:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctls.h \
drivers/video/mxc/.ldb.o.cmd:590:  include/asm-generic/ioctls.h \
drivers/video/mxc/.ldb.o.cmd:600:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/kgdb.h \
drivers/video/mxc/.ldb.o.cmd:618:  arch/arm/plat-mxc/include/mach/hardware.h \
drivers/video/mxc/.ldb.o.cmd:619:  arch/arm/plat-mxc/include/mach/mxc.h \
drivers/video/mxc/.ldb.o.cmd:622:  arch/arm/plat-mxc/include/mach/mx6.h \
drivers/video/mxc/.ldb.o.cmd:623:  arch/arm/plat-mxc/include/mach/clock.h \
drivers/video/mxc/mxcfb_sii902x.c:2: * Copyright (C) 2010-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_sii902x.c:18: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mxcfb_sii902x.c:51:#include <asm/mach-types.h>
drivers/video/mxc/mxcfb_sii902x.c:209:	 * 	0 = CEA-861 VIC; 1 = HDMI_VIC; 2 = 3D
drivers/video/mxc/mxcfb_sii902x.c:279:	i2c_smbus_read_i2c_block_data(sii902x->client, reg, len, buf);
drivers/video/mxc/mxcfb_sii902x.c:281:		dev_dbg(&sii902x->client->dev, "reg[0x%02X]: 0x%02X\n",
drivers/video/mxc/mxcfb_sii902x.c:290:	strcpy(buf, sii902x->fbi->fix.id);
drivers/video/mxc/mxcfb_sii902x.c:303:	if (sii902x->cable_plugin == false)
drivers/video/mxc/mxcfb_sii902x.c:322:					sii902x->edid[j*16 + i]);
drivers/video/mxc/mxcfb_sii902x.c:331:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:335: *-----------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:346:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:350: *-----------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:361:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:365: *----------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:377:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:384: *----------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:393:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:400: *------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:409:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:413: *----------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:429:	if (sii902x->power_state != state) {
drivers/video/mxc/mxcfb_sii902x.c:430:		read_modify_tpi(sii902x->client, TPI_DEVICE_POWER_STATE_CTRL_REG,
drivers/video/mxc/mxcfb_sii902x.c:432:		sii902x->power_state = state;
drivers/video/mxc/mxcfb_sii902x.c:442:	dev_dbg(&sii902x->client->dev, "set AVI frame\n");
drivers/video/mxc/mxcfb_sii902x.c:446:	if (sii902x->edid_cfg.cea_ycbcr444)
drivers/video/mxc/mxcfb_sii902x.c:448:	else if (sii902x->edid_cfg.cea_ycbcr422)
drivers/video/mxc/mxcfb_sii902x.c:460:	if (sii902x->ocolor_space == XVYCC444) {
drivers/video/mxc/mxcfb_sii902x.c:462:		if (sii902x->colorimetry == COLORIMETRY_601)
drivers/video/mxc/mxcfb_sii902x.c:464:		else if (sii902x->colorimetry == COLORIMETRY_709)
drivers/video/mxc/mxcfb_sii902x.c:466:	} else if (sii902x->ocolor_space != RGB) {
drivers/video/mxc/mxcfb_sii902x.c:467:		if (sii902x->colorimetry == COLORIMETRY_709)
drivers/video/mxc/mxcfb_sii902x.c:469:		else if (sii902x->colorimetry == COLORIMETRY_601)
drivers/video/mxc/mxcfb_sii902x.c:477:	avi_data[4] = sii902x->vic;
drivers/video/mxc/mxcfb_sii902x.c:480:	if (sii902x->aspect_ratio == VMD_ASPECT_RATIO_16x9)
drivers/video/mxc/mxcfb_sii902x.c:485:       avi_data[2] |= SAME_AS_AR;  /* AVI Byte2: R3..R1 - Set to "Same as Picture Aspect Ratio" */
drivers/video/mxc/mxcfb_sii902x.c:486:       avi_data[5] = sii902x->pixrep; /* AVI Byte5: Pixel Replication - PR3..PR0 */
drivers/video/mxc/mxcfb_sii902x.c:492:       avi_data[0] = 0x100 - avi_data[0];
drivers/video/mxc/mxcfb_sii902x.c:496:		i2c_smbus_write_byte_data(sii902x->client,
drivers/video/mxc/mxcfb_sii902x.c:505:/*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:509:*              (2) speaker configuration per CEA-861D Tables 19, 20
drivers/video/mxc/mxcfb_sii902x.c:513:*------------------------------------------------------------------------------
drivers/video/mxc/mxcfb_sii902x.c:520:	u8 channel_count = sii902x->audio_channels & 0x07;
drivers/video/mxc/mxcfb_sii902x.c:523:	dev_dbg(&sii902x->client->dev, "set AIF frame\n");
drivers/video/mxc/mxcfb_sii902x.c:528:	i2c_smbus_write_byte_data(sii902x->client, MISC_INFO_FRAMES_CTRL, DISABLE_AUDIO);
drivers/video/mxc/mxcfb_sii902x.c:533:	/* Calculate checksum - 0x84 + 0x01 + 0x0A */
drivers/video/mxc/mxcfb_sii902x.c:545:	aif_data[3] = 0x100 - aif_data[3];
drivers/video/mxc/mxcfb_sii902x.c:547:	/* Re-enable Audio InfoFrame transmission and repeat */
drivers/video/mxc/mxcfb_sii902x.c:548:	i2c_smbus_write_byte_data(sii902x->client, MISC_INFO_FRAMES_CTRL, EN_AND_RPT_AUDIO);
drivers/video/mxc/mxcfb_sii902x.c:551:		i2c_smbus_write_byte_data(sii902x->client,
drivers/video/mxc/mxcfb_sii902x.c:559:	dev_dbg(&sii902x->client->dev, "set audio\n");
drivers/video/mxc/mxcfb_sii902x.c:562:	read_modify_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG,
drivers/video/mxc/mxcfb_sii902x.c:564:	if (sii902x->audio_mode == AMODE_I2S) {
drivers/video/mxc/mxcfb_sii902x.c:565:		read_modify_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG,
drivers/video/mxc/mxcfb_sii902x.c:567:		i2c_smbus_write_byte_data(sii902x->client, TPI_AUDIO_HANDLING,
drivers/video/mxc/mxcfb_sii902x.c:570:		read_modify_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG,
drivers/video/mxc/mxcfb_sii902x.c:572:		i2c_smbus_write_byte_data(sii902x->client, TPI_AUDIO_HANDLING,
drivers/video/mxc/mxcfb_sii902x.c:576:	if (sii902x->audio_channels == ACHANNEL_2CH)
drivers/video/mxc/mxcfb_sii902x.c:577:		read_clr_write_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG, 0x20);
drivers/video/mxc/mxcfb_sii902x.c:579:		read_set_write_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG, 0x20);
drivers/video/mxc/mxcfb_sii902x.c:581:	if (sii902x->audio_mode == AMODE_I2S) {
drivers/video/mxc/mxcfb_sii902x.c:582:		/* I2S - Map channels */
drivers/video/mxc/mxcfb_sii902x.c:583:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_EN, 0x80);
drivers/video/mxc/mxcfb_sii902x.c:585:		if (sii902x->audio_channels > ACHANNEL_2CH)
drivers/video/mxc/mxcfb_sii902x.c:586:			i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_EN, 0x91);
drivers/video/mxc/mxcfb_sii902x.c:588:		if (sii902x->audio_channels > ACHANNEL_4CH)
drivers/video/mxc/mxcfb_sii902x.c:589:			i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_EN, 0xA2);
drivers/video/mxc/mxcfb_sii902x.c:591:		if (sii902x->audio_channels > ACHANNEL_6CH)
drivers/video/mxc/mxcfb_sii902x.c:592:			i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_EN, 0xB3);
drivers/video/mxc/mxcfb_sii902x.c:594:		/* I2S - Stream Header Settings */
drivers/video/mxc/mxcfb_sii902x.c:595:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_CHST_0, 0x00);
drivers/video/mxc/mxcfb_sii902x.c:596:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_CHST_1, 0x00);
drivers/video/mxc/mxcfb_sii902x.c:597:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_CHST_2, 0x00);
drivers/video/mxc/mxcfb_sii902x.c:598:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_CHST_3, sii902x->audiofs);
drivers/video/mxc/mxcfb_sii902x.c:599:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_CHST_4,
drivers/video/mxc/mxcfb_sii902x.c:600:					(sii902x->audiofs << 4) | sii902x->audio_word_len);
drivers/video/mxc/mxcfb_sii902x.c:603:		write_idx_reg(sii902x->client, INDEXED_PAGE_1, 0x24, sii902x->audio_word_len);
drivers/video/mxc/mxcfb_sii902x.c:605:		/* I2S - Input Configuration */
drivers/video/mxc/mxcfb_sii902x.c:606:		i2c_smbus_write_byte_data(sii902x->client, TPI_I2S_IN_CFG, sii902x->audio_i2s_fmt);
drivers/video/mxc/mxcfb_sii902x.c:609:	i2c_smbus_write_byte_data(sii902x->client, TPI_AUDIO_SAMPLE_CTRL, REFER_TO_STREAM_HDR);
drivers/video/mxc/mxcfb_sii902x.c:614:	read_modify_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG, AUDIO_MUTE_MASK, AUDIO_MUTE_NORMAL);
drivers/video/mxc/mxcfb_sii902x.c:626:	dev_dbg(&sii902x->client->dev, "setup..\n");
drivers/video/mxc/mxcfb_sii902x.c:628:	sii902x->vic = mxc_edid_var_to_vic(&fbi->var);
drivers/video/mxc/mxcfb_sii902x.c:631:	data[0] = PICOS2KHZ(fbi->var.pixclock) / 10;
drivers/video/mxc/mxcfb_sii902x.c:632:	data[2] = fbi->var.hsync_len + fbi->var.left_margin +
drivers/video/mxc/mxcfb_sii902x.c:633:		  fbi->var.xres + fbi->var.right_margin;
drivers/video/mxc/mxcfb_sii902x.c:634:	data[3] = fbi->var.vsync_len + fbi->var.upper_margin +
drivers/video/mxc/mxcfb_sii902x.c:635:		  fbi->var.yres + fbi->var.lower_margin;
drivers/video/mxc/mxcfb_sii902x.c:637:	refresh = (PICOS2KHZ(fbi->var.pixclock) * 1000) / refresh;
drivers/video/mxc/mxcfb_sii902x.c:641:		i2c_smbus_write_byte_data(sii902x->client, i, tmp[i]);
drivers/video/mxc/mxcfb_sii902x.c:645:	if (fbi->fbops->fb_ioctl) {
drivers/video/mxc/mxcfb_sii902x.c:648:		fbi->fbops->fb_ioctl(fbi, MXCFB_GET_DIFMT, (unsigned long)&fmt);
drivers/video/mxc/mxcfb_sii902x.c:651:			sii902x->icolor_space = YCBCR444;
drivers/video/mxc/mxcfb_sii902x.c:652:			dev_dbg(&sii902x->client->dev, "input color space YUV\n");
drivers/video/mxc/mxcfb_sii902x.c:654:			sii902x->icolor_space = RGB;
drivers/video/mxc/mxcfb_sii902x.c:655:			dev_dbg(&sii902x->client->dev, "input color space RGB\n");
drivers/video/mxc/mxcfb_sii902x.c:660:	sii902x->tpivmode[0] = 0x70;
drivers/video/mxc/mxcfb_sii902x.c:662:	if (sii902x->icolor_space == RGB)
drivers/video/mxc/mxcfb_sii902x.c:663:		sii902x->tpivmode[1] =
drivers/video/mxc/mxcfb_sii902x.c:665:	else if (sii902x->icolor_space == YCBCR444)
drivers/video/mxc/mxcfb_sii902x.c:666:		sii902x->tpivmode[1] =
drivers/video/mxc/mxcfb_sii902x.c:668:	else if ((sii902x->icolor_space == YCBCR422_16BITS) || (sii902x->icolor_space == YCBCR422_8BITS))
drivers/video/mxc/mxcfb_sii902x.c:669:		sii902x->tpivmode[1] =
drivers/video/mxc/mxcfb_sii902x.c:672:	sii902x->tpivmode[2] = 0x00;
drivers/video/mxc/mxcfb_sii902x.c:674:	if (fbi->var.vmode & FB_VMODE_ASPECT_16_9)
drivers/video/mxc/mxcfb_sii902x.c:675:		sii902x->aspect_ratio = VMD_ASPECT_RATIO_16x9;
drivers/video/mxc/mxcfb_sii902x.c:676:	else if (fbi->var.vmode & FB_VMODE_ASPECT_4_3)
drivers/video/mxc/mxcfb_sii902x.c:677:		sii902x->aspect_ratio = VMD_ASPECT_RATIO_4x3;
drivers/video/mxc/mxcfb_sii902x.c:678:	else if (fbi->var.xres/16 == fbi->var.yres/9)
drivers/video/mxc/mxcfb_sii902x.c:679:		sii902x->aspect_ratio = VMD_ASPECT_RATIO_16x9;
drivers/video/mxc/mxcfb_sii902x.c:681:		sii902x->aspect_ratio = VMD_ASPECT_RATIO_4x3;
drivers/video/mxc/mxcfb_sii902x.c:683:	if ((sii902x->vic == 6) || (sii902x->vic == 7) ||
drivers/video/mxc/mxcfb_sii902x.c:684:		(sii902x->vic == 21) || (sii902x->vic == 22) ||
drivers/video/mxc/mxcfb_sii902x.c:685:		(sii902x->vic == 2) || (sii902x->vic == 3) ||
drivers/video/mxc/mxcfb_sii902x.c:686:		(sii902x->vic == 17) || (sii902x->vic == 18)) {
drivers/video/mxc/mxcfb_sii902x.c:687:		sii902x->tpivmode[2] &= ~0x10; /*BT.601*/
drivers/video/mxc/mxcfb_sii902x.c:688:		sii902x->colorimetry = COLORIMETRY_601;
drivers/video/mxc/mxcfb_sii902x.c:689:		sii902x->aspect_ratio = VMD_ASPECT_RATIO_4x3;
drivers/video/mxc/mxcfb_sii902x.c:691:		sii902x->tpivmode[2] |= 0x10; /*BT.709*/
drivers/video/mxc/mxcfb_sii902x.c:692:		sii902x->colorimetry = COLORIMETRY_709;
drivers/video/mxc/mxcfb_sii902x.c:695:	if ((sii902x->vic == 10) || (sii902x->vic == 11) ||
drivers/video/mxc/mxcfb_sii902x.c:696:		(sii902x->vic == 12) || (sii902x->vic == 13) ||
drivers/video/mxc/mxcfb_sii902x.c:697:		(sii902x->vic == 14) || (sii902x->vic == 15) ||
drivers/video/mxc/mxcfb_sii902x.c:698:		(sii902x->vic == 25) || (sii902x->vic == 26) ||
drivers/video/mxc/mxcfb_sii902x.c:699:		(sii902x->vic == 27) || (sii902x->vic == 28) ||
drivers/video/mxc/mxcfb_sii902x.c:700:		(sii902x->vic == 29) || (sii902x->vic == 30) ||
drivers/video/mxc/mxcfb_sii902x.c:701:		(sii902x->vic == 35) || (sii902x->vic == 36) ||
drivers/video/mxc/mxcfb_sii902x.c:702:		(sii902x->vic == 37) || (sii902x->vic == 38))
drivers/video/mxc/mxcfb_sii902x.c:703:		sii902x->pixrep = 1;
drivers/video/mxc/mxcfb_sii902x.c:705:		sii902x->pixrep = 0;
drivers/video/mxc/mxcfb_sii902x.c:707:	dev_dbg(&sii902x->client->dev, "vic %d\n", sii902x->vic);
drivers/video/mxc/mxcfb_sii902x.c:708:	dev_dbg(&sii902x->client->dev, "pixrep %d\n", sii902x->pixrep);
drivers/video/mxc/mxcfb_sii902x.c:709:	if (sii902x->aspect_ratio == VMD_ASPECT_RATIO_4x3) {
drivers/video/mxc/mxcfb_sii902x.c:710:		dev_dbg(&sii902x->client->dev, "aspect 4:3\n");
drivers/video/mxc/mxcfb_sii902x.c:712:		dev_dbg(&sii902x->client->dev, "aspect 16:9\n");
drivers/video/mxc/mxcfb_sii902x.c:714:	if (sii902x->colorimetry == COLORIMETRY_601) {
drivers/video/mxc/mxcfb_sii902x.c:715:		dev_dbg(&sii902x->client->dev, "COLORIMETRY_601\n");
drivers/video/mxc/mxcfb_sii902x.c:717:		dev_dbg(&sii902x->client->dev, "COLORIMETRY_709\n");
drivers/video/mxc/mxcfb_sii902x.c:719:	dev_dbg(&sii902x->client->dev, "hdmi capbility %d\n", sii902x->edid_cfg.hdmi_cap);
drivers/video/mxc/mxcfb_sii902x.c:721:	sii902x->ocolor_space = RGB;
drivers/video/mxc/mxcfb_sii902x.c:722:	if (sii902x->edid_cfg.hdmi_cap) {
drivers/video/mxc/mxcfb_sii902x.c:723:		if (sii902x->edid_cfg.cea_ycbcr444) {
drivers/video/mxc/mxcfb_sii902x.c:724:			sii902x->ocolor_space = YCBCR444;
drivers/video/mxc/mxcfb_sii902x.c:725:			sii902x->tpivmode[2] |= 0x1; /*Ycbcr444*/
drivers/video/mxc/mxcfb_sii902x.c:726:		} else if (sii902x->edid_cfg.cea_ycbcr422) {
drivers/video/mxc/mxcfb_sii902x.c:727:			sii902x->ocolor_space = YCBCR422_8BITS;
drivers/video/mxc/mxcfb_sii902x.c:728:			sii902x->tpivmode[2] |= 0x2; /*Ycbcr422*/
drivers/video/mxc/mxcfb_sii902x.c:732:	dev_dbg(&sii902x->client->dev, "write reg 0x08 0X%2X\n", sii902x->tpivmode[0]);
drivers/video/mxc/mxcfb_sii902x.c:733:	dev_dbg(&sii902x->client->dev, "write reg 0x09 0X%2X\n", sii902x->tpivmode[1]);
drivers/video/mxc/mxcfb_sii902x.c:734:	dev_dbg(&sii902x->client->dev, "write reg 0x0a 0X%2X\n", sii902x->tpivmode[2]);
drivers/video/mxc/mxcfb_sii902x.c:736:	i2c_smbus_write_byte_data(sii902x->client, TPI_PIX_REPETITION, sii902x->tpivmode[0]);
drivers/video/mxc/mxcfb_sii902x.c:737:	i2c_smbus_write_byte_data(sii902x->client, TPI_INPUT_FORMAT_REG, sii902x->tpivmode[1]);
drivers/video/mxc/mxcfb_sii902x.c:738:	i2c_smbus_write_byte_data(sii902x->client, TPI_OUTPUT_FORMAT_REG, sii902x->tpivmode[2]);
drivers/video/mxc/mxcfb_sii902x.c:743:	if (sii902x->edid_cfg.hdmi_cap) {
drivers/video/mxc/mxcfb_sii902x.c:748:		i2c_smbus_write_byte_data(sii902x->client, TPI_END_RIGHT_BAR_MSB, 0x00);
drivers/video/mxc/mxcfb_sii902x.c:751:		read_modify_tpi(sii902x->client, TPI_AUDIO_INTERFACE_REG,
drivers/video/mxc/mxcfb_sii902x.c:764:	old = i2c_smbus_read_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG);
drivers/video/mxc/mxcfb_sii902x.c:766:	i2c_smbus_write_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG, old | 0x4);
drivers/video/mxc/mxcfb_sii902x.c:768:		cnt--;
drivers/video/mxc/mxcfb_sii902x.c:770:		dat = i2c_smbus_read_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG);
drivers/video/mxc/mxcfb_sii902x.c:774:		ret = -1;
drivers/video/mxc/mxcfb_sii902x.c:778:	i2c_smbus_write_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG, old | 0x06);
drivers/video/mxc/mxcfb_sii902x.c:781:	memcpy(edid_old, sii902x->edid, SII_EDID_LEN);
drivers/video/mxc/mxcfb_sii902x.c:784:	ret = mxc_edid_read(sii902x->client->adapter, addr,
drivers/video/mxc/mxcfb_sii902x.c:785:				sii902x->edid, &sii902x->edid_cfg, fbi);
drivers/video/mxc/mxcfb_sii902x.c:789:		cnt--;
drivers/video/mxc/mxcfb_sii902x.c:790:		i2c_smbus_write_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG, old & ~0x6);
drivers/video/mxc/mxcfb_sii902x.c:792:		dat = i2c_smbus_read_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG);
drivers/video/mxc/mxcfb_sii902x.c:796:		ret = -1;
drivers/video/mxc/mxcfb_sii902x.c:799:	i2c_smbus_write_byte_data(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG, old);
drivers/video/mxc/mxcfb_sii902x.c:801:	if (!memcmp(edid_old, sii902x->edid, SII_EDID_LEN))
drivers/video/mxc/mxcfb_sii902x.c:802:		ret = -2;
drivers/video/mxc/mxcfb_sii902x.c:809:	return -1;
drivers/video/mxc/mxcfb_sii902x.c:819:	if (sii902x->edid_cfg.hdmi_cap)
drivers/video/mxc/mxcfb_sii902x.c:820:		read_modify_tpi(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG,
drivers/video/mxc/mxcfb_sii902x.c:823:		read_modify_tpi(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG,
drivers/video/mxc/mxcfb_sii902x.c:826:	read_modify_tpi(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG,
drivers/video/mxc/mxcfb_sii902x.c:830:	i2c_smbus_write_byte_data(sii902x->client, TPI_PIX_REPETITION,
drivers/video/mxc/mxcfb_sii902x.c:831:				sii902x->tpivmode[0]);
drivers/video/mxc/mxcfb_sii902x.c:836:	read_modify_tpi(sii902x->client, TPI_SYSTEM_CONTROL_DATA_REG,
drivers/video/mxc/mxcfb_sii902x.c:846:	struct fsl_mxc_lcd_platform_data *plat = sii902x->client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x.c:848:	dev_dbg(&sii902x->client->dev, "power on\n");
drivers/video/mxc/mxcfb_sii902x.c:851:	if (plat->enable_pins)
drivers/video/mxc/mxcfb_sii902x.c:852:		plat->enable_pins();
drivers/video/mxc/mxcfb_sii902x.c:854:	if (sii902x->rx_powerup)
drivers/video/mxc/mxcfb_sii902x.c:860:	struct fsl_mxc_lcd_platform_data *plat = sii902x->client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x.c:862:	dev_dbg(&sii902x->client->dev, "power off\n");
drivers/video/mxc/mxcfb_sii902x.c:865:	if (plat->disable_pins)
drivers/video/mxc/mxcfb_sii902x.c:866:		plat->disable_pins();
drivers/video/mxc/mxcfb_sii902x.c:868:	if (sii902x->rx_powerup)
drivers/video/mxc/mxcfb_sii902x.c:875:	dev_dbg(&sii902x->client->dev, "rx power up\n");
drivers/video/mxc/mxcfb_sii902x.c:877:	if (sii902x->need_mode_change) {
drivers/video/mxc/mxcfb_sii902x.c:878:		sii902x->fbi->var.activate |= FB_ACTIVATE_FORCE;
drivers/video/mxc/mxcfb_sii902x.c:880:		sii902x->fbi->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_sii902x.c:881:		fb_set_var(sii902x->fbi, &sii902x->fbi->var);
drivers/video/mxc/mxcfb_sii902x.c:882:		sii902x->fbi->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_sii902x.c:884:		sii902x->need_mode_change = false;
drivers/video/mxc/mxcfb_sii902x.c:889:	sii902x->rx_powerup = true;
drivers/video/mxc/mxcfb_sii902x.c:894:	dev_dbg(&sii902x->client->dev, "rx power down\n");
drivers/video/mxc/mxcfb_sii902x.c:898:	sii902x->rx_powerup = false;
drivers/video/mxc/mxcfb_sii902x.c:905:	dev_dbg(&sii902x->client->dev, "cable connected\n");
drivers/video/mxc/mxcfb_sii902x.c:907:	sii902x->cable_plugin = true;
drivers/video/mxc/mxcfb_sii902x.c:910:	ret = sii902x_read_edid(sii902x, sii902x->fbi);
drivers/video/mxc/mxcfb_sii902x.c:911:	if (ret == -1)
drivers/video/mxc/mxcfb_sii902x.c:912:		dev_err(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:914:	else if (ret == -2)
drivers/video/mxc/mxcfb_sii902x.c:915:		dev_info(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:918:		if (sii902x->fbi->monspecs.modedb_len > 0) {
drivers/video/mxc/mxcfb_sii902x.c:923:			fb_destroy_modelist(&sii902x->fbi->modelist);
drivers/video/mxc/mxcfb_sii902x.c:925:			for (i = 0; i < sii902x->fbi->monspecs.modedb_len; i++) {
drivers/video/mxc/mxcfb_sii902x.c:927:				if (!(sii902x->fbi->monspecs.modedb[i].vmode & FB_VMODE_INTERLACED))
drivers/video/mxc/mxcfb_sii902x.c:928:					fb_add_videomode(&sii902x->fbi->monspecs.modedb[i],
drivers/video/mxc/mxcfb_sii902x.c:929:							&sii902x->fbi->modelist);
drivers/video/mxc/mxcfb_sii902x.c:932:			fb_var_to_videomode(&m, &sii902x->fbi->var);
drivers/video/mxc/mxcfb_sii902x.c:934:					&sii902x->fbi->modelist);
drivers/video/mxc/mxcfb_sii902x.c:936:			fb_videomode_to_var(&sii902x->fbi->var, mode);
drivers/video/mxc/mxcfb_sii902x.c:937:			sii902x->need_mode_change = true;
drivers/video/mxc/mxcfb_sii902x.c:942:	read_modify_idx_reg(sii902x->client, INDEXED_PAGE_0, 0x0a, 0x08, 0x08);
drivers/video/mxc/mxcfb_sii902x.c:949:	dev_dbg(&sii902x->client->dev, "cable disconnected\n");
drivers/video/mxc/mxcfb_sii902x.c:951:	sii902x->cable_plugin = false;
drivers/video/mxc/mxcfb_sii902x.c:963:	status = i2c_smbus_read_byte_data(sii902x->client, TPI_INTERRUPT_STATUS_REG);
drivers/video/mxc/mxcfb_sii902x.c:968:		if ((status & HOT_PLUG_STATE) != sii902x->cable_plugin) {
drivers/video/mxc/mxcfb_sii902x.c:976:			kobject_uevent_env(&sii902x->pdev->dev.kobj, KOBJ_CHANGE, envp);
drivers/video/mxc/mxcfb_sii902x.c:981:	if (((status & RX_SENSE_STATE) >> 3) != sii902x->rx_powerup) {
drivers/video/mxc/mxcfb_sii902x.c:982:		if (sii902x->cable_plugin) {
drivers/video/mxc/mxcfb_sii902x.c:991:	i2c_smbus_write_byte_data(sii902x->client, TPI_INTERRUPT_STATUS_REG, status);
drivers/video/mxc/mxcfb_sii902x.c:998:	schedule_delayed_work(&(sii902x->det_work), msecs_to_jiffies(20));
drivers/video/mxc/mxcfb_sii902x.c:1006:	struct fb_info *fbi = event->info;
drivers/video/mxc/mxcfb_sii902x.c:1009:	if (strcmp(event->info->fix.id, sii902x->fbi->fix.id))
drivers/video/mxc/mxcfb_sii902x.c:1017:		if (*((int *)event->data) == FB_BLANK_UNBLANK)
drivers/video/mxc/mxcfb_sii902x.c:1028:	struct fsl_mxc_lcd_platform_data *plat = client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x.c:1032:	if (plat->reset)
drivers/video/mxc/mxcfb_sii902x.c:1033:		plat->reset();
drivers/video/mxc/mxcfb_sii902x.c:1035:	/* sii902x back door register - Set terminations to default */
drivers/video/mxc/mxcfb_sii902x.c:1037:	/* sii902x back door register - HW debounce to 64ms (0x14) */
drivers/video/mxc/mxcfb_sii902x.c:1042:		dev_err(&client->dev,
drivers/video/mxc/mxcfb_sii902x.c:1044:		return -ENODEV;
drivers/video/mxc/mxcfb_sii902x.c:1058:		dev_info(&client->dev, "found device %04X", wid);
drivers/video/mxc/mxcfb_sii902x.c:1060:		dev_err(&client->dev, "cound not find device\n");
drivers/video/mxc/mxcfb_sii902x.c:1061:		return -ENODEV;
drivers/video/mxc/mxcfb_sii902x.c:1072:	struct fsl_mxc_lcd_platform_data *plat = sii902x->client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x.c:1077:		return -EBUSY;
drivers/video/mxc/mxcfb_sii902x.c:1081:	setting->dev_id = plat->ipu_id;
drivers/video/mxc/mxcfb_sii902x.c:1082:	setting->disp_id = plat->disp_id;
drivers/video/mxc/mxcfb_sii902x.c:1083:	setting->if_fmt = IPU_PIX_FMT_RGB24;
drivers/video/mxc/mxcfb_sii902x.c:1085:	sii902x->fbi = setting->fbi;
drivers/video/mxc/mxcfb_sii902x.c:1086:	sii902x->power_state = TX_POWER_STATE_D2;
drivers/video/mxc/mxcfb_sii902x.c:1087:	sii902x->icolor_space = RGB;
drivers/video/mxc/mxcfb_sii902x.c:1088:	sii902x->audio_mode = AMODE_SPDIF;
drivers/video/mxc/mxcfb_sii902x.c:1089:	sii902x->audio_channels = ACHANNEL_2CH;
drivers/video/mxc/mxcfb_sii902x.c:1091:	sii902x->pdev = platform_device_register_simple("sii902x", 0, NULL, 0);
drivers/video/mxc/mxcfb_sii902x.c:1092:	if (IS_ERR(sii902x->pdev)) {
drivers/video/mxc/mxcfb_sii902x.c:1093:		dev_err(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:1095:		ret = PTR_ERR(sii902x->pdev);
drivers/video/mxc/mxcfb_sii902x.c:1099:	if (plat->io_reg) {
drivers/video/mxc/mxcfb_sii902x.c:1100:		sii902x->io_reg = regulator_get(&sii902x->client->dev, plat->io_reg);
drivers/video/mxc/mxcfb_sii902x.c:1101:		if (!IS_ERR(sii902x->io_reg)) {
drivers/video/mxc/mxcfb_sii902x.c:1102:			regulator_set_voltage(sii902x->io_reg, 3300000, 3300000);
drivers/video/mxc/mxcfb_sii902x.c:1103:			regulator_enable(sii902x->io_reg);
drivers/video/mxc/mxcfb_sii902x.c:1106:	if (plat->analog_reg) {
drivers/video/mxc/mxcfb_sii902x.c:1107:		sii902x->analog_reg = regulator_get(&sii902x->client->dev, plat->analog_reg);
drivers/video/mxc/mxcfb_sii902x.c:1108:		if (!IS_ERR(sii902x->analog_reg)) {
drivers/video/mxc/mxcfb_sii902x.c:1109:			regulator_set_voltage(sii902x->analog_reg, 1300000, 1300000);
drivers/video/mxc/mxcfb_sii902x.c:1110:			regulator_enable(sii902x->analog_reg);
drivers/video/mxc/mxcfb_sii902x.c:1115:	if (plat->get_pins)
drivers/video/mxc/mxcfb_sii902x.c:1116:		if (!plat->get_pins()) {
drivers/video/mxc/mxcfb_sii902x.c:1117:			ret = -EACCES;
drivers/video/mxc/mxcfb_sii902x.c:1121:	ret = sii902x_TPI_init(sii902x->client);
drivers/video/mxc/mxcfb_sii902x.c:1126:	ret = sii902x_read_edid(sii902x, sii902x->fbi);
drivers/video/mxc/mxcfb_sii902x.c:1128:		dev_warn(&sii902x->client->dev, "Can not read edid\n");
drivers/video/mxc/mxcfb_sii902x.c:1130:		INIT_LIST_HEAD(&sii902x->fbi->modelist);
drivers/video/mxc/mxcfb_sii902x.c:1131:		if (sii902x->fbi->monspecs.modedb_len > 0) {
drivers/video/mxc/mxcfb_sii902x.c:1136:			for (i = 0; i < sii902x->fbi->monspecs.modedb_len; i++) {
drivers/video/mxc/mxcfb_sii902x.c:1138:				if (!(sii902x->fbi->monspecs.modedb[i].vmode
drivers/video/mxc/mxcfb_sii902x.c:1141:							&sii902x->fbi->monspecs.modedb[i],
drivers/video/mxc/mxcfb_sii902x.c:1142:							&sii902x->fbi->modelist);
drivers/video/mxc/mxcfb_sii902x.c:1145:			fb_find_mode(&sii902x->fbi->var, sii902x->fbi, setting->dft_mode_str,
drivers/video/mxc/mxcfb_sii902x.c:1146:					NULL, 0, NULL, setting->default_bpp);
drivers/video/mxc/mxcfb_sii902x.c:1148:			fb_var_to_videomode(&m, &sii902x->fbi->var);
drivers/video/mxc/mxcfb_sii902x.c:1150:					&sii902x->fbi->modelist);
drivers/video/mxc/mxcfb_sii902x.c:1151:			fb_videomode_to_var(&sii902x->fbi->var, mode);
drivers/video/mxc/mxcfb_sii902x.c:1158:		ret = fb_find_mode(&sii902x->fbi->var, sii902x->fbi, setting->dft_mode_str,
drivers/video/mxc/mxcfb_sii902x.c:1159:				NULL, 0, NULL, setting->default_bpp);
drivers/video/mxc/mxcfb_sii902x.c:1161:			ret = -EINVAL;
drivers/video/mxc/mxcfb_sii902x.c:1166:	if (sii902x->client->irq) {
drivers/video/mxc/mxcfb_sii902x.c:1167:		ret = request_irq(sii902x->client->irq, sii902x_detect_handler,
drivers/video/mxc/mxcfb_sii902x.c:1171:			dev_warn(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:1173:				sii902x->client->irq);
drivers/video/mxc/mxcfb_sii902x.c:1176:			i2c_smbus_write_byte_data(sii902x->client,
drivers/video/mxc/mxcfb_sii902x.c:1179:			INIT_DELAYED_WORK(&(sii902x->det_work), det_worker);
drivers/video/mxc/mxcfb_sii902x.c:1181:			i2c_smbus_write_byte_data(sii902x->client,
drivers/video/mxc/mxcfb_sii902x.c:1186:		ret = device_create_file(&sii902x->pdev->dev, &dev_attr_fb_name);
drivers/video/mxc/mxcfb_sii902x.c:1188:			dev_warn(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:1190:		ret = device_create_file(&sii902x->pdev->dev, &dev_attr_cable_state);
drivers/video/mxc/mxcfb_sii902x.c:1192:			dev_warn(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:1194:		ret = device_create_file(&sii902x->pdev->dev, &dev_attr_edid);
drivers/video/mxc/mxcfb_sii902x.c:1196:			dev_warn(&sii902x->client->dev,
drivers/video/mxc/mxcfb_sii902x.c:1199:		dev_set_drvdata(&sii902x->pdev->dev, sii902x);
drivers/video/mxc/mxcfb_sii902x.c:1202:	sii902x->nb.notifier_call = sii902x_fb_event;
drivers/video/mxc/mxcfb_sii902x.c:1203:	ret = fb_register_client(&sii902x->nb);
drivers/video/mxc/mxcfb_sii902x.c:1213:	platform_device_unregister(sii902x->pdev);
drivers/video/mxc/mxcfb_sii902x.c:1221:	struct fsl_mxc_lcd_platform_data *plat = sii902x->client->dev.platform_data;
drivers/video/mxc/mxcfb_sii902x.c:1223:	if (sii902x->client->irq)
drivers/video/mxc/mxcfb_sii902x.c:1224:		free_irq(sii902x->client->irq, sii902x);
drivers/video/mxc/mxcfb_sii902x.c:1226:	fb_unregister_client(&sii902x->nb);
drivers/video/mxc/mxcfb_sii902x.c:1231:	if (plat->put_pins)
drivers/video/mxc/mxcfb_sii902x.c:1232:		plat->put_pins();
drivers/video/mxc/mxcfb_sii902x.c:1234:	platform_device_unregister(sii902x->pdev);
drivers/video/mxc/mxcfb_sii902x.c:1251:	if (!i2c_check_functionality(client->adapter,
drivers/video/mxc/mxcfb_sii902x.c:1253:		return -ENODEV;
drivers/video/mxc/mxcfb_sii902x.c:1257:		ret = -ENOMEM;
drivers/video/mxc/mxcfb_sii902x.c:1261:	sii902x->client = client;
drivers/video/mxc/mxcfb_sii902x.c:1263:	sii902x->disp_hdmi = mxc_dispdrv_register(&sii902x_drv);
drivers/video/mxc/mxcfb_sii902x.c:1264:	mxc_dispdrv_setdata(sii902x->disp_hdmi, sii902x);
drivers/video/mxc/mxcfb_sii902x.c:1276:	mxc_dispdrv_puthandle(sii902x->disp_hdmi);
drivers/video/mxc/mxcfb_sii902x.c:1277:	mxc_dispdrv_unregister(sii902x->disp_hdmi);
drivers/video/mxc/ldb.c:2: * Copyright (C) 2012-2013 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/ldb.c:18: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/ldb.c:108:          .name                   = "LDB-VGA", 
drivers/video/mxc/ldb.c:125:	 "LDB-WVGA", 60, 800, 480, 29850, 
drivers/video/mxc/ldb.c:133:	 "LDB-WXGA", 60, 1280, 800, 14065,
drivers/video/mxc/ldb.c:141:	 "LDB-XGA", 60, 1024, 768, 15385,
drivers/video/mxc/ldb.c:149:	 "LDB-1080P60", 60, 1920, 1080, 7692,
drivers/video/mxc/ldb.c:187: *    "ldb=spl0/1"       --      split mode on DI0/1
drivers/video/mxc/ldb.c:188: *    "ldb=dul0/1"       --      dual mode on DI0/1
drivers/video/mxc/ldb.c:189: *    "ldb=sin0/1"       --      single mode on LVDS0/1
drivers/video/mxc/ldb.c:190: *    "ldb=sep0/1" 	 --      separate mode begin from LVDS0/1
drivers/video/mxc/ldb.c:199: *    single mode means only work for DI0/DI1->LVDS0 or DI0/DI1->LVDS1.
drivers/video/mxc/ldb.c:200: *    separate mode means you can make DI0/DI1->LVDS0 and DI0/DI1->LVDS1 work
drivers/video/mxc/ldb.c:230:		 "DISP3 BG - DI1",
drivers/video/mxc/ldb.c:236:		if (ldb->setting[i].active) {
drivers/video/mxc/ldb.c:238:			memcpy(id, id_di[ldb->setting[i].di],
drivers/video/mxc/ldb.c:239:				strlen(id_di[ldb->setting[i].di]));
drivers/video/mxc/ldb.c:240:			id[4] += ldb->setting[i].ipu;
drivers/video/mxc/ldb.c:241:			if (!strcmp(id, fbi->fix.id))
drivers/video/mxc/ldb.c:245:	return -EINVAL;
drivers/video/mxc/ldb.c:260:	di = ldb->setting[setting_idx].di;
drivers/video/mxc/ldb.c:262:	//printk("%s: ----------------------------\n",__func__);
drivers/video/mxc/ldb.c:264:	printk("%s: ldb->inited = %d \n",__func__, ldb->inited);
drivers/video/mxc/ldb.c:267:	val = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:268:	val |= ldb->setting[setting_idx].ch_val;
drivers/video/mxc/ldb.c:269:	writel(val, ldb->control_reg);
drivers/video/mxc/ldb.c:270:	dev_dbg(&ldb->pdev->dev, "LDB setup, control reg:0x%x\n",
drivers/video/mxc/ldb.c:271:			readl(ldb->control_reg));
drivers/video/mxc/ldb.c:274:	reg = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:275:	if (fbi->var.sync & FB_SYNC_VERT_HIGH_ACT) {
drivers/video/mxc/ldb.c:290:	writel(reg, ldb->control_reg);
drivers/video/mxc/ldb.c:293:	if (ldb->setting[setting_idx].clk_en)
drivers/video/mxc/ldb.c:294:		clk_disable(ldb->setting[setting_idx].ldb_di_clk);
drivers/video/mxc/ldb.c:296:	pixel_clk = (PICOS2KHZ(fbi->var.pixclock)) * 1000UL;
drivers/video/mxc/ldb.c:301:	printk("%s: xres=%d \n",__func__,fbi->var.xres);
drivers/video/mxc/ldb.c:302:	printk("%s: yres=%d \n",__func__,fbi->var.yres);
drivers/video/mxc/ldb.c:303:	printk("%s: left_margin=%d \n",__func__,fbi->var.left_margin);
drivers/video/mxc/ldb.c:304:	printk("%s: right_margin=%d \n",__func__,fbi->var.right_margin);
drivers/video/mxc/ldb.c:305:	printk("%s: upper_margin=%d \n",__func__,fbi->var.upper_margin);
drivers/video/mxc/ldb.c:306:	printk("%s: lower_margin=%d \n",__func__,fbi->var.lower_margin);
drivers/video/mxc/ldb.c:307:	printk("%s: hsync_len=%d \n",__func__,fbi->var.hsync_len);
drivers/video/mxc/ldb.c:308:	printk("%s: vsync_len=%d \n",__func__,fbi->var.vsync_len);
drivers/video/mxc/ldb.c:311:	ldb_clk_parent = clk_get_parent(ldb->setting[setting_idx].ldb_di_clk);
drivers/video/mxc/ldb.c:312:	if ((ldb->mode == LDB_SPL_DI0) || (ldb->mode == LDB_SPL_DI1))
drivers/video/mxc/ldb.c:317:	rounded_pixel_clk = clk_round_rate(ldb->setting[setting_idx].ldb_di_clk,
drivers/video/mxc/ldb.c:321:	clk_set_rate(ldb->setting[setting_idx].ldb_di_clk, rounded_pixel_clk);
drivers/video/mxc/ldb.c:322:	clk_enable(ldb->setting[setting_idx].ldb_di_clk);
drivers/video/mxc/ldb.c:323:	if (!ldb->setting[setting_idx].clk_en)
drivers/video/mxc/ldb.c:324:		ldb->setting[setting_idx].clk_en = true;
drivers/video/mxc/ldb.c:333:	struct fb_info *fbi = event->info;
drivers/video/mxc/ldb.c:343:	fbi->mode = (struct fb_videomode *)fb_match_mode(&fbi->var,
drivers/video/mxc/ldb.c:344:			&fbi->modelist);
drivers/video/mxc/ldb.c:346:	if (!fbi->mode) {
drivers/video/mxc/ldb.c:347:		dev_warn(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:349:				fbi->var.xres, fbi->var.yres);
drivers/video/mxc/ldb.c:350:		if (ldb->setting[index].clk_en) {
drivers/video/mxc/ldb.c:351:			clk_disable(ldb->setting[index].ldb_di_clk);
drivers/video/mxc/ldb.c:352:			ldb->setting[index].clk_en = false;
drivers/video/mxc/ldb.c:353:			data = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:354:			data &= ~ldb->setting[index].ch_mask;
drivers/video/mxc/ldb.c:355:			writel(data, ldb->control_reg);
drivers/video/mxc/ldb.c:364:		if (*((int *)event->data) == FB_BLANK_UNBLANK) {
drivers/video/mxc/ldb.c:365:			if (!ldb->setting[index].clk_en) {
drivers/video/mxc/ldb.c:366:				clk_enable(ldb->setting[index].ldb_di_clk);
drivers/video/mxc/ldb.c:367:				ldb->setting[index].clk_en = true;
drivers/video/mxc/ldb.c:370:			if (ldb->setting[index].clk_en) {
drivers/video/mxc/ldb.c:371:				clk_disable(ldb->setting[index].ldb_di_clk);
drivers/video/mxc/ldb.c:372:				ldb->setting[index].clk_en = false;
drivers/video/mxc/ldb.c:373:				data = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:374:				data &= ~ldb->setting[index].ch_mask;
drivers/video/mxc/ldb.c:375:				writel(data, ldb->control_reg);
drivers/video/mxc/ldb.c:376:				dev_dbg(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:378:						readl(ldb->control_reg));
drivers/video/mxc/ldb.c:385:		if (ldb->setting[index].clk_en) {
drivers/video/mxc/ldb.c:386:			clk_disable(ldb->setting[index].ldb_di_clk);
drivers/video/mxc/ldb.c:387:			ldb->setting[index].clk_en = false;
drivers/video/mxc/ldb.c:408:	int mode = ldb->mode;
drivers/video/mxc/ldb.c:410:	reg = readl(ldb->gpr3_reg);
drivers/video/mxc/ldb.c:415:		dev_dbg(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:416:			"Dual/Split mode both channels route to IPU%d-DI%d\n",
drivers/video/mxc/ldb.c:420:		channel = mode - LDB_SIN0;
drivers/video/mxc/ldb.c:423:		dev_dbg(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:424:			"Single mode channel %d route to IPU%d-DI%d\n",
drivers/video/mxc/ldb.c:451:		dev_dbg(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:452:			"Separate mode channel %d route to IPU%d-DI%d\n",
drivers/video/mxc/ldb.c:455:	writel(reg, ldb->gpr3_reg);
drivers/video/mxc/ldb.c:465:	struct fsl_mxc_ldb_platform_data *plat_data = ldb->pdev->dev.platform_data;
drivers/video/mxc/ldb.c:473:	if (!valid_mode(setting->if_fmt)) {
drivers/video/mxc/ldb.c:474:		dev_warn(&ldb->pdev->dev, "Input pixel format not valid"
drivers/video/mxc/ldb.c:476:		setting->if_fmt = IPU_PIX_FMT_RGB666;
drivers/video/mxc/ldb.c:480:	printk("%s: ldb->inited = %d \n",__func__, ldb->inited);
drivers/video/mxc/ldb.c:482:	if (!ldb->inited) {
drivers/video/mxc/ldb.c:488:		res = platform_get_resource(ldb->pdev, IORESOURCE_MEM, 0);
drivers/video/mxc/ldb.c:490:			return -ENOMEM;
drivers/video/mxc/ldb.c:492:		base_addr = res->start;
drivers/video/mxc/ldb.c:493:		ldb->reg = ioremap(base_addr, res->end - res->start + 1);
drivers/video/mxc/ldb.c:494:		ldb->control_reg = ldb->reg + 2;
drivers/video/mxc/ldb.c:495:		ldb->gpr3_reg = ldb->reg + 3;
drivers/video/mxc/ldb.c:497:		ldb->lvds_bg_reg = regulator_get(&ldb->pdev->dev, plat_data->lvds_bg_reg);
drivers/video/mxc/ldb.c:498:		if (!IS_ERR(ldb->lvds_bg_reg)) {
drivers/video/mxc/ldb.c:499:			regulator_set_voltage(ldb->lvds_bg_reg, 2500000, 2500000);
drivers/video/mxc/ldb.c:500:			regulator_enable(ldb->lvds_bg_reg);
drivers/video/mxc/ldb.c:504:		setting->dev_id = plat_data->ipu_id;
drivers/video/mxc/ldb.c:506:		reg = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:510:		if (plat_data->ext_ref)
drivers/video/mxc/ldb.c:523:		if (bits_per_pixel(setting->if_fmt) == 24)
drivers/video/mxc/ldb.c:529:			ldb->mode = g_ldb_mode;
drivers/video/mxc/ldb.c:531:			ldb->mode = plat_data->mode;
drivers/video/mxc/ldb.c:533:		if ((ldb->mode == LDB_SIN0) || (ldb->mode == LDB_SIN1)) {
drivers/video/mxc/ldb.c:534:			ret = ldb->mode - LDB_SIN0;
drivers/video/mxc/ldb.c:535:			if (plat_data->disp_id != ret) {
drivers/video/mxc/ldb.c:536:				dev_warn(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:539:					plat_data->disp_id, ret, ret);
drivers/video/mxc/ldb.c:540:				plat_data->disp_id = ret;
drivers/video/mxc/ldb.c:542:		} else if (((ldb->mode == LDB_SEP0) || (ldb->mode == LDB_SEP1))
drivers/video/mxc/ldb.c:544:			if (plat_data->disp_id == plat_data->sec_disp_id) {
drivers/video/mxc/ldb.c:545:				dev_err(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:548:				return -EINVAL;
drivers/video/mxc/ldb.c:551:			if (((!plat_data->disp_id) && (ldb->mode == LDB_SEP1))
drivers/video/mxc/ldb.c:552:				|| ((plat_data->disp_id) &&
drivers/video/mxc/ldb.c:553:					(ldb->mode == LDB_SEP0))) {
drivers/video/mxc/ldb.c:554:				dev_dbg(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:557:				ipu_id = plat_data->ipu_id;
drivers/video/mxc/ldb.c:558:				disp_id = plat_data->disp_id;
drivers/video/mxc/ldb.c:559:				plat_data->ipu_id = plat_data->sec_ipu_id;
drivers/video/mxc/ldb.c:560:				plat_data->disp_id = plat_data->sec_disp_id;
drivers/video/mxc/ldb.c:561:				plat_data->sec_ipu_id = ipu_id;
drivers/video/mxc/ldb.c:562:				plat_data->sec_disp_id = disp_id;
drivers/video/mxc/ldb.c:566:		if (ldb->mode == LDB_SPL_DI0) {
drivers/video/mxc/ldb.c:569:			setting->disp_id = 0;
drivers/video/mxc/ldb.c:570:		} else if (ldb->mode == LDB_SPL_DI1) {
drivers/video/mxc/ldb.c:573:			setting->disp_id = 1;
drivers/video/mxc/ldb.c:574:		} else if (ldb->mode == LDB_DUL_DI0) {
drivers/video/mxc/ldb.c:577:			setting->disp_id = 0;
drivers/video/mxc/ldb.c:578:		} else if (ldb->mode == LDB_DUL_DI1) {
drivers/video/mxc/ldb.c:581:			setting->disp_id = 1;
drivers/video/mxc/ldb.c:582:		} else if (ldb->mode == LDB_SIN0) {
drivers/video/mxc/ldb.c:584:			setting->disp_id = plat_data->disp_id;
drivers/video/mxc/ldb.c:585:			if (setting->disp_id == 0)
drivers/video/mxc/ldb.c:591:		} else if (ldb->mode == LDB_SIN1) {
drivers/video/mxc/ldb.c:593:			setting->disp_id = plat_data->disp_id;
drivers/video/mxc/ldb.c:594:			if (setting->disp_id == 0)
drivers/video/mxc/ldb.c:601:			setting->disp_id = plat_data->disp_id;
drivers/video/mxc/ldb.c:604:			if (ldb->mode == LDB_SEP0)
drivers/video/mxc/ldb.c:611:			if ((lvds_channel == 0) && (setting->disp_id == 0))
drivers/video/mxc/ldb.c:613:			else if ((lvds_channel == 0) && (setting->disp_id == 1))
drivers/video/mxc/ldb.c:615:			else if ((lvds_channel == 1) && (setting->disp_id == 0))
drivers/video/mxc/ldb.c:623:			if (bits_per_pixel(setting->if_fmt) == 24) {
drivers/video/mxc/ldb.c:636:		writel(reg, ldb->control_reg);
drivers/video/mxc/ldb.c:637:		if (ldb->mode <  LDB_SIN0) {
drivers/video/mxc/ldb.c:644:			((ldb->mode == LDB_SEP0) || (ldb->mode == LDB_SEP1)))
drivers/video/mxc/ldb.c:647:			ldb_clk[6] += setting->disp_id;
drivers/video/mxc/ldb.c:648:		ldb->setting[setting_idx].ldb_di_clk = clk_get(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:650:		if (IS_ERR(ldb->setting[setting_idx].ldb_di_clk)) {
drivers/video/mxc/ldb.c:651:			dev_err(&ldb->pdev->dev, "get ldb clk0 failed\n");
drivers/video/mxc/ldb.c:652:			iounmap(ldb->reg);
drivers/video/mxc/ldb.c:653:			return PTR_ERR(ldb->setting[setting_idx].ldb_di_clk);
drivers/video/mxc/ldb.c:655:		di_clk[3] += setting->dev_id;
drivers/video/mxc/ldb.c:656:		di_clk[7] += setting->disp_id;
drivers/video/mxc/ldb.c:657:		ldb->setting[setting_idx].di_clk = clk_get(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:659:		if (IS_ERR(ldb->setting[setting_idx].di_clk)) {
drivers/video/mxc/ldb.c:660:			dev_err(&ldb->pdev->dev, "get di clk0 failed\n");
drivers/video/mxc/ldb.c:661:			iounmap(ldb->reg);
drivers/video/mxc/ldb.c:662:			return PTR_ERR(ldb->setting[setting_idx].di_clk);
drivers/video/mxc/ldb.c:665:		dev_dbg(&ldb->pdev->dev, "ldb_clk to di clk: %s -> %s\n", ldb_clk, di_clk);
drivers/video/mxc/ldb.c:668:		ldb->nb.notifier_call = ldb_fb_event,
drivers/video/mxc/ldb.c:669:		ret = fb_register_client(&ldb->nb);
drivers/video/mxc/ldb.c:671:			iounmap(ldb->reg);
drivers/video/mxc/ldb.c:675:		ldb->inited = true;
drivers/video/mxc/ldb.c:681:		if ((ldb->mode == LDB_SPL_DI0) ||
drivers/video/mxc/ldb.c:682:			(ldb->mode == LDB_SPL_DI1) ||
drivers/video/mxc/ldb.c:683:			(ldb->mode == LDB_DUL_DI0) ||
drivers/video/mxc/ldb.c:684:			(ldb->mode == LDB_DUL_DI1) ||
drivers/video/mxc/ldb.c:685:			(ldb->mode == LDB_SIN0) ||
drivers/video/mxc/ldb.c:686:			(ldb->mode == LDB_SIN1)) {
drivers/video/mxc/ldb.c:687:			dev_err(&ldb->pdev->dev, "for second ldb disp"
drivers/video/mxc/ldb.c:689:			return -EINVAL;
drivers/video/mxc/ldb.c:694:			setting->dev_id = plat_data->sec_ipu_id;
drivers/video/mxc/ldb.c:695:			setting->disp_id = plat_data->sec_disp_id;
drivers/video/mxc/ldb.c:697:			setting->dev_id = plat_data->ipu_id;
drivers/video/mxc/ldb.c:698:			setting->disp_id = !plat_data->disp_id;
drivers/video/mxc/ldb.c:700:		if (setting->disp_id == ldb->setting[0].di) {
drivers/video/mxc/ldb.c:701:			dev_err(&ldb->pdev->dev, "Err: for second ldb disp in"
drivers/video/mxc/ldb.c:703:			return -EINVAL;
drivers/video/mxc/ldb.c:707:		if (ldb->mode == LDB_SEP0)
drivers/video/mxc/ldb.c:712:		reg = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:713:		if ((lvds_channel == 0) && (setting->disp_id == 0))
drivers/video/mxc/ldb.c:715:		else if ((lvds_channel == 0) && (setting->disp_id == 1))
drivers/video/mxc/ldb.c:717:		else if ((lvds_channel == 1) && (setting->disp_id == 0))
drivers/video/mxc/ldb.c:725:		if (bits_per_pixel(setting->if_fmt) == 24) {
drivers/video/mxc/ldb.c:736:		writel(reg, ldb->control_reg);
drivers/video/mxc/ldb.c:742:			ldb_clk[6] += setting->disp_id;
drivers/video/mxc/ldb.c:743:		ldb->setting[setting_idx].ldb_di_clk = clk_get(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:745:		if (IS_ERR(ldb->setting[setting_idx].ldb_di_clk)) {
drivers/video/mxc/ldb.c:746:			dev_err(&ldb->pdev->dev, "get ldb clk1 failed\n");
drivers/video/mxc/ldb.c:747:			return PTR_ERR(ldb->setting[setting_idx].ldb_di_clk);
drivers/video/mxc/ldb.c:749:		di_clk[3] += setting->dev_id;
drivers/video/mxc/ldb.c:750:		di_clk[7] += setting->disp_id;
drivers/video/mxc/ldb.c:751:		ldb->setting[setting_idx].di_clk = clk_get(&ldb->pdev->dev,
drivers/video/mxc/ldb.c:753:		if (IS_ERR(ldb->setting[setting_idx].di_clk)) {
drivers/video/mxc/ldb.c:754:			dev_err(&ldb->pdev->dev, "get di clk1 failed\n");
drivers/video/mxc/ldb.c:755:			return PTR_ERR(ldb->setting[setting_idx].di_clk);
drivers/video/mxc/ldb.c:758:		dev_dbg(&ldb->pdev->dev, "ldb_clk to di clk: %s -> %s\n", ldb_clk, di_clk);
drivers/video/mxc/ldb.c:761:	ldb->setting[setting_idx].ch_mask = ch_mask;
drivers/video/mxc/ldb.c:762:	ldb->setting[setting_idx].ch_val = ch_val;
drivers/video/mxc/ldb.c:765:		ldb_ipu_ldb_route(setting->dev_id, setting->disp_id, ldb);
drivers/video/mxc/ldb.c:768:	 * ldb_di0_clk -> ipux_di0_clk
drivers/video/mxc/ldb.c:769:	 * ldb_di1_clk -> ipux_di1_clk
drivers/video/mxc/ldb.c:771:	clk_set_parent(ldb->setting[setting_idx].di_clk,
drivers/video/mxc/ldb.c:772:			ldb->setting[setting_idx].ldb_di_clk);
drivers/video/mxc/ldb.c:775:	ret = fb_find_mode(&setting->fbi->var, setting->fbi, setting->dft_mode_str,
drivers/video/mxc/ldb.c:776:				ldb_modedb, ldb_modedb_sz, NULL, setting->default_bpp);
drivers/video/mxc/ldb.c:778:		fb_videomode_to_var(&setting->fbi->var, &ldb_modedb[0]);
drivers/video/mxc/ldb.c:780:	INIT_LIST_HEAD(&setting->fbi->modelist);
drivers/video/mxc/ldb.c:783:		fb_var_to_videomode(&m, &setting->fbi->var);
drivers/video/mxc/ldb.c:786:					&setting->fbi->modelist);
drivers/video/mxc/ldb.c:792:	ldb->setting[setting_idx].active = true;
drivers/video/mxc/ldb.c:793:	ldb->setting[setting_idx].ipu = setting->dev_id;
drivers/video/mxc/ldb.c:794:	ldb->setting[setting_idx].di = setting->disp_id;
drivers/video/mxc/ldb.c:804:	writel(0, ldb->control_reg);
drivers/video/mxc/ldb.c:807:		clk_disable(ldb->setting[i].ldb_di_clk);
drivers/video/mxc/ldb.c:808:		clk_put(ldb->setting[i].ldb_di_clk);
drivers/video/mxc/ldb.c:811:	fb_unregister_client(&ldb->nb);
drivers/video/mxc/ldb.c:813:	iounmap(ldb->reg);
drivers/video/mxc/ldb.c:825:	struct ldb_data *ldb = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/ldb.c:828:	if (!ldb->inited)
drivers/video/mxc/ldb.c:830:	data = readl(ldb->control_reg);
drivers/video/mxc/ldb.c:831:	ldb->control_reg_data = data;
drivers/video/mxc/ldb.c:833:	writel(data, ldb->control_reg);
drivers/video/mxc/ldb.c:840:	struct ldb_data *ldb = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/ldb.c:842:	if (!ldb->inited)
drivers/video/mxc/ldb.c:844:	writel(ldb->control_reg_data, ldb->control_reg);
drivers/video/mxc/ldb.c:864:		ret = -ENOMEM;
drivers/video/mxc/ldb.c:868:	ldb->pdev = pdev;
drivers/video/mxc/ldb.c:869:	ldb->disp_ldb = mxc_dispdrv_register(&ldb_drv);
drivers/video/mxc/ldb.c:870:	mxc_dispdrv_setdata(ldb->disp_ldb, ldb);
drivers/video/mxc/ldb.c:872:	dev_set_drvdata(&pdev->dev, ldb);
drivers/video/mxc/ldb.c:880:	struct ldb_data *ldb = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/ldb.c:882:	if (!ldb->inited)
drivers/video/mxc/ldb.c:884:	mxc_dispdrv_puthandle(ldb->disp_ldb);
drivers/video/mxc/ldb.c:885:	mxc_dispdrv_unregister(ldb->disp_ldb);
drivers/video/mxc/mx2fb.c:2: * Copyright (C) 2004-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mx2fb.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mx2fb.c:33:#include <linux/dma-mapping.h>
drivers/video/mxc/mx2fb.c:122:#define MODE_PAL		"TV-PAL"
drivers/video/mxc/mx2fb.c:123:#define MODE_NTSC		"TV-NTSC"
drivers/video/mxc/mx2fb.c:124:#define MODE_VGA		"TV-VGA"
drivers/video/mxc/mx2fb.c:206: * a -EINVAL will be returned by the upper layers.
drivers/video/mxc/mx2fb.c:213:	if (var->xres_virtual < var->xres)
drivers/video/mxc/mx2fb.c:214:		var->xres_virtual = var->xres;
drivers/video/mxc/mx2fb.c:215:	if (var->yres_virtual < var->yres)
drivers/video/mxc/mx2fb.c:216:		var->yres_virtual = var->yres;
drivers/video/mxc/mx2fb.c:218:	if (var->xoffset < 0)
drivers/video/mxc/mx2fb.c:219:		var->xoffset = 0;
drivers/video/mxc/mx2fb.c:221:	if (var->yoffset < 0)
drivers/video/mxc/mx2fb.c:222:		var->yoffset = 0;
drivers/video/mxc/mx2fb.c:224:	if (var->xoffset + info->var.xres > info->var.xres_virtual)
drivers/video/mxc/mx2fb.c:225:		var->xoffset = info->var.xres_virtual - info->var.xres;
drivers/video/mxc/mx2fb.c:227:	if (var->yoffset + info->var.yres > info->var.yres_virtual)
drivers/video/mxc/mx2fb.c:228:		var->yoffset = info->var.yres_virtual - info->var.yres;
drivers/video/mxc/mx2fb.c:230:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mx2fb.c:231:	    (var->bits_per_pixel != 16)) {
drivers/video/mxc/mx2fb.c:232:		var->bits_per_pixel = default_bpp;
drivers/video/mxc/mx2fb.c:235:	switch (var->bits_per_pixel) {
drivers/video/mxc/mx2fb.c:237:		var->red.length = 5;
drivers/video/mxc/mx2fb.c:238:		var->red.offset = 11;
drivers/video/mxc/mx2fb.c:239:		var->red.msb_right = 0;
drivers/video/mxc/mx2fb.c:241:		var->green.length = 6;
drivers/video/mxc/mx2fb.c:242:		var->green.offset = 5;
drivers/video/mxc/mx2fb.c:243:		var->green.msb_right = 0;
drivers/video/mxc/mx2fb.c:245:		var->blue.length = 5;
drivers/video/mxc/mx2fb.c:246:		var->blue.offset = 0;
drivers/video/mxc/mx2fb.c:247:		var->blue.msb_right = 0;
drivers/video/mxc/mx2fb.c:249:		var->transp.length = 0;
drivers/video/mxc/mx2fb.c:250:		var->transp.offset = 0;
drivers/video/mxc/mx2fb.c:251:		var->transp.msb_right = 0;
drivers/video/mxc/mx2fb.c:254:		var->red.length = 8;
drivers/video/mxc/mx2fb.c:255:		var->red.offset = 16;
drivers/video/mxc/mx2fb.c:256:		var->red.msb_right = 0;
drivers/video/mxc/mx2fb.c:258:		var->green.length = 8;
drivers/video/mxc/mx2fb.c:259:		var->green.offset = 8;
drivers/video/mxc/mx2fb.c:260:		var->green.msb_right = 0;
drivers/video/mxc/mx2fb.c:262:		var->blue.length = 8;
drivers/video/mxc/mx2fb.c:263:		var->blue.offset = 0;
drivers/video/mxc/mx2fb.c:264:		var->blue.msb_right = 0;
drivers/video/mxc/mx2fb.c:266:		var->transp.length = 0;
drivers/video/mxc/mx2fb.c:267:		var->transp.offset = 0;
drivers/video/mxc/mx2fb.c:268:		var->transp.msb_right = 0;
drivers/video/mxc/mx2fb.c:271:		var->red.length = 8;
drivers/video/mxc/mx2fb.c:272:		var->red.offset = 16;
drivers/video/mxc/mx2fb.c:273:		var->red.msb_right = 0;
drivers/video/mxc/mx2fb.c:275:		var->green.length = 8;
drivers/video/mxc/mx2fb.c:276:		var->green.offset = 8;
drivers/video/mxc/mx2fb.c:277:		var->green.msb_right = 0;
drivers/video/mxc/mx2fb.c:279:		var->blue.length = 8;
drivers/video/mxc/mx2fb.c:280:		var->blue.offset = 0;
drivers/video/mxc/mx2fb.c:281:		var->blue.msb_right = 0;
drivers/video/mxc/mx2fb.c:283:		var->transp.length = 8;
drivers/video/mxc/mx2fb.c:284:		var->transp.offset = 24;
drivers/video/mxc/mx2fb.c:285:		var->transp.msb_right = 0;
drivers/video/mxc/mx2fb.c:289:	if (var->pixclock < 1000) {
drivers/video/mxc/mx2fb.c:290:		htotal = var->xres + var->right_margin + var->hsync_len +
drivers/video/mxc/mx2fb.c:291:		    var->left_margin;
drivers/video/mxc/mx2fb.c:292:		vtotal = var->yres + var->lower_margin + var->vsync_len +
drivers/video/mxc/mx2fb.c:293:		    var->upper_margin;
drivers/video/mxc/mx2fb.c:294:		var->pixclock = (vtotal * htotal * 6UL) / 100UL;
drivers/video/mxc/mx2fb.c:295:		var->pixclock = KHZ2PICOS(var->pixclock);
drivers/video/mxc/mx2fb.c:296:		dev_dbg(info->device,
drivers/video/mxc/mx2fb.c:298:			var->pixclock);
drivers/video/mxc/mx2fb.c:301:	var->height = -1;
drivers/video/mxc/mx2fb.c:302:	var->width = -1;
drivers/video/mxc/mx2fb.c:303:	var->grayscale = 0;
drivers/video/mxc/mx2fb.c:306:	var->sync |= var->nonstd;
drivers/video/mxc/mx2fb.c:307:	var->nonstd |= var->sync;
drivers/video/mxc/mx2fb.c:329:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:333:	len = info->var.yres_virtual * info->fix.line_length;
drivers/video/mxc/mx2fb.c:334:	if (len > info->fix.smem_len) {
drivers/video/mxc/mx2fb.c:335:		if (info->fix.smem_start)
drivers/video/mxc/mx2fb.c:340:			dev_err(info->device, "Unable to allocate fb memory\n");
drivers/video/mxc/mx2fb.c:341:			return -ENOMEM;
drivers/video/mxc/mx2fb.c:346:	if (info->fbops->fb_blank)
drivers/video/mxc/mx2fb.c:347:		info->fbops->fb_blank(mx2fbi->blank, info);
drivers/video/mxc/mx2fb.c:382:	if (info->var.grayscale)
drivers/video/mxc/mx2fb.c:385:	switch (info->fix.visual) {
drivers/video/mxc/mx2fb.c:388:		 * 16-bit True Colour.  We encode the RGB value
drivers/video/mxc/mx2fb.c:392:			u32 *pal = info->pseudo_palette;
drivers/video/mxc/mx2fb.c:395:#define CNVT_TOHW(val, width) ((((val)<<(width))+0x7FFF-(val))>>16)
drivers/video/mxc/mx2fb.c:396:			red = CNVT_TOHW(red, info->var.red.length);
drivers/video/mxc/mx2fb.c:397:			green = CNVT_TOHW(green, info->var.green.length);
drivers/video/mxc/mx2fb.c:398:			blue = CNVT_TOHW(blue, info->var.blue.length);
drivers/video/mxc/mx2fb.c:399:			transp = CNVT_TOHW(transp, info->var.transp.length);
drivers/video/mxc/mx2fb.c:402:			v = (red << info->var.red.offset) |
drivers/video/mxc/mx2fb.c:403:			    (green << info->var.green.offset) |
drivers/video/mxc/mx2fb.c:404:			    (blue << info->var.blue.offset) |
drivers/video/mxc/mx2fb.c:405:			    (transp << info->var.transp.offset);
drivers/video/mxc/mx2fb.c:429: * don't fit, return -EINVAL.
drivers/video/mxc/mx2fb.c:434:	if ((info->var.xoffset == var->xoffset) &&
drivers/video/mxc/mx2fb.c:435:	    (info->var.yoffset == var->yoffset)) {
drivers/video/mxc/mx2fb.c:439:	if (var->xoffset < 0 || var->yoffset < 0
drivers/video/mxc/mx2fb.c:440:	    || var->xoffset + info->var.xres > info->var.xres_virtual
drivers/video/mxc/mx2fb.c:441:	    || var->yoffset + info->var.yres > info->var.yres_virtual)
drivers/video/mxc/mx2fb.c:442:		return -EINVAL;
drivers/video/mxc/mx2fb.c:444:	info->var.xoffset = var->xoffset;
drivers/video/mxc/mx2fb.c:445:	info->var.yoffset = var->yoffset;
drivers/video/mxc/mx2fb.c:449:	if (var->vmode & FB_VMODE_YWRAP)
drivers/video/mxc/mx2fb.c:450:		info->var.vmode |= FB_VMODE_YWRAP;
drivers/video/mxc/mx2fb.c:452:		info->var.vmode &= ~FB_VMODE_YWRAP;
drivers/video/mxc/mx2fb.c:466: * succeeded, != 0 if un-/blanking failed.
drivers/video/mxc/mx2fb.c:473:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:475:	dev_dbg(info->device, "blank mode = %d\n", blank_mode);
drivers/video/mxc/mx2fb.c:477:	mx2fbi->blank = blank_mode;
drivers/video/mxc/mx2fb.c:506:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:512:		if (mx2fbi->type != MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:513:			return -ENODEV;
drivers/video/mxc/mx2fb.c:516:			return -EINVAL;
drivers/video/mxc/mx2fb.c:520:			return -EFAULT;
drivers/video/mxc/mx2fb.c:530:		if (mx2fbi->type != MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:531:			return -ENODEV;
drivers/video/mxc/mx2fb.c:534:			return -EINVAL;
drivers/video/mxc/mx2fb.c:538:			return -EFAULT;
drivers/video/mxc/mx2fb.c:551:		if (mx2fbi->type != MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:552:			return -ENODEV;
drivers/video/mxc/mx2fb.c:555:			return -EINVAL;
drivers/video/mxc/mx2fb.c:560:			return -EFAULT;
drivers/video/mxc/mx2fb.c:563:		if (mx2fbi->type != MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:564:			return -ENODEV;
drivers/video/mxc/mx2fb.c:567:			return -EINVAL;
drivers/video/mxc/mx2fb.c:572:			return -EFAULT;
drivers/video/mxc/mx2fb.c:584:			if (mx2fbi->type != MX2FB_TYPE_BG)
drivers/video/mxc/mx2fb.c:585:				return -ENODEV;
drivers/video/mxc/mx2fb.c:592:				return -EFAULT;
drivers/video/mxc/mx2fb.c:601:			if (mx2fbi->type != MX2FB_TYPE_BG)
drivers/video/mxc/mx2fb.c:602:				return -ENODEV;
drivers/video/mxc/mx2fb.c:605:				return -EFAULT;
drivers/video/mxc/mx2fb.c:617:			var = info->var;
drivers/video/mxc/mx2fb.c:623:				return -ENODEV;
drivers/video/mxc/mx2fb.c:625:			info->var = var;
drivers/video/mxc/mx2fb.c:634:			if (mx2fbi->type != MX2FB_TYPE_BG)
drivers/video/mxc/mx2fb.c:635:				return -ENODEV;
drivers/video/mxc/mx2fb.c:638:				return -EFAULT;
drivers/video/mxc/mx2fb.c:643:		dev_dbg(info->device, "Unknown ioctl command (0x%08X)\n", cmd);
drivers/video/mxc/mx2fb.c:644:		return -EINVAL;
drivers/video/mxc/mx2fb.c:658:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mx2fb.c:659:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mx2fb.c:660:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:662:	strncpy(fix->id, mx2fbi->id, strlen(mx2fbi->id));
drivers/video/mxc/mx2fb.c:663:	fix->line_length = var->xres_virtual * var->bits_per_pixel / 8;
drivers/video/mxc/mx2fb.c:664:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mx2fb.c:665:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mx2fb.c:666:	fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mx2fb.c:667:	fix->xpanstep = 1;
drivers/video/mxc/mx2fb.c:668:	fix->ypanstep = 1;
drivers/video/mxc/mx2fb.c:681:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:683:	info->device = &pdev->dev;
drivers/video/mxc/mx2fb.c:684:	info->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mx2fb.c:685:	info->fbops = &mx2fb_ops;
drivers/video/mxc/mx2fb.c:686:	info->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mx2fb.c:687:	info->pseudo_palette = &mx2fbi->pseudo_palette;
drivers/video/mxc/mx2fb.c:690:	fb_alloc_cmap(&info->cmap, 16, 0);
drivers/video/mxc/mx2fb.c:705:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:708:		return -EINVAL;
drivers/video/mxc/mx2fb.c:711:		fb_mode = pdev->dev.platform_data;
drivers/video/mxc/mx2fb.c:713:	if (!fb_find_mode(&info->var, info, fb_mode, mxcfb_modedb,
drivers/video/mxc/mx2fb.c:715:		fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mx2fb.c:716:		return -EBUSY;
drivers/video/mxc/mx2fb.c:720:	/* info->var.yres_virtual = info->var.yres << 1; */
drivers/video/mxc/mx2fb.c:722:	if (mx2fbi->type == MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:723:		mx2fbi->blank = FB_BLANK_NORMAL;
drivers/video/mxc/mx2fb.c:725:		mx2fbi->blank = FB_BLANK_UNBLANK;
drivers/video/mxc/mx2fb.c:728:		fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mx2fb.c:729:		return -EINVAL;
drivers/video/mxc/mx2fb.c:734:		fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mx2fb.c:735:		return -EINVAL;
drivers/video/mxc/mx2fb.c:738:	mx2fbi->registered = 1;
drivers/video/mxc/mx2fb.c:739:	dev_info(info->device, "fb%d: %s fb device registered successfully.\n",
drivers/video/mxc/mx2fb.c:740:		 info->node, info->fix.id);
drivers/video/mxc/mx2fb.c:752:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:754:	if (!mx2fbi->registered)
drivers/video/mxc/mx2fb.c:759:	if (&info->cmap)
drivers/video/mxc/mx2fb.c:760:		fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mx2fb.c:762:	mx2fbi->registered = 0;
drivers/video/mxc/mx2fb.c:773:	info->fix.smem_len = info->fix.line_length * info->var.yres_virtual;
drivers/video/mxc/mx2fb.c:774:	info->screen_base = dma_alloc_coherent(0,
drivers/video/mxc/mx2fb.c:775:					       info->fix.smem_len,
drivers/video/mxc/mx2fb.c:776:					       (dma_addr_t *) &info->fix.smem_start,
drivers/video/mxc/mx2fb.c:779:	if (info->screen_base == 0) {
drivers/video/mxc/mx2fb.c:780:		dev_err(info->device, "Unable to allocate fb memory\n");
drivers/video/mxc/mx2fb.c:781:		return -EBUSY;
drivers/video/mxc/mx2fb.c:783:	dev_dbg(info->device, "Allocated fb @ paddr=0x%08lX, size=%d.\n",
drivers/video/mxc/mx2fb.c:784:		info->fix.smem_start, info->fix.smem_len);
drivers/video/mxc/mx2fb.c:786:	info->screen_size = info->fix.smem_len;
drivers/video/mxc/mx2fb.c:789:	memset((char *)info->screen_base, 0, info->fix.smem_len);
drivers/video/mxc/mx2fb.c:800:	dma_free_coherent(0, info->fix.smem_len, info->screen_base,
drivers/video/mxc/mx2fb.c:801:			  (dma_addr_t) info->fix.smem_start);
drivers/video/mxc/mx2fb.c:803:	info->screen_base = 0;
drivers/video/mxc/mx2fb.c:804:	info->fix.smem_start = 0;
drivers/video/mxc/mx2fb.c:805:	info->fix.smem_len = 0;
drivers/video/mxc/mx2fb.c:815:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:832:	if (mx2fbi->type == MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:862:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:864:	if (mx2fbi->type == MX2FB_TYPE_GW)
drivers/video/mxc/mx2fb.c:892:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mx2fb.c:896:	g_gwinfo.base = (var->yoffset * var->xres_virtual + var->xoffset);
drivers/video/mxc/mx2fb.c:897:	g_gwinfo.base *= (var->bits_per_pixel) / 8;
drivers/video/mxc/mx2fb.c:898:	g_gwinfo.base += info->fix.smem_start;
drivers/video/mxc/mx2fb.c:900:	g_gwinfo.xres = var->xres;
drivers/video/mxc/mx2fb.c:901:	g_gwinfo.yres = var->yres;
drivers/video/mxc/mx2fb.c:902:	g_gwinfo.xres_virtual = var->xres_virtual;
drivers/video/mxc/mx2fb.c:931:	dev_dbg(info->device, "Graphic window disabled.\n");
drivers/video/mxc/mx2fb.c:945:	if (!gwinfo->enabled) {
drivers/video/mxc/mx2fb.c:951:	__raw_writel(gwinfo->base, LCDC_REG(LCDC_LGWSAR));
drivers/video/mxc/mx2fb.c:961:	width = (gwinfo->xres > width_bg) ? width_bg : gwinfo->xres;
drivers/video/mxc/mx2fb.c:962:	height = (gwinfo->yres > height_bg) ? height_bg : gwinfo->yres;
drivers/video/mxc/mx2fb.c:964:	xpos = gwinfo->xpos;
drivers/video/mxc/mx2fb.c:965:	ypos = gwinfo->ypos;
drivers/video/mxc/mx2fb.c:968:		xpos = width_bg - width;
drivers/video/mxc/mx2fb.c:970:		ypos = height_bg - height;
drivers/video/mxc/mx2fb.c:976:	__raw_writel(gwinfo->xres_virtual >> 1, LCDC_REG(LCDC_LGWVPWR));
drivers/video/mxc/mx2fb.c:992:	lgwcr |= (gwinfo->alpha_value & 0x000000FF) << 24;
drivers/video/mxc/mx2fb.c:993:	lgwcr |= gwinfo->ck_enabled ? 0x00800000 : 0;
drivers/video/mxc/mx2fb.c:994:	lgwcr |= gwinfo->vs_reversed ? 0x00200000 : 0;
drivers/video/mxc/mx2fb.c:1000:	lgwcr |= (gwinfo->ck_red & 0x0000003F) << 12;
drivers/video/mxc/mx2fb.c:1001:	lgwcr |= (gwinfo->ck_green & 0x0000003F) << 6;
drivers/video/mxc/mx2fb.c:1002:	lgwcr |= gwinfo->ck_blue & 0x0000003F;
drivers/video/mxc/mx2fb.c:1018:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mx2fb.c:1019:	struct mx2fb_info *mx2fbi = (struct mx2fb_info *)info->par;
drivers/video/mxc/mx2fb.c:1021:	if (mx2fbi->type == MX2FB_TYPE_GW) {
drivers/video/mxc/mx2fb.c:1026:	base = (var->yoffset * var->xres_virtual + var->xoffset);
drivers/video/mxc/mx2fb.c:1027:	base *= (var->bits_per_pixel) / 8;
drivers/video/mxc/mx2fb.c:1028:	base += info->fix.smem_start;
drivers/video/mxc/mx2fb.c:1034:	dev_dbg(info->device, "xres = %d, yres = %d\n",
drivers/video/mxc/mx2fb.c:1035:		info->var.xres, info->var.yres);
drivers/video/mxc/mx2fb.c:1036:	__raw_writel(((info->var.xres >> 4) << 20) + info->var.yres,
drivers/video/mxc/mx2fb.c:1040:	__raw_writel(info->var.xres_virtual >> 1, LCDC_REG(LCDC_LVPWR));
drivers/video/mxc/mx2fb.c:1050:	pcd = (perclk * 8 / (PICOS2KHZ(var->pixclock) * 1000UL) + 4) / 8;
drivers/video/mxc/mx2fb.c:1051:	if (--pcd > 0x3F)
drivers/video/mxc/mx2fb.c:1056:	pcr |= (var->sync & FB_SYNC_CLK_LAT_FALL) ? 0x00200000 : 0;
drivers/video/mxc/mx2fb.c:1057:	pcr |= (var->sync & FB_SYNC_DATA_INVERT) ? 0x01000000 : 0;
drivers/video/mxc/mx2fb.c:1058:	pcr |= (var->sync & FB_SYNC_SHARP_MODE) ? 0x00000040 : 0;
drivers/video/mxc/mx2fb.c:1059:	pcr |= (var->sync & FB_SYNC_OE_LOW_ACT) ? 0x00100000 : 0;
drivers/video/mxc/mx2fb.c:1063:	__raw_writel(((var->hsync_len - 1) << 26)
drivers/video/mxc/mx2fb.c:1064:		     + ((var->right_margin - 1) << 8)
drivers/video/mxc/mx2fb.c:1065:		     + (var->left_margin - 3), LCDC_REG(LCDC_LHCR));
drivers/video/mxc/mx2fb.c:1066:	__raw_writel((var->vsync_len << 26)
drivers/video/mxc/mx2fb.c:1067:		     + (var->lower_margin << 8)
drivers/video/mxc/mx2fb.c:1068:		     + var->upper_margin, LCDC_REG(LCDC_LVCR));
drivers/video/mxc/mx2fb.c:1264:	lcdc_clk = clk_get(&pdev->dev, "lcdc_clk");
drivers/video/mxc/mx2fb.c:1269:			dev_err(&pdev->dev,
drivers/video/mxc/mx2fb.c:1292:			return -ENODEV;
drivers/video/mxc/mx2fb.c:1307:	for (i = sizeof(mx2fb_info) / sizeof(struct fb_info); i > 0; i--)
drivers/video/mxc/mx2fb.c:1308:		_uninstall_fb(&mx2fb_info[i - 1]);
drivers/video/mxc/mx2fb.c:1317: * Example: video=mxcfb:240x320,bpp=16,Sharp-QVGA
drivers/video/mxc/ch7024.c:2: * Copyright 2007-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/ch7024.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/ch7024.c:227:	 "TV-NTSC", 60, 640, 480, 37594,
drivers/video/mxc/ch7024.c:236:	 "TV-PAL", 50, 640, 480, 37594,
drivers/video/mxc/ch7024.c:274:		return -EINVAL;
drivers/video/mxc/ch7024.c:288:	ch7024_write_reg(CH7024_PLL1, ch_clk->PLLN1);
drivers/video/mxc/ch7024.c:289:	ch7024_write_reg(CH7024_PLL2, ch_clk->PLLN2);
drivers/video/mxc/ch7024.c:290:	ch7024_write_reg(CH7024_PLL3, ch_clk->PLLN3);
drivers/video/mxc/ch7024.c:292:	ch7024_write_reg(CH7024_PCLK_A1, (ch_clk->A >> 24) & 0xFF);
drivers/video/mxc/ch7024.c:293:	ch7024_write_reg(CH7024_PCLK_A2, (ch_clk->A >> 16) & 0xFF);
drivers/video/mxc/ch7024.c:294:	ch7024_write_reg(CH7024_PCLK_A3, (ch_clk->A >> 8) & 0xFF);
drivers/video/mxc/ch7024.c:295:	ch7024_write_reg(CH7024_PCLK_A4, ch_clk->A & 0xFF);
drivers/video/mxc/ch7024.c:297:	ch7024_write_reg(CH7024_CLK_P1, (ch_clk->P >> 16) & 0xFF);
drivers/video/mxc/ch7024.c:298:	ch7024_write_reg(CH7024_CLK_P2, (ch_clk->P >> 8) & 0xFF);
drivers/video/mxc/ch7024.c:299:	ch7024_write_reg(CH7024_CLK_P3, ch_clk->P & 0xFF);
drivers/video/mxc/ch7024.c:301:	ch7024_write_reg(CH7024_CLK_N1, (ch_clk->N >> 16) & 0xFF);
drivers/video/mxc/ch7024.c:302:	ch7024_write_reg(CH7024_CLK_N2, (ch_clk->N >> 8) & 0xFF);
drivers/video/mxc/ch7024.c:303:	ch7024_write_reg(CH7024_CLK_N3, ch_clk->N & 0xFF);
drivers/video/mxc/ch7024.c:305:	ch7024_write_reg(CH7024_CLK_T, ch_clk->T & 0xFF);
drivers/video/mxc/ch7024.c:307:	/* set sub-carrier frequency generation method */
drivers/video/mxc/ch7024.c:310:	ch7024_write_reg(CH7024_OUT_FMT, (0x10 | ch_timing->VOS) & 0xFF);
drivers/video/mxc/ch7024.c:316:	ch7024_write_reg(CH7024_IN_TIMING1, ((ch_timing->HTI >> 5) & 0x38) |
drivers/video/mxc/ch7024.c:317:			 ((ch_timing->HAI >> 8) & 0x07));
drivers/video/mxc/ch7024.c:318:	ch7024_write_reg(CH7024_IN_TIMING2, ch_timing->HAI & 0xFF);
drivers/video/mxc/ch7024.c:319:	ch7024_write_reg(CH7024_IN_TIMING8, ch_timing->VAI & 0xFF);
drivers/video/mxc/ch7024.c:321:	ch7024_write_reg(CH7024_IN_TIMING3, ch_timing->HTI & 0xFF);
drivers/video/mxc/ch7024.c:322:	ch7024_write_reg(CH7024_IN_TIMING9, ch_timing->VTI & 0xFF);
drivers/video/mxc/ch7024.c:324:	ch7024_write_reg(CH7024_IN_TIMING4, ((ch_timing->HW >> 5) & 0x18) |
drivers/video/mxc/ch7024.c:325:			 ((ch_timing->HO >> 8) & 0x7));
drivers/video/mxc/ch7024.c:326:	ch7024_write_reg(CH7024_IN_TIMING6, ch_timing->HW & 0xFF);
drivers/video/mxc/ch7024.c:327:	ch7024_write_reg(CH7024_IN_TIMING11, ch_timing->VW & 0x3F);
drivers/video/mxc/ch7024.c:329:	ch7024_write_reg(CH7024_IN_TIMING5, ch_timing->HO & 0xFF);
drivers/video/mxc/ch7024.c:330:	ch7024_write_reg(CH7024_IN_TIMING7, ((ch_timing->VO >> 4) & 0x30) |
drivers/video/mxc/ch7024.c:331:			 ((ch_timing->VTI >> 6) & 0x0C) |
drivers/video/mxc/ch7024.c:332:			 ((ch_timing->VAI >> 8) & 0x03));
drivers/video/mxc/ch7024.c:333:	ch7024_write_reg(CH7024_IN_TIMING10, ch_timing->VO & 0xFF);
drivers/video/mxc/ch7024.c:403:		set_irq_type(ch7024_client->irq, IRQF_TRIGGER_FALLING);
drivers/video/mxc/ch7024.c:415:		set_irq_type(ch7024_client->irq, IRQF_TRIGGER_RISING);
drivers/video/mxc/ch7024.c:417:	dev_dbg(&ch7024_client->dev, "detect = %d\n", detect);
drivers/video/mxc/ch7024.c:436:	enable_irq(ch7024_client->irq);
drivers/video/mxc/ch7024.c:438:	sysfs_notify(&ch7024_client->dev.kobj, NULL, "headphone");
drivers/video/mxc/ch7024.c:448:	struct fb_info *fbi = event->info;
drivers/video/mxc/ch7024.c:452:		if ((ch7024_fbi != NULL) || strcmp(fbi->fix.id, "DISP3 BG"))
drivers/video/mxc/ch7024.c:456:		fb_add_videomode(&video_modes[0], &ch7024_fbi->modelist);
drivers/video/mxc/ch7024.c:457:		fb_add_videomode(&video_modes[1], &ch7024_fbi->modelist);
drivers/video/mxc/ch7024.c:463:		if (!fbi->mode) {
drivers/video/mxc/ch7024.c:469:		if (fb_mode_is_equal(fbi->mode, &video_modes[0])) {
drivers/video/mxc/ch7024.c:473:		} else if (fb_mode_is_equal(fbi->mode, &video_modes[1])) {
drivers/video/mxc/ch7024.c:487:		if (*((int *)event->data) == FB_BLANK_UNBLANK) {
drivers/video/mxc/ch7024.c:533:	size_t size = endp - buf;
drivers/video/mxc/ch7024.c:538:		return -EINVAL;
drivers/video/mxc/ch7024.c:555:	reg *= 2;		/* Scale to 0 - 255 */
drivers/video/mxc/ch7024.c:565:	size_t size = endp - buf;
drivers/video/mxc/ch7024.c:570:		return -EINVAL;
drivers/video/mxc/ch7024.c:588:	reg *= 2;		/* Scale to 0 - 255 */
drivers/video/mxc/ch7024.c:598:	size_t size = endp - buf;
drivers/video/mxc/ch7024.c:603:		return -EINVAL;
drivers/video/mxc/ch7024.c:621:	reg *= 2;		/* Scale to 0 - 255 */
drivers/video/mxc/ch7024.c:631:	size_t size = endp - buf;
drivers/video/mxc/ch7024.c:636:		return -EINVAL;
drivers/video/mxc/ch7024.c:654:	reg *= 32;		/* Scale to 0 - 255 */
drivers/video/mxc/ch7024.c:664:	size_t size = endp - buf;
drivers/video/mxc/ch7024.c:669:		return -EINVAL;
drivers/video/mxc/ch7024.c:671:	sharpness /= 32;	/* Scale to 0 - 7 */
drivers/video/mxc/ch7024.c:687:	struct mxc_tvout_platform_data *plat_data = client->dev.platform_data;
drivers/video/mxc/ch7024.c:691:	io_reg = regulator_get(&client->dev, plat_data->io_reg);
drivers/video/mxc/ch7024.c:692:	core_reg = regulator_get(&client->dev, plat_data->core_reg);
drivers/video/mxc/ch7024.c:693:	analog_reg = regulator_get(&client->dev, plat_data->analog_reg);
drivers/video/mxc/ch7024.c:709:		return -ENODEV;
drivers/video/mxc/ch7024.c:713:	detect_gpio = plat_data->detect_line;
drivers/video/mxc/ch7024.c:715:	if (client->irq > 0) {
drivers/video/mxc/ch7024.c:721:		ret = request_irq(client->irq, hp_detect_handler, irqtype,
drivers/video/mxc/ch7024.c:722:				  client->name, client);
drivers/video/mxc/ch7024.c:726:		ret = driver_create_file(&client->driver->driver,
drivers/video/mxc/ch7024.c:732:	ret = driver_create_file(&client->driver->driver,
drivers/video/mxc/ch7024.c:737:	ret = driver_create_file(&client->driver->driver,
drivers/video/mxc/ch7024.c:741:	ret = driver_create_file(&client->driver->driver, &driver_attr_hue);
drivers/video/mxc/ch7024.c:744:	ret = driver_create_file(&client->driver->driver,
drivers/video/mxc/ch7024.c:748:	ret = driver_create_file(&client->driver->driver,
drivers/video/mxc/ch7024.c:754:		if (strcmp(registered_fb[i]->fix.id, "DISP3 BG") == 0) {
drivers/video/mxc/ch7024.c:760:		fb_add_videomode(&video_modes[0], &ch7024_fbi->modelist);
drivers/video/mxc/ch7024.c:761:		fb_add_videomode(&video_modes[1], &ch7024_fbi->modelist);
drivers/video/mxc/ch7024.c:767:	driver_remove_file(&client->driver->driver, &driver_attr_saturation);
drivers/video/mxc/ch7024.c:769:	driver_remove_file(&client->driver->driver, &driver_attr_hue);
drivers/video/mxc/ch7024.c:771:	driver_remove_file(&client->driver->driver, &driver_attr_contrast);
drivers/video/mxc/ch7024.c:773:	driver_remove_file(&client->driver->driver, &driver_attr_brightness);
drivers/video/mxc/ch7024.c:775:	driver_remove_file(&client->driver->driver, &driver_attr_headphone);
drivers/video/mxc/ch7024.c:777:	free_irq(client->irq, client);
drivers/video/mxc/ch7024.c:784:	free_irq(client->irq, client);
drivers/video/mxc/ch7024.c:790:	driver_remove_file(&client->driver->driver, &driver_attr_headphone);
drivers/video/mxc/ch7024.c:791:	driver_remove_file(&client->driver->driver, &driver_attr_brightness);
drivers/video/mxc/ch7024.c:792:	driver_remove_file(&client->driver->driver, &driver_attr_contrast);
drivers/video/mxc/ch7024.c:793:	driver_remove_file(&client->driver->driver, &driver_attr_hue);
drivers/video/mxc/ch7024.c:794:	driver_remove_file(&client->driver->driver, &driver_attr_saturation);
drivers/video/mxc/ch7024.c:795:	driver_remove_file(&client->driver->driver, &driver_attr_sharpness);
drivers/video/mxc/mipi_dsi.c:2: * Copyright (C) 2011-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mipi_dsi.c:16: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mipi_dsi.c:63:	 "TRULY-WVGA",
drivers/video/mxc/mipi_dsi.c:79:	{1000, 0x74}, /*  950-1000MHz	*/
drivers/video/mxc/mipi_dsi.c:80:	{950,  0x54}, /*  900-950Mhz	*/
drivers/video/mxc/mipi_dsi.c:81:	{900,  0x34}, /*  850-900Mhz	*/
drivers/video/mxc/mipi_dsi.c:82:	{850,  0x14}, /*  800-850MHz	*/
drivers/video/mxc/mipi_dsi.c:83:	{800,  0x32}, /*  750-800MHz	*/
drivers/video/mxc/mipi_dsi.c:84:	{750,  0x12}, /*  700-750Mhz	*/
drivers/video/mxc/mipi_dsi.c:85:	{700,  0x30}, /*  650-700Mhz	*/
drivers/video/mxc/mipi_dsi.c:86:	{650,  0x10}, /*  600-650MHz	*/
drivers/video/mxc/mipi_dsi.c:87:	{600,  0x2e}, /*  550-600MHz	*/
drivers/video/mxc/mipi_dsi.c:88:	{550,  0x0e}, /*  500-550Mhz	*/
drivers/video/mxc/mipi_dsi.c:89:	{500,  0x2c}, /*  450-500Mhz	*/
drivers/video/mxc/mipi_dsi.c:90:	{450,  0x0c}, /*  400-450MHz	*/
drivers/video/mxc/mipi_dsi.c:91:	{400,  0x4a}, /*  360-400MHz	*/
drivers/video/mxc/mipi_dsi.c:92:	{360,  0x2a}, /*  330-360Mhz	*/
drivers/video/mxc/mipi_dsi.c:93:	{330,  0x48}, /*  300-330Mhz	*/
drivers/video/mxc/mipi_dsi.c:94:	{300,  0x28}, /*  270-300MHz	*/
drivers/video/mxc/mipi_dsi.c:95:	{270,  0x08}, /*  250-270MHz	*/
drivers/video/mxc/mipi_dsi.c:96:	{250,  0x46}, /*  240-250Mhz	*/
drivers/video/mxc/mipi_dsi.c:97:	{240,  0x26}, /*  210-240Mhz	*/
drivers/video/mxc/mipi_dsi.c:98:	{210,  0x06}, /*  200-210MHz	*/
drivers/video/mxc/mipi_dsi.c:99:	{200,  0x44}, /*  180-200MHz	*/
drivers/video/mxc/mipi_dsi.c:100:	{180,  0x24}, /*  160-180MHz	*/
drivers/video/mxc/mipi_dsi.c:101:	{160,  0x04}, /*  150-160MHz	*/
drivers/video/mxc/mipi_dsi.c:117:	*val = ioread32(mipi_dsi->mmio_base + reg);
drivers/video/mxc/mipi_dsi.c:118:	dev_dbg(&mipi_dsi->pdev->dev, "read_reg:0x%02x, val:0x%08x.\n",
drivers/video/mxc/mipi_dsi.c:125:	iowrite32(val, mipi_dsi->mmio_base + reg);
drivers/video/mxc/mipi_dsi.c:126:	dev_dbg(&mipi_dsi->pdev->dev, "\t\twrite_reg:0x%02x, val:0x%08x.\n",
drivers/video/mxc/mipi_dsi.c:144:			len -= DSI_GEN_PLD_DATA_BUF_SIZE;
drivers/video/mxc/mipi_dsi.c:152:					return -EIO;
drivers/video/mxc/mipi_dsi.c:164:					return -EIO;
drivers/video/mxc/mipi_dsi.c:186:			return -EIO;
drivers/video/mxc/mipi_dsi.c:200:			return -EIO;
drivers/video/mxc/mipi_dsi.c:217:		return -EINVAL;
drivers/video/mxc/mipi_dsi.c:232:			return -EIO;
drivers/video/mxc/mipi_dsi.c:242:			return -EIO;
drivers/video/mxc/mipi_dsi.c:263:		dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:265:		return -ERANGE;
drivers/video/mxc/mipi_dsi.c:286:	dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:321:			dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:333:			dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:346:	struct  fb_videomode *mode = mipi_dsi->mode;
drivers/video/mxc/mipi_dsi.c:347:	struct  mipi_lcd_config *lcd_config = mipi_dsi->lcd_config;
drivers/video/mxc/mipi_dsi.c:357:		if (!(mode->sync & FB_SYNC_VERT_HIGH_ACT))
drivers/video/mxc/mipi_dsi.c:359:		if (!(mode->sync & FB_SYNC_HOR_HIGH_ACT))
drivers/video/mxc/mipi_dsi.c:361:		if ((mode->sync & FB_SYNC_OE_LOW_ACT))
drivers/video/mxc/mipi_dsi.c:363:		if (MIPI_RGB666_LOOSELY == lcd_config->dpi_fmt)
drivers/video/mxc/mipi_dsi.c:365:		val |= (lcd_config->dpi_fmt & DSI_DPI_CFG_COLORCODE_MASK)
drivers/video/mxc/mipi_dsi.c:367:		val |= (lcd_config->virtual_ch & DSI_DPI_CFG_VID_MASK)
drivers/video/mxc/mipi_dsi.c:377:		val = (mode->xres & DSI_VID_PKT_CFG_VID_PKT_SZ_MASK)
drivers/video/mxc/mipi_dsi.c:391:				(lcd_config->max_phy_clk / BITS_PER_BYTE);
drivers/video/mxc/mipi_dsi.c:392:		val  = ROUND_UP(mode->hsync_len * mode->pixclock /
drivers/video/mxc/mipi_dsi.c:395:		val |= ROUND_UP(mode->left_margin * mode->pixclock /
drivers/video/mxc/mipi_dsi.c:398:		val |= ROUND_UP((mode->left_margin + mode->right_margin +
drivers/video/mxc/mipi_dsi.c:399:				mode->hsync_len + mode->xres) * mode->pixclock
drivers/video/mxc/mipi_dsi.c:404:		val = ((mode->vsync_len & DSI_VTIMING_CFG_VSA_LINES_MASK)
drivers/video/mxc/mipi_dsi.c:406:		val |= ((mode->upper_margin & DSI_VTIMING_CFG_VBP_LINES_MASK)
drivers/video/mxc/mipi_dsi.c:408:		val |= ((mode->lower_margin & DSI_VTIMING_CFG_VFP_LINES_MASK)
drivers/video/mxc/mipi_dsi.c:410:		val |= ((mode->yres & DSI_VTIMING_CFG_V_ACT_LINES_MASK)
drivers/video/mxc/mipi_dsi.c:422:		val = (((lcd_config->data_lane_num - 1) &
drivers/video/mxc/mipi_dsi.c:435:					mipi_dsi->dphy_pll_config);
drivers/video/mxc/mipi_dsi.c:438:					mipi_dsi->dphy_pll_config);
drivers/video/mxc/mipi_dsi.c:465:		dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:509:	if (!mipi_dsi->dsi_power_on) {
drivers/video/mxc/mipi_dsi.c:510:		clk_enable(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:513:		/* host send pclk/hsync/vsync for two frames before sleep-out */
drivers/video/mxc/mipi_dsi.c:514:		msleep((1000/mipi_dsi->mode->refresh + 1) << 1);
drivers/video/mxc/mipi_dsi.c:519:			dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:520:				"MIPI DSI DCS Command sleep-in error!\n");
drivers/video/mxc/mipi_dsi.c:524:		mipi_dsi->dsi_power_on = 1;
drivers/video/mxc/mipi_dsi.c:535:	if (mipi_dsi->dsi_power_on) {
drivers/video/mxc/mipi_dsi.c:540:			dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:553:		mipi_dsi->dsi_power_on = 0;
drivers/video/mxc/mipi_dsi.c:554:		clk_disable(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:566:	struct  device		 *dev = &mipi_dsi->pdev->dev;
drivers/video/mxc/mipi_dsi.c:569:		if (!strcmp(mipi_dsi->lcd_panel,
drivers/video/mxc/mipi_dsi.c:571:			mipi_dsi->lcd_callback =
drivers/video/mxc/mipi_dsi.c:578:		return -EINVAL;
drivers/video/mxc/mipi_dsi.c:580:	/* get the videomode in the order: cmdline->platform data->driver */
drivers/video/mxc/mipi_dsi.c:581:	mipi_dsi->lcd_callback->get_mipi_lcd_videomode(&mipi_lcd_modedb, &size,
drivers/video/mxc/mipi_dsi.c:582:					&mipi_dsi->lcd_config);
drivers/video/mxc/mipi_dsi.c:583:	err = fb_find_mode(&setting->fbi->var, setting->fbi,
drivers/video/mxc/mipi_dsi.c:584:				setting->dft_mode_str,
drivers/video/mxc/mipi_dsi.c:586:				setting->default_bpp);
drivers/video/mxc/mipi_dsi.c:588:		fb_videomode_to_var(&setting->fbi->var, mipi_lcd_modedb);
drivers/video/mxc/mipi_dsi.c:590:	INIT_LIST_HEAD(&setting->fbi->modelist);
drivers/video/mxc/mipi_dsi.c:592:		fb_var_to_videomode(&mode, &setting->fbi->var);
drivers/video/mxc/mipi_dsi.c:595:					&setting->fbi->modelist);
drivers/video/mxc/mipi_dsi.c:597:			mipi_dsi->mode = mipi_lcd_modedb + i;
drivers/video/mxc/mipi_dsi.c:608:				mipi_dsi->lcd_config->max_phy_clk)
drivers/video/mxc/mipi_dsi.c:612:		(mipi_dsi->lcd_config->max_phy_clk >
drivers/video/mxc/mipi_dsi.c:616:		return -EINVAL;
drivers/video/mxc/mipi_dsi.c:618:	mipi_dsi->dphy_pll_config = mipi_dsi_phy_pll_clk_table[--i].config;
drivers/video/mxc/mipi_dsi.c:619:	dev_dbg(dev, "dphy_pll_config:0x%x.\n", mipi_dsi->dphy_pll_config);
drivers/video/mxc/mipi_dsi.c:629:	if (!mipi_dsi->lcd_inited) {
drivers/video/mxc/mipi_dsi.c:630:		err = clk_enable(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:632:			dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:635:		err = mipi_dsi->lcd_callback->mipi_lcd_setup(
drivers/video/mxc/mipi_dsi.c:638:			dev_err(&mipi_dsi->pdev->dev,
drivers/video/mxc/mipi_dsi.c:640:			clk_disable(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:644:		mipi_dsi->dsi_power_on = 1;
drivers/video/mxc/mipi_dsi.c:645:		mipi_dsi->lcd_inited = 1;
drivers/video/mxc/mipi_dsi.c:647:	mipi_dsi_power_on(mipi_dsi->disp_mipi);
drivers/video/mxc/mipi_dsi.c:668:		return -EINVAL;
drivers/video/mxc/mipi_dsi.c:670:	dev	= &mipi_dsi->pdev->dev;
drivers/video/mxc/mipi_dsi.c:671:	pdata = dev->platform_data;
drivers/video/mxc/mipi_dsi.c:674:		return -EINVAL;
drivers/video/mxc/mipi_dsi.c:677:	mipi_dsi->lcd_panel = kstrdup(pdata->lcd_panel, GFP_KERNEL);
drivers/video/mxc/mipi_dsi.c:678:	if (!mipi_dsi->lcd_panel)
drivers/video/mxc/mipi_dsi.c:679:		return -ENOMEM;
drivers/video/mxc/mipi_dsi.c:681:	if (!valid_mode(setting->if_fmt)) {
drivers/video/mxc/mipi_dsi.c:684:		setting->if_fmt = IPU_PIX_FMT_RGB24;
drivers/video/mxc/mipi_dsi.c:687:	res = platform_get_resource(mipi_dsi->pdev, IORESOURCE_MEM, 0);
drivers/video/mxc/mipi_dsi.c:690:		return -ENODEV;
drivers/video/mxc/mipi_dsi.c:693:	res = request_mem_region(res->start, resource_size(res),
drivers/video/mxc/mipi_dsi.c:694:				mipi_dsi->pdev->name);
drivers/video/mxc/mipi_dsi.c:697:		return -EBUSY;
drivers/video/mxc/mipi_dsi.c:699:	mipi_dsi->mmio_base = ioremap(res->start, resource_size(res));
drivers/video/mxc/mipi_dsi.c:700:	if (!mipi_dsi->mmio_base) {
drivers/video/mxc/mipi_dsi.c:702:		err = -EIO;
drivers/video/mxc/mipi_dsi.c:706:	res = platform_get_resource(mipi_dsi->pdev, IORESOURCE_MEM, 1);
drivers/video/mxc/mipi_dsi.c:709:		err = -ENODEV;
drivers/video/mxc/mipi_dsi.c:713:	reg_base = ioremap(res->start, resource_size(res));
drivers/video/mxc/mipi_dsi.c:716:		err = -EIO;
drivers/video/mxc/mipi_dsi.c:720:	val |= MIPI_MUX_CTRL((pdata->ipu_id << 1) | (pdata->disp_id));
drivers/video/mxc/mipi_dsi.c:724:	res_irq = platform_get_resource(mipi_dsi->pdev, IORESOURCE_IRQ, 0);
drivers/video/mxc/mipi_dsi.c:727:		err = -ENODEV;
drivers/video/mxc/mipi_dsi.c:730:	mipi_dsi->irq = res_irq->start;
drivers/video/mxc/mipi_dsi.c:732:	mipi_dsi->dphy_clk = clk_get(dev, dphy_clk);
drivers/video/mxc/mipi_dsi.c:733:	if (IS_ERR(mipi_dsi->dphy_clk)) {
drivers/video/mxc/mipi_dsi.c:735:		err = PTR_ERR(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:740:				mipi_dsi->mmio_base, mipi_dsi->irq);
drivers/video/mxc/mipi_dsi.c:742:	if (pdata->io_regulator) {
drivers/video/mxc/mipi_dsi.c:743:		mipi_dsi->io_regulator = regulator_get(dev,
drivers/video/mxc/mipi_dsi.c:744:			pdata->io_regulator);
drivers/video/mxc/mipi_dsi.c:745:		if (IS_ERR(mipi_dsi->io_regulator)) {
drivers/video/mxc/mipi_dsi.c:747:			err = PTR_ERR(mipi_dsi->io_regulator);
drivers/video/mxc/mipi_dsi.c:750:		err = regulator_set_voltage(mipi_dsi->io_regulator,
drivers/video/mxc/mipi_dsi.c:751:				      pdata->io_volt,
drivers/video/mxc/mipi_dsi.c:752:				      pdata->io_volt);
drivers/video/mxc/mipi_dsi.c:757:		err = regulator_enable(mipi_dsi->io_regulator);
drivers/video/mxc/mipi_dsi.c:763:	if (pdata->core_regulator) {
drivers/video/mxc/mipi_dsi.c:764:		mipi_dsi->core_regulator = regulator_get(dev,
drivers/video/mxc/mipi_dsi.c:765:			pdata->core_regulator);
drivers/video/mxc/mipi_dsi.c:766:		if (IS_ERR(mipi_dsi->core_regulator)) {
drivers/video/mxc/mipi_dsi.c:768:			err = PTR_ERR(mipi_dsi->core_regulator);
drivers/video/mxc/mipi_dsi.c:771:		err = regulator_set_voltage(mipi_dsi->core_regulator,
drivers/video/mxc/mipi_dsi.c:772:				      pdata->core_volt,
drivers/video/mxc/mipi_dsi.c:773:				      pdata->core_volt);
drivers/video/mxc/mipi_dsi.c:778:		err = regulator_enable(mipi_dsi->core_regulator);
drivers/video/mxc/mipi_dsi.c:785:	if (pdata->analog_regulator) {
drivers/video/mxc/mipi_dsi.c:786:		mipi_dsi->analog_regulator =
drivers/video/mxc/mipi_dsi.c:787:				regulator_get(dev, pdata->analog_regulator);
drivers/video/mxc/mipi_dsi.c:788:		if (IS_ERR(mipi_dsi->analog_regulator)) {
drivers/video/mxc/mipi_dsi.c:790:			err = PTR_ERR(mipi_dsi->analog_regulator);
drivers/video/mxc/mipi_dsi.c:793:		err = regulator_set_voltage(mipi_dsi->analog_regulator,
drivers/video/mxc/mipi_dsi.c:794:				      pdata->analog_volt,
drivers/video/mxc/mipi_dsi.c:795:				      pdata->analog_volt);
drivers/video/mxc/mipi_dsi.c:801:		err = regulator_enable(mipi_dsi->analog_regulator);
drivers/video/mxc/mipi_dsi.c:808:	if (pdata->lcd_power)
drivers/video/mxc/mipi_dsi.c:809:		pdata->lcd_power(true);
drivers/video/mxc/mipi_dsi.c:810:	if (pdata->backlight_power)
drivers/video/mxc/mipi_dsi.c:811:		pdata->backlight_power(true);
drivers/video/mxc/mipi_dsi.c:813:	if (pdata->init) {
drivers/video/mxc/mipi_dsi.c:814:		err = pdata->init(mipi_dsi->pdev);
drivers/video/mxc/mipi_dsi.c:816:			dev_err(dev, "failed to do pdata->init()\n");
drivers/video/mxc/mipi_dsi.c:820:	if (pdata->reset)
drivers/video/mxc/mipi_dsi.c:821:		pdata->reset();
drivers/video/mxc/mipi_dsi.c:823:	mipi_dsi->ipu_id = pdata->ipu_id;
drivers/video/mxc/mipi_dsi.c:824:	mipi_dsi->disp_id = pdata->disp_id;
drivers/video/mxc/mipi_dsi.c:825:	mipi_dsi->reset = pdata->reset;
drivers/video/mxc/mipi_dsi.c:826:	mipi_dsi->lcd_power	= pdata->lcd_power;
drivers/video/mxc/mipi_dsi.c:827:	mipi_dsi->backlight_power = pdata->backlight_power;
drivers/video/mxc/mipi_dsi.c:830:	setting->dev_id = pdata->ipu_id;
drivers/video/mxc/mipi_dsi.c:831:	setting->disp_id = pdata->disp_id;
drivers/video/mxc/mipi_dsi.c:833:	err = request_irq(mipi_dsi->irq, mipi_dsi_irq_handler,
drivers/video/mxc/mipi_dsi.c:837:		err = -EBUSY;
drivers/video/mxc/mipi_dsi.c:851:	free_irq(mipi_dsi->irq, mipi_dsi);
drivers/video/mxc/mipi_dsi.c:853:	if (pdata->exit)
drivers/video/mxc/mipi_dsi.c:854:		pdata->exit(mipi_dsi->pdev);
drivers/video/mxc/mipi_dsi.c:859:	if (mipi_dsi->analog_regulator)
drivers/video/mxc/mipi_dsi.c:860:		regulator_put(mipi_dsi->analog_regulator);
drivers/video/mxc/mipi_dsi.c:862:	if (mipi_dsi->core_regulator)
drivers/video/mxc/mipi_dsi.c:863:		regulator_put(mipi_dsi->core_regulator);
drivers/video/mxc/mipi_dsi.c:865:	if (mipi_dsi->io_regulator)
drivers/video/mxc/mipi_dsi.c:866:		regulator_put(mipi_dsi->io_regulator);
drivers/video/mxc/mipi_dsi.c:868:	clk_put(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:873:	iounmap(mipi_dsi->mmio_base);
drivers/video/mxc/mipi_dsi.c:875:	release_mem_region(res->start, resource_size(res));
drivers/video/mxc/mipi_dsi.c:886:	res = platform_get_resource(mipi_dsi->pdev, IORESOURCE_MEM, 0);
drivers/video/mxc/mipi_dsi.c:888:	disable_irq(mipi_dsi->irq);
drivers/video/mxc/mipi_dsi.c:889:	free_irq(mipi_dsi->irq, mipi_dsi);
drivers/video/mxc/mipi_dsi.c:890:	mipi_dsi_power_off(mipi_dsi->disp_mipi);
drivers/video/mxc/mipi_dsi.c:891:	if (mipi_dsi->bl)
drivers/video/mxc/mipi_dsi.c:892:		backlight_device_unregister(mipi_dsi->bl);
drivers/video/mxc/mipi_dsi.c:893:	if (mipi_dsi->analog_regulator)
drivers/video/mxc/mipi_dsi.c:894:		regulator_put(mipi_dsi->analog_regulator);
drivers/video/mxc/mipi_dsi.c:895:	if (mipi_dsi->core_regulator)
drivers/video/mxc/mipi_dsi.c:896:		regulator_put(mipi_dsi->core_regulator);
drivers/video/mxc/mipi_dsi.c:897:	if (mipi_dsi->io_regulator)
drivers/video/mxc/mipi_dsi.c:898:		regulator_put(mipi_dsi->io_regulator);
drivers/video/mxc/mipi_dsi.c:899:	clk_put(mipi_dsi->dphy_clk);
drivers/video/mxc/mipi_dsi.c:900:	iounmap(mipi_dsi->mmio_base);
drivers/video/mxc/mipi_dsi.c:901:	release_mem_region(res->start, resource_size(res));
drivers/video/mxc/mipi_dsi.c:928:		ret = -ENOMEM;
drivers/video/mxc/mipi_dsi.c:932:	mipi_dsi->pdev = pdev;
drivers/video/mxc/mipi_dsi.c:933:	mipi_dsi->disp_mipi = mxc_dispdrv_register(&mipi_dsi_drv);
drivers/video/mxc/mipi_dsi.c:934:	if (IS_ERR(mipi_dsi->disp_mipi)) {
drivers/video/mxc/mipi_dsi.c:935:		dev_err(&pdev->dev, "mxc_dispdrv_register error:%ld!\n",
drivers/video/mxc/mipi_dsi.c:936:			PTR_ERR(mipi_dsi->disp_mipi));
drivers/video/mxc/mipi_dsi.c:937:		ret = -ENOMEM;
drivers/video/mxc/mipi_dsi.c:941:	mxc_dispdrv_setdata(mipi_dsi->disp_mipi, mipi_dsi);
drivers/video/mxc/mipi_dsi.c:942:	dev_set_drvdata(&pdev->dev, mipi_dsi);
drivers/video/mxc/mipi_dsi.c:944:	dev_info(&pdev->dev, "i.MX MIPI DSI driver probed\n");
drivers/video/mxc/mipi_dsi.c:955:	struct mipi_dsi_info *mipi_dsi = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/mipi_dsi.c:957:	mipi_dsi_power_off(mipi_dsi->disp_mipi);
drivers/video/mxc/mipi_dsi.c:958:	if (mipi_dsi->lcd_power)
drivers/video/mxc/mipi_dsi.c:959:		mipi_dsi->lcd_power(false);
drivers/video/mxc/mipi_dsi.c:960:	if (mipi_dsi->backlight_power)
drivers/video/mxc/mipi_dsi.c:961:		mipi_dsi->backlight_power(false);
drivers/video/mxc/mipi_dsi.c:966:	struct mipi_dsi_info *mipi_dsi = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/mipi_dsi.c:968:	mxc_dispdrv_puthandle(mipi_dsi->disp_mipi);
drivers/video/mxc/mipi_dsi.c:969:	mxc_dispdrv_unregister(mipi_dsi->disp_mipi);
drivers/video/mxc/mipi_dsi.c:971:	dev_set_drvdata(&pdev->dev, NULL);
drivers/video/mxc/mipi_dsi.c:992:		return -ENODEV;
Binary file drivers/video/mxc/mxc_ipuv3_fb.o matches
drivers/video/mxc/elcdif_regs.h:2: * Copyright (C) 2010-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/elcdif_regs.h:18: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/elcdif_regs.h:21: * Based on arch/arm/mach-mx28/include/mach/regs-lcdif.h.
Binary file drivers/video/mxc/ldb.o matches
drivers/video/mxc/mxc_dvi.c:16: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mxc_dvi.c:75:	if (dvi->cable_plugin == 0)
drivers/video/mxc/mxc_dvi.c:90:	strcpy(buf, dvi->fbi->fix.id);
drivers/video/mxc/mxc_dvi.c:107:					dvi->edid[j*16 + i]);
drivers/video/mxc/mxc_dvi.c:125:	if (dvi->update()) {
drivers/video/mxc/mxc_dvi.c:127:		dvi->cable_plugin = 1;
drivers/video/mxc/mxc_dvi.c:130:		memcpy(edid_old, dvi->edid, MXC_EDID_LENGTH);
drivers/video/mxc/mxc_dvi.c:132:		if (mxc_edid_read(dvi->client->adapter, dvi->client->addr,
drivers/video/mxc/mxc_dvi.c:133:				dvi->edid, &dvi->edid_cfg, dvi->fbi) < 0)
drivers/video/mxc/mxc_dvi.c:134:			dev_err(&dvi->client->dev,
drivers/video/mxc/mxc_dvi.c:137:			if (!memcmp(edid_old, dvi->edid, MXC_EDID_LENGTH))
drivers/video/mxc/mxc_dvi.c:138:				dev_info(&dvi->client->dev,
drivers/video/mxc/mxc_dvi.c:140:			else if (dvi->fbi->monspecs.modedb_len > 0) {
drivers/video/mxc/mxc_dvi.c:145:				fb_destroy_modelist(&dvi->fbi->modelist);
drivers/video/mxc/mxc_dvi.c:147:				for (i = 0; i < dvi->fbi->monspecs.modedb_len; i++)
drivers/video/mxc/mxc_dvi.c:149:					if (!(dvi->fbi->monspecs.modedb[i].vmode & FB_VMODE_INTERLACED))
drivers/video/mxc/mxc_dvi.c:150:						fb_add_videomode(&dvi->fbi->monspecs.modedb[i],
drivers/video/mxc/mxc_dvi.c:151:								&dvi->fbi->modelist);
drivers/video/mxc/mxc_dvi.c:153:				fb_var_to_videomode(&m, &dvi->fbi->var);
drivers/video/mxc/mxc_dvi.c:155:						&dvi->fbi->modelist);
drivers/video/mxc/mxc_dvi.c:157:				fb_videomode_to_var(&dvi->fbi->var, mode);
drivers/video/mxc/mxc_dvi.c:159:				dvi->fbi->var.activate |= FB_ACTIVATE_FORCE;
drivers/video/mxc/mxc_dvi.c:161:				dvi->fbi->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxc_dvi.c:162:				fb_set_var(dvi->fbi, &dvi->fbi->var);
drivers/video/mxc/mxc_dvi.c:163:				dvi->fbi->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxc_dvi.c:168:		dvi->cable_plugin = 0;
drivers/video/mxc/mxc_dvi.c:172:	kobject_uevent_env(&dvi->pdev->dev.kobj, KOBJ_CHANGE, envp);
drivers/video/mxc/mxc_dvi.c:178:	schedule_delayed_work(&(dvi->det_work), msecs_to_jiffies(300));
drivers/video/mxc/mxc_dvi.c:187:	struct fsl_mxc_dvi_platform_data *plat = dvi->client->dev.platform_data;
drivers/video/mxc/mxc_dvi.c:189:	setting->dev_id = dvi->ipu = plat->ipu_id;
drivers/video/mxc/mxc_dvi.c:190:	setting->disp_id = dvi->di = plat->disp_id;
drivers/video/mxc/mxc_dvi.c:191:	setting->if_fmt = IPU_PIX_FMT_RGB24;
drivers/video/mxc/mxc_dvi.c:192:	dvi->fbi = setting->fbi;
drivers/video/mxc/mxc_dvi.c:193:	dvi->init = plat->init;
drivers/video/mxc/mxc_dvi.c:194:	dvi->update = plat->update;
drivers/video/mxc/mxc_dvi.c:196:	dvi->analog_reg = regulator_get(&dvi->pdev->dev, plat->analog_regulator);
drivers/video/mxc/mxc_dvi.c:197:	if (!IS_ERR(dvi->analog_reg)) {
drivers/video/mxc/mxc_dvi.c:198:		regulator_set_voltage(dvi->analog_reg, 2775000, 2775000);
drivers/video/mxc/mxc_dvi.c:199:		regulator_enable(dvi->analog_reg);
drivers/video/mxc/mxc_dvi.c:202:	if (dvi->init)
drivers/video/mxc/mxc_dvi.c:203:		dvi->init();
drivers/video/mxc/mxc_dvi.c:206:	if (!dvi->update)
drivers/video/mxc/mxc_dvi.c:207:		return -EINVAL;
drivers/video/mxc/mxc_dvi.c:211:		INIT_LIST_HEAD(&dvi->fbi->modelist);
drivers/video/mxc/mxc_dvi.c:212:		if (dvi->update()) {
drivers/video/mxc/mxc_dvi.c:213:			dvi->cable_plugin = 1;
drivers/video/mxc/mxc_dvi.c:215:			if (mxc_edid_read(dvi->client->adapter, dvi->client->addr,
drivers/video/mxc/mxc_dvi.c:216:					dvi->edid, &dvi->edid_cfg, dvi->fbi) < 0)
drivers/video/mxc/mxc_dvi.c:217:				dev_warn(&dvi->client->dev, "Can not read edid\n");
drivers/video/mxc/mxc_dvi.c:218:			else if (dvi->fbi->monspecs.modedb_len > 0) {
drivers/video/mxc/mxc_dvi.c:223:				for (i = 0; i < dvi->fbi->monspecs.modedb_len; i++) {
drivers/video/mxc/mxc_dvi.c:225:					if (!(dvi->fbi->monspecs.modedb[i].vmode
drivers/video/mxc/mxc_dvi.c:228:							&dvi->fbi->monspecs.modedb[i],
drivers/video/mxc/mxc_dvi.c:229:							&dvi->fbi->modelist);
drivers/video/mxc/mxc_dvi.c:232:				fb_find_mode(&dvi->fbi->var, dvi->fbi, setting->dft_mode_str,
drivers/video/mxc/mxc_dvi.c:233:						NULL, 0, NULL, setting->default_bpp);
drivers/video/mxc/mxc_dvi.c:235:				fb_var_to_videomode(&m, &dvi->fbi->var);
drivers/video/mxc/mxc_dvi.c:237:						&dvi->fbi->modelist);
drivers/video/mxc/mxc_dvi.c:238:				fb_videomode_to_var(&dvi->fbi->var, mode);
drivers/video/mxc/mxc_dvi.c:242:			dvi->cable_plugin = 0;
drivers/video/mxc/mxc_dvi.c:245:			ret = fb_find_mode(&dvi->fbi->var, dvi->fbi, setting->dft_mode_str,
drivers/video/mxc/mxc_dvi.c:246:					NULL, 0, NULL, setting->default_bpp);
drivers/video/mxc/mxc_dvi.c:248:				return -EINVAL;
drivers/video/mxc/mxc_dvi.c:253:	if (dvi->client->irq) {
drivers/video/mxc/mxc_dvi.c:254:		ret = request_irq(dvi->client->irq, mxc_dvi_detect_handler,
drivers/video/mxc/mxc_dvi.c:258:			dev_warn(&dvi->client->dev,
drivers/video/mxc/mxc_dvi.c:260:				dvi->client->irq);
drivers/video/mxc/mxc_dvi.c:263:			INIT_DELAYED_WORK(&(dvi->det_work), det_worker);
drivers/video/mxc/mxc_dvi.c:264:			ret = device_create_file(&dvi->pdev->dev, &dev_attr_fb_name);
drivers/video/mxc/mxc_dvi.c:266:				dev_warn(&dvi->client->dev,
drivers/video/mxc/mxc_dvi.c:268:			ret = device_create_file(&dvi->pdev->dev, &dev_attr_cable_state);
drivers/video/mxc/mxc_dvi.c:270:				dev_warn(&dvi->client->dev,
drivers/video/mxc/mxc_dvi.c:272:			ret = device_create_file(&dvi->pdev->dev, &dev_attr_edid);
drivers/video/mxc/mxc_dvi.c:274:				dev_warn(&dvi->client->dev,
drivers/video/mxc/mxc_dvi.c:277:			dev_set_drvdata(&dvi->pdev->dev, dvi);
drivers/video/mxc/mxc_dvi.c:289:	if (!IS_ERR(dvi->analog_reg))
drivers/video/mxc/mxc_dvi.c:290:		regulator_disable(dvi->analog_reg);
drivers/video/mxc/mxc_dvi.c:292:	free_irq(dvi->client->irq, dvi);
drivers/video/mxc/mxc_dvi.c:307:	if (!i2c_check_functionality(client->adapter,
drivers/video/mxc/mxc_dvi.c:309:		return -ENODEV;
drivers/video/mxc/mxc_dvi.c:313:		ret = -ENOMEM;
drivers/video/mxc/mxc_dvi.c:317:	dvi->pdev = platform_device_register_simple("mxc_dvi", 0, NULL, 0);
drivers/video/mxc/mxc_dvi.c:318:	if (IS_ERR(dvi->pdev)) {
drivers/video/mxc/mxc_dvi.c:321:		ret = PTR_ERR(dvi->pdev);
drivers/video/mxc/mxc_dvi.c:325:	dvi->client = client;
drivers/video/mxc/mxc_dvi.c:326:	dvi->disp_dvi = mxc_dispdrv_register(&dvi_drv);
drivers/video/mxc/mxc_dvi.c:327:	mxc_dispdrv_setdata(dvi->disp_dvi, dvi);
drivers/video/mxc/mxc_dvi.c:343:	mxc_dispdrv_puthandle(dvi->disp_dvi);
drivers/video/mxc/mxc_dvi.c:344:	mxc_dispdrv_unregister(dvi->disp_dvi);
drivers/video/mxc/mxc_dvi.c:345:	platform_device_unregister(dvi->pdev);
drivers/video/mxc/mxcfb.c:2: * Copyright 2004-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxcfb.c:41:#include <linux/dma-mapping.h>
drivers/video/mxc/mxcfb.c:48:#include <asm/mach-types.h>
drivers/video/mxc/mxcfb.c:126:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mxcfb.c:127:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mxcfb.c:128:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxcfb.c:130:	if (mxc_fbi->ipu_ch == MEM_SDC_FG)
drivers/video/mxc/mxcfb.c:131:		strncpy(fix->id, "DISP3 FG", 8);
drivers/video/mxc/mxcfb.c:133:		strncpy(fix->id, "DISP3 BG", 8);
drivers/video/mxc/mxcfb.c:135:	fix->line_length = var->xres_virtual * var->bits_per_pixel / 8;
drivers/video/mxc/mxcfb.c:137:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxcfb.c:138:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxcfb.c:139:	fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxcfb.c:140:	fix->xpanstep = 1;
drivers/video/mxc/mxcfb.c:141:	fix->ypanstep = 1;
drivers/video/mxc/mxcfb.c:158:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb.c:164:	ipu_disable_irq(mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxcfb.c:165:	ipu_disable_channel(mxc_fbi->ipu_ch, true);
drivers/video/mxc/mxcfb.c:166:	ipu_uninit_channel(mxc_fbi->ipu_ch);
drivers/video/mxc/mxcfb.c:167:	ipu_clear_irq(mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxcfb.c:170:	mem_len = fbi->var.yres_virtual * fbi->fix.line_length;
drivers/video/mxc/mxcfb.c:171:	if (mem_len > fbi->fix.smem_len) {
drivers/video/mxc/mxcfb.c:172:		if (fbi->fix.smem_start)
drivers/video/mxc/mxcfb.c:176:		if (mxc_fbi->ipu_ch == MEM_SDC_BG) {
drivers/video/mxc/mxcfb.c:181:			return -ENOMEM;
drivers/video/mxc/mxcfb.c:184:	ipu_init_channel(mxc_fbi->ipu_ch, NULL);
drivers/video/mxc/mxcfb.c:187:	memset((char *)fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxcfb.c:189:	if (mxc_fbi->ipu_ch == MEM_SDC_BG) {
drivers/video/mxc/mxcfb.c:191:		if (fbi->var.sync & FB_SYNC_HOR_HIGH_ACT)
drivers/video/mxc/mxcfb.c:193:		if (fbi->var.sync & FB_SYNC_VERT_HIGH_ACT)
drivers/video/mxc/mxcfb.c:195:		if (!(fbi->var.sync & FB_SYNC_CLK_LAT_FALL))
drivers/video/mxc/mxcfb.c:197:		if (fbi->var.sync & FB_SYNC_DATA_INVERT)
drivers/video/mxc/mxcfb.c:199:		if (!(fbi->var.sync & FB_SYNC_OE_LOW_ACT))
drivers/video/mxc/mxcfb.c:201:		if (fbi->var.sync & FB_SYNC_CLK_IDLE_EN)
drivers/video/mxc/mxcfb.c:203:		if (fbi->var.sync & FB_SYNC_SHARP_MODE)
drivers/video/mxc/mxcfb.c:206:		dev_dbg(fbi->device, "pixclock = %ul Hz\n",
drivers/video/mxc/mxcfb.c:207:			(u32) (PICOS2KHZ(fbi->var.pixclock) * 1000UL));
drivers/video/mxc/mxcfb.c:210:				       (PICOS2KHZ(fbi->var.pixclock)) * 1000UL,
drivers/video/mxc/mxcfb.c:211:				       fbi->var.xres, fbi->var.yres,
drivers/video/mxc/mxcfb.c:212:				       (fbi->var.sync & FB_SYNC_SWAP_RGB) ?
drivers/video/mxc/mxcfb.c:214:				       fbi->var.left_margin,
drivers/video/mxc/mxcfb.c:215:				       fbi->var.hsync_len,
drivers/video/mxc/mxcfb.c:216:				       fbi->var.right_margin,
drivers/video/mxc/mxcfb.c:217:				       fbi->var.upper_margin,
drivers/video/mxc/mxcfb.c:218:				       fbi->var.vsync_len,
drivers/video/mxc/mxcfb.c:219:				       fbi->var.lower_margin, sig_cfg) != 0) {
drivers/video/mxc/mxcfb.c:220:			dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:222:			return -EINVAL;
drivers/video/mxc/mxcfb.c:225:		fbi->mode =
drivers/video/mxc/mxcfb.c:226:		    (struct fb_videomode *)fb_match_mode(&fbi->var,
drivers/video/mxc/mxcfb.c:227:							 &fbi->modelist);
drivers/video/mxc/mxcfb.c:230:	ipu_disp_set_window_pos(mxc_fbi->ipu_ch, 0, 0);
drivers/video/mxc/mxcfb.c:232:	mxc_fbi->cur_ipu_buf = 1;
drivers/video/mxc/mxcfb.c:233:	sema_init(&mxc_fbi->flip_sem, 1);
drivers/video/mxc/mxcfb.c:234:	fbi->var.xoffset = fbi->var.yoffset = 0;
drivers/video/mxc/mxcfb.c:236:	retval = ipu_init_channel_buffer(mxc_fbi->ipu_ch, IPU_INPUT_BUFFER,
drivers/video/mxc/mxcfb.c:237:					 bpp_to_pixfmt(fbi->var.bits_per_pixel),
drivers/video/mxc/mxcfb.c:238:					 fbi->var.xres, fbi->var.yres,
drivers/video/mxc/mxcfb.c:239:					 fbi->var.xres_virtual,
drivers/video/mxc/mxcfb.c:241:					 fbi->fix.smem_start +
drivers/video/mxc/mxcfb.c:242:					 (fbi->fix.line_length * fbi->var.yres),
drivers/video/mxc/mxcfb.c:243:					 fbi->fix.smem_start,
drivers/video/mxc/mxcfb.c:247:		dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:252:	if (mxc_fbi->blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb.c:253:		ipu_enable_channel(mxc_fbi->ipu_ch);
drivers/video/mxc/mxcfb.c:271:	if (var->xres_virtual < var->xres)
drivers/video/mxc/mxcfb.c:272:		var->xres_virtual = var->xres;
drivers/video/mxc/mxcfb.c:273:	if (var->yres_virtual < var->yres)
drivers/video/mxc/mxcfb.c:274:		var->yres_virtual = var->yres;
drivers/video/mxc/mxcfb.c:277:	if ((info->fix.smem_start == FB_RAM_BASE_ADDR) &&
drivers/video/mxc/mxcfb.c:278:	    ((var->yres_virtual * var->xres_virtual * var->bits_per_pixel / 8) >
drivers/video/mxc/mxcfb.c:280:		return -EINVAL;
drivers/video/mxc/mxcfb.c:284:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mxcfb.c:285:	    (var->bits_per_pixel != 16)) {
drivers/video/mxc/mxcfb.c:286:		var->bits_per_pixel = default_bpp;
drivers/video/mxc/mxcfb.c:289:	switch (var->bits_per_pixel) {
drivers/video/mxc/mxcfb.c:291:		var->red.length = 5;
drivers/video/mxc/mxcfb.c:292:		var->red.offset = 11;
drivers/video/mxc/mxcfb.c:293:		var->red.msb_right = 0;
drivers/video/mxc/mxcfb.c:295:		var->green.length = 6;
drivers/video/mxc/mxcfb.c:296:		var->green.offset = 5;
drivers/video/mxc/mxcfb.c:297:		var->green.msb_right = 0;
drivers/video/mxc/mxcfb.c:299:		var->blue.length = 5;
drivers/video/mxc/mxcfb.c:300:		var->blue.offset = 0;
drivers/video/mxc/mxcfb.c:301:		var->blue.msb_right = 0;
drivers/video/mxc/mxcfb.c:303:		var->transp.length = 0;
drivers/video/mxc/mxcfb.c:304:		var->transp.offset = 0;
drivers/video/mxc/mxcfb.c:305:		var->transp.msb_right = 0;
drivers/video/mxc/mxcfb.c:308:		var->red.length = 8;
drivers/video/mxc/mxcfb.c:309:		var->red.offset = 16;
drivers/video/mxc/mxcfb.c:310:		var->red.msb_right = 0;
drivers/video/mxc/mxcfb.c:312:		var->green.length = 8;
drivers/video/mxc/mxcfb.c:313:		var->green.offset = 8;
drivers/video/mxc/mxcfb.c:314:		var->green.msb_right = 0;
drivers/video/mxc/mxcfb.c:316:		var->blue.length = 8;
drivers/video/mxc/mxcfb.c:317:		var->blue.offset = 0;
drivers/video/mxc/mxcfb.c:318:		var->blue.msb_right = 0;
drivers/video/mxc/mxcfb.c:320:		var->transp.length = 0;
drivers/video/mxc/mxcfb.c:321:		var->transp.offset = 0;
drivers/video/mxc/mxcfb.c:322:		var->transp.msb_right = 0;
drivers/video/mxc/mxcfb.c:325:		var->red.length = 8;
drivers/video/mxc/mxcfb.c:326:		var->red.offset = 16;
drivers/video/mxc/mxcfb.c:327:		var->red.msb_right = 0;
drivers/video/mxc/mxcfb.c:329:		var->green.length = 8;
drivers/video/mxc/mxcfb.c:330:		var->green.offset = 8;
drivers/video/mxc/mxcfb.c:331:		var->green.msb_right = 0;
drivers/video/mxc/mxcfb.c:333:		var->blue.length = 8;
drivers/video/mxc/mxcfb.c:334:		var->blue.offset = 0;
drivers/video/mxc/mxcfb.c:335:		var->blue.msb_right = 0;
drivers/video/mxc/mxcfb.c:337:		var->transp.length = 8;
drivers/video/mxc/mxcfb.c:338:		var->transp.offset = 24;
drivers/video/mxc/mxcfb.c:339:		var->transp.msb_right = 0;
drivers/video/mxc/mxcfb.c:343:	if (var->pixclock < 1000) {
drivers/video/mxc/mxcfb.c:344:		htotal = var->xres + var->right_margin + var->hsync_len +
drivers/video/mxc/mxcfb.c:345:		    var->left_margin;
drivers/video/mxc/mxcfb.c:346:		vtotal = var->yres + var->lower_margin + var->vsync_len +
drivers/video/mxc/mxcfb.c:347:		    var->upper_margin;
drivers/video/mxc/mxcfb.c:348:		var->pixclock = (vtotal * htotal * 6UL) / 100UL;
drivers/video/mxc/mxcfb.c:349:		var->pixclock = KHZ2PICOS(var->pixclock);
drivers/video/mxc/mxcfb.c:350:		dev_dbg(info->device,
drivers/video/mxc/mxcfb.c:352:			var->pixclock);
drivers/video/mxc/mxcfb.c:355:	var->height = -1;
drivers/video/mxc/mxcfb.c:356:	var->width = -1;
drivers/video/mxc/mxcfb.c:357:	var->grayscale = 0;
drivers/video/mxc/mxcfb.c:360:	var->nonstd = 0;
drivers/video/mxc/mxcfb.c:368:	chan >>= 16 - bf->length;
drivers/video/mxc/mxcfb.c:369:	return chan << bf->offset;
drivers/video/mxc/mxcfb.c:382:	if (fbi->var.grayscale)
drivers/video/mxc/mxcfb.c:385:	switch (fbi->fix.visual) {
drivers/video/mxc/mxcfb.c:388:		 * 16-bit True Colour.  We encode the RGB value
drivers/video/mxc/mxcfb.c:392:			u32 *pal = fbi->pseudo_palette;
drivers/video/mxc/mxcfb.c:394:			val = _chan_to_field(red, &fbi->var.red);
drivers/video/mxc/mxcfb.c:395:			val |= _chan_to_field(green, &fbi->var.green);
drivers/video/mxc/mxcfb.c:396:			val |= _chan_to_field(blue, &fbi->var.blue);
drivers/video/mxc/mxcfb.c:440:				retval = -EFAULT;
drivers/video/mxc/mxcfb.c:446:			dev_dbg(fbi->device, "Set global alpha to %d\n",
drivers/video/mxc/mxcfb.c:454:				retval = -EFAULT;
drivers/video/mxc/mxcfb.c:459:			dev_dbg(fbi->device, "Set color key to 0x%08X\n",
drivers/video/mxc/mxcfb.c:471:				dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:473:				retval = -ETIME;
drivers/video/mxc/mxcfb.c:476:				dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:478:				retval = -ERESTARTSYS;
drivers/video/mxc/mxcfb.c:487:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb.c:489:			if (put_user(mxc_fbi->ipu_ch, argp))
drivers/video/mxc/mxcfb.c:490:				return -EFAULT;
drivers/video/mxc/mxcfb.c:495:		retval = -EINVAL;
drivers/video/mxc/mxcfb.c:518:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb.c:533:				return -ENOMEM;
drivers/video/mxc/mxcfb.c:536:				return -EFAULT;
drivers/video/mxc/mxcfb.c:538:			mem->size = PAGE_ALIGN(size);
drivers/video/mxc/mxcfb.c:540:			mem->cpu_addr = dma_alloc_coherent(fbi->device, size,
drivers/video/mxc/mxcfb.c:541:							   &mem->phy_addr,
drivers/video/mxc/mxcfb.c:543:			if (mem->cpu_addr == NULL) {
drivers/video/mxc/mxcfb.c:545:				return -ENOMEM;
drivers/video/mxc/mxcfb.c:548:			list_add(&mem->list, &fb_alloc_list);
drivers/video/mxc/mxcfb.c:550:			dev_dbg(fbi->device, "allocated %d bytes @ 0x%08X\n",
drivers/video/mxc/mxcfb.c:551:				mem->size, mem->phy_addr);
drivers/video/mxc/mxcfb.c:553:			if (put_user(mem->phy_addr, argp))
drivers/video/mxc/mxcfb.c:554:				return -EFAULT;
drivers/video/mxc/mxcfb.c:564:				return -EFAULT;
drivers/video/mxc/mxcfb.c:566:			retval = -EINVAL;
drivers/video/mxc/mxcfb.c:568:				if (mem->phy_addr == offset) {
drivers/video/mxc/mxcfb.c:569:					list_del(&mem->list);
drivers/video/mxc/mxcfb.c:570:					dma_free_coherent(fbi->device,
drivers/video/mxc/mxcfb.c:571:							  mem->size,
drivers/video/mxc/mxcfb.c:572:							  mem->cpu_addr,
drivers/video/mxc/mxcfb.c:573:							  mem->phy_addr);
drivers/video/mxc/mxcfb.c:586:				retval = -EFAULT;
drivers/video/mxc/mxcfb.c:589:			retval = ipu_disp_set_window_pos(mxc_fbi->ipu_ch,
drivers/video/mxc/mxcfb.c:596:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb.c:598:			if (put_user(mxc_fbi->ipu_ch, argp))
drivers/video/mxc/mxcfb.c:599:				return -EFAULT;
drivers/video/mxc/mxcfb.c:604:		retval = -EINVAL;
drivers/video/mxc/mxcfb.c:616:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxcfb.c:618:	dev_dbg(info->device, "blank = %d\n", blank);
drivers/video/mxc/mxcfb.c:620:	if (mxc_fbi->blank == blank)
drivers/video/mxc/mxcfb.c:628:	mxc_fbi->blank = blank;
drivers/video/mxc/mxcfb.c:653:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxcfb.c:655:	dev_dbg(info->device, "ovl blank = %d\n", blank);
drivers/video/mxc/mxcfb.c:657:	if (mxc_fbi->blank == blank)
drivers/video/mxc/mxcfb.c:665:	mxc_fbi->blank = blank;
drivers/video/mxc/mxcfb.c:692:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxcfb.c:703:	if (var->xoffset > 0) {
drivers/video/mxc/mxcfb.c:704:		dev_dbg(info->device, "x panning not supported\n");
drivers/video/mxc/mxcfb.c:705:		return -EINVAL;
drivers/video/mxc/mxcfb.c:708:	if ((info->var.xoffset == var->xoffset) &&
drivers/video/mxc/mxcfb.c:709:	    (info->var.yoffset == var->yoffset)) {
drivers/video/mxc/mxcfb.c:714:	y_bottom = var->yoffset;
drivers/video/mxc/mxcfb.c:716:	if (!(var->vmode & FB_VMODE_YWRAP)) {
drivers/video/mxc/mxcfb.c:717:		y_bottom += var->yres;
drivers/video/mxc/mxcfb.c:720:	if (y_bottom > info->var.yres_virtual) {
drivers/video/mxc/mxcfb.c:721:		return -EINVAL;
drivers/video/mxc/mxcfb.c:724:	base = (var->yoffset * var->xres_virtual + var->xoffset);
drivers/video/mxc/mxcfb.c:725:	base *= (var->bits_per_pixel) / 8;
drivers/video/mxc/mxcfb.c:726:	base += info->fix.smem_start;
drivers/video/mxc/mxcfb.c:728:	down(&mxc_fbi->flip_sem);
drivers/video/mxc/mxcfb.c:730:	spin_lock_irqsave(&mxc_fbi->fb_lock, lock_flags);
drivers/video/mxc/mxcfb.c:732:	dev_dbg(info->device, "Updating SDC BG buf %d address=0x%08lX\n",
drivers/video/mxc/mxcfb.c:733:		mxc_fbi->cur_ipu_buf, base);
drivers/video/mxc/mxcfb.c:735:	mxc_fbi->cur_ipu_buf = !mxc_fbi->cur_ipu_buf;
drivers/video/mxc/mxcfb.c:736:	if (ipu_update_channel_buffer(mxc_fbi->ipu_ch, IPU_INPUT_BUFFER,
drivers/video/mxc/mxcfb.c:737:				      mxc_fbi->cur_ipu_buf, base) == 0) {
drivers/video/mxc/mxcfb.c:738:		ipu_select_buffer(mxc_fbi->ipu_ch, IPU_INPUT_BUFFER,
drivers/video/mxc/mxcfb.c:739:				  mxc_fbi->cur_ipu_buf);
drivers/video/mxc/mxcfb.c:740:		ipu_clear_irq(mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxcfb.c:741:		ipu_enable_irq(mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxcfb.c:743:		dev_err(info->device,
drivers/video/mxc/mxcfb.c:745:			mxc_fbi->cur_ipu_buf, base);
drivers/video/mxc/mxcfb.c:748:	spin_unlock_irqrestore(&mxc_fbi->fb_lock, lock_flags);
drivers/video/mxc/mxcfb.c:750:	dev_dbg(info->device, "Update complete\n");
drivers/video/mxc/mxcfb.c:752:	info->var.xoffset = var->xoffset;
drivers/video/mxc/mxcfb.c:753:	info->var.yoffset = var->yoffset;
drivers/video/mxc/mxcfb.c:755:	if (var->vmode & FB_VMODE_YWRAP) {
drivers/video/mxc/mxcfb.c:756:		info->var.vmode |= FB_VMODE_YWRAP;
drivers/video/mxc/mxcfb.c:758:		info->var.vmode &= ~FB_VMODE_YWRAP;
drivers/video/mxc/mxcfb.c:775:	unsigned long offset = vma->vm_pgoff << PAGE_SHIFT;
drivers/video/mxc/mxcfb.c:778:	if (offset < fbi->fix.smem_len) {
drivers/video/mxc/mxcfb.c:780:		len = fbi->fix.smem_len - offset;
drivers/video/mxc/mxcfb.c:781:		vma->vm_pgoff = (fbi->fix.smem_start + offset) >> PAGE_SHIFT;
drivers/video/mxc/mxcfb.c:784:			if (offset == mem->phy_addr) {
drivers/video/mxc/mxcfb.c:786:				len = mem->size;
drivers/video/mxc/mxcfb.c:791:			return -EINVAL;
drivers/video/mxc/mxcfb.c:796:	if (vma->vm_end - vma->vm_start > len) {
drivers/video/mxc/mxcfb.c:797:		return -EINVAL;
drivers/video/mxc/mxcfb.c:800:	/* make buffers write-thru cacheable */
drivers/video/mxc/mxcfb.c:801:	vma->vm_page_prot = __pgprot(pgprot_val(vma->vm_page_prot) &
drivers/video/mxc/mxcfb.c:804:	vma->vm_flags |= VM_IO | VM_RESERVED;
drivers/video/mxc/mxcfb.c:806:	if (remap_pfn_range(vma, vma->vm_start, vma->vm_pgoff,
drivers/video/mxc/mxcfb.c:807:			    vma->vm_end - vma->vm_start, vma->vm_page_prot)) {
drivers/video/mxc/mxcfb.c:808:		dev_dbg(fbi->device, "mmap remap_pfn_range failed\n");
drivers/video/mxc/mxcfb.c:809:		return -ENOBUFS;
drivers/video/mxc/mxcfb.c:854:	fb_data->vsync_flag = 1;
drivers/video/mxc/mxcfb.c:855:	wake_up_interruptible(&fb_data->vsync_wq);
drivers/video/mxc/mxcfb.c:862:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb.c:864:	up(&mxc_fbi->flip_sem);
drivers/video/mxc/mxcfb.c:881:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)drv_data->fbi->par;
drivers/video/mxc/mxcfb.c:883:	    (struct mxcfb_info *)drv_data->fbi_ovl->par;
drivers/video/mxc/mxcfb.c:888:	drv_data->suspended = true;
drivers/video/mxc/mxcfb.c:891:	fb_set_suspend(drv_data->fbi, 1);
drivers/video/mxc/mxcfb.c:892:	fb_set_suspend(drv_data->fbi_ovl, 1);
drivers/video/mxc/mxcfb.c:895:	if (mxc_fbi_ovl->blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb.c:899:	if (mxc_fbi->blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb.c:901:		if (drv_data->fbi->fix.smem_start != FB_RAM_BASE_ADDR) {
drivers/video/mxc/mxcfb.c:903:			memcpy(fbmem, drv_data->fbi->screen_base, FB_RAM_SIZE);
drivers/video/mxc/mxcfb.c:905:			mxc_fbi->cur_ipu_buf = !mxc_fbi->cur_ipu_buf;
drivers/video/mxc/mxcfb.c:907:						  mxc_fbi->cur_ipu_buf,
drivers/video/mxc/mxcfb.c:910:					  mxc_fbi->cur_ipu_buf);
drivers/video/mxc/mxcfb.c:927:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)drv_data->fbi->par;
drivers/video/mxc/mxcfb.c:929:	    (struct mxcfb_info *)drv_data->fbi_ovl->par;
drivers/video/mxc/mxcfb.c:931:	drv_data->suspended = false;
drivers/video/mxc/mxcfb.c:933:	if (mxc_fbi->blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb.c:936:		if (drv_data->fbi->fix.smem_start != FB_RAM_BASE_ADDR) {
drivers/video/mxc/mxcfb.c:937:			mxc_fbi->cur_ipu_buf = !mxc_fbi->cur_ipu_buf;
drivers/video/mxc/mxcfb.c:939:						  mxc_fbi->cur_ipu_buf,
drivers/video/mxc/mxcfb.c:940:						  drv_data->fbi->fix.
drivers/video/mxc/mxcfb.c:943:					  mxc_fbi->cur_ipu_buf);
drivers/video/mxc/mxcfb.c:951:	if (mxc_fbi_ovl->blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb.c:956:	fb_set_suspend(drv_data->fbi, 0);
drivers/video/mxc/mxcfb.c:957:	fb_set_suspend(drv_data->fbi_ovl, 0);
drivers/video/mxc/mxcfb.c:960:	wake_up_interruptible(&drv_data->suspend_wq);
drivers/video/mxc/mxcfb.c:974: * into a non-cached, non-buffered, memory region to allow palette and pixel
drivers/video/mxc/mxcfb.c:990:		fbi->fix.smem_len = FB_RAM_SIZE;
drivers/video/mxc/mxcfb.c:991:		fbi->fix.smem_start = FB_RAM_BASE_ADDR;
drivers/video/mxc/mxcfb.c:992:		if (fbi->fix.smem_len <
drivers/video/mxc/mxcfb.c:993:		    (fbi->var.yres_virtual * fbi->fix.line_length)) {
drivers/video/mxc/mxcfb.c:994:			dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:996:			retval = -EINVAL;
drivers/video/mxc/mxcfb.c:1000:		if (request_mem_region(fbi->fix.smem_start, fbi->fix.smem_len,
drivers/video/mxc/mxcfb.c:1001:				       fbi->device->driver->name) == NULL) {
drivers/video/mxc/mxcfb.c:1002:			dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:1004:			retval = -ENOMEM;
drivers/video/mxc/mxcfb.c:1008:		fbi->screen_base = ioremap(fbi->fix.smem_start,
drivers/video/mxc/mxcfb.c:1009:					 fbi->fix.smem_len);
drivers/video/mxc/mxcfb.c:1010:		if (!fbi->screen_base) {
drivers/video/mxc/mxcfb.c:1011:			dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:1013:			release_mem_region(fbi->fix.smem_start,
drivers/video/mxc/mxcfb.c:1014:					   fbi->fix.smem_len);
drivers/video/mxc/mxcfb.c:1015:			retval = -EIO;
drivers/video/mxc/mxcfb.c:1024:		fbi->fix.smem_len = fbi->var.yres_virtual *
drivers/video/mxc/mxcfb.c:1025:		    fbi->fix.line_length;
drivers/video/mxc/mxcfb.c:1026:		fbi->screen_base =
drivers/video/mxc/mxcfb.c:1027:		    dma_alloc_writecombine(fbi->device,
drivers/video/mxc/mxcfb.c:1028:					   fbi->fix.smem_len,
drivers/video/mxc/mxcfb.c:1029:					   (dma_addr_t *) &fbi->fix.smem_start,
drivers/video/mxc/mxcfb.c:1032:		if (fbi->screen_base == 0) {
drivers/video/mxc/mxcfb.c:1033:			dev_err(fbi->device,
drivers/video/mxc/mxcfb.c:1035:			retval = -EBUSY;
drivers/video/mxc/mxcfb.c:1040:	dev_dbg(fbi->device, "allocated fb @ paddr=0x%08X, size=%d.\n",
drivers/video/mxc/mxcfb.c:1041:		(uint32_t) fbi->fix.smem_start, fbi->fix.smem_len);
drivers/video/mxc/mxcfb.c:1043:	fbi->screen_size = fbi->fix.smem_len;
drivers/video/mxc/mxcfb.c:1046:	memset((char *)fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxcfb.c:1051:	fbi->fix.smem_len = 0;
drivers/video/mxc/mxcfb.c:1052:	fbi->fix.smem_start = 0;
drivers/video/mxc/mxcfb.c:1053:	fbi->screen_base = NULL;
drivers/video/mxc/mxcfb.c:1058: * De-allocates the DRAM memory for the frame buffer.
drivers/video/mxc/mxcfb.c:1067:	if (fbi->fix.smem_start == FB_RAM_BASE_ADDR) {
drivers/video/mxc/mxcfb.c:1068:		iounmap(fbi->screen_base);
drivers/video/mxc/mxcfb.c:1069:		release_mem_region(fbi->fix.smem_start, fbi->fix.smem_len);
drivers/video/mxc/mxcfb.c:1070:		fbi->fix.smem_start = 0;
drivers/video/mxc/mxcfb.c:1071:		fbi->fix.smem_len = 0;
drivers/video/mxc/mxcfb.c:1076:		dma_free_writecombine(fbi->device, fbi->fix.smem_len,
drivers/video/mxc/mxcfb.c:1077:				      fbi->screen_base, fbi->fix.smem_start);
drivers/video/mxc/mxcfb.c:1079:	fbi->screen_base = 0;
drivers/video/mxc/mxcfb.c:1080:	fbi->fix.smem_start = 0;
drivers/video/mxc/mxcfb.c:1081:	fbi->fix.smem_len = 0;
drivers/video/mxc/mxcfb.c:1106:	mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb.c:1108:	fbi->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mxcfb.c:1110:	fbi->fbops = ops;
drivers/video/mxc/mxcfb.c:1111:	fbi->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mxcfb.c:1112:	fbi->pseudo_palette = mxcfbi->pseudo_palette;
drivers/video/mxc/mxcfb.c:1114:	spin_lock_init(&mxcfbi->fb_lock);
drivers/video/mxc/mxcfb.c:1119:	fb_alloc_cmap(&fbi->cmap, 16, 0);
drivers/video/mxc/mxcfb.c:1134:	char *mode = pdev->dev.platform_data;
drivers/video/mxc/mxcfb.c:1143:	fbi = mxcfb_init_fbinfo(&pdev->dev, &mxcfb_ops);
drivers/video/mxc/mxcfb.c:1145:		ret = -ENOMEM;
drivers/video/mxc/mxcfb.c:1148:	mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb.c:1150:	mxcfbi->ipu_ch_irq = IPU_IRQ_SDC_BG_EOF;
drivers/video/mxc/mxcfb.c:1151:	mxcfbi->cur_ipu_buf = 0;
drivers/video/mxc/mxcfb.c:1152:	mxcfbi->ipu_ch = MEM_SDC_BG;
drivers/video/mxc/mxcfb.c:1159:		dev_err(&pdev->dev, "Error registering BG irq handler.\n");
drivers/video/mxc/mxcfb.c:1160:		ret = -EBUSY;
drivers/video/mxc/mxcfb.c:1169:	if (!fb_find_mode(&fbi->var, fbi, fb_mode, mxcfb_modedb,
drivers/video/mxc/mxcfb.c:1171:		ret = -EBUSY;
drivers/video/mxc/mxcfb.c:1174:	fb_videomode_to_modelist(mxcfb_modedb, mxcfb_modedb_sz, &fbi->modelist);
drivers/video/mxc/mxcfb.c:1178:	fbi->var.yres_virtual = fbi->var.yres * 2;
drivers/video/mxc/mxcfb.c:1186:	mxcfbi->blank = FB_BLANK_NORMAL;
drivers/video/mxc/mxcfb.c:1204:	fbi_ovl = mxcfb_init_fbinfo(&pdev->dev, &mxcfb_ovl_ops);
drivers/video/mxc/mxcfb.c:1206:		ret = -ENOMEM;
drivers/video/mxc/mxcfb.c:1210:	mxcfbi = (struct mxcfb_info *)fbi_ovl->par;
drivers/video/mxc/mxcfb.c:1212:	mxcfbi->ipu_ch_irq = IPU_IRQ_SDC_FG_EOF;
drivers/video/mxc/mxcfb.c:1213:	mxcfbi->cur_ipu_buf = 0;
drivers/video/mxc/mxcfb.c:1214:	mxcfbi->ipu_ch = MEM_SDC_FG;
drivers/video/mxc/mxcfb.c:1218:		dev_err(fbi->device, "Error registering FG irq handler.\n");
drivers/video/mxc/mxcfb.c:1219:		ret = -EBUSY;
drivers/video/mxc/mxcfb.c:1222:	ipu_disable_irq(mxcfbi->ipu_ch_irq);
drivers/video/mxc/mxcfb.c:1225:	fbi_ovl->var = fbi->var;
drivers/video/mxc/mxcfb.c:1226:	fbi_ovl->var.yres_virtual = fbi->var.yres * 2;
drivers/video/mxc/mxcfb.c:1229:	mxcfbi->blank = FB_BLANK_NORMAL;
drivers/video/mxc/mxcfb.c:1265:	fb_dealloc_cmap(&fbi_ovl->cmap);
drivers/video/mxc/mxcfb.c:1272:	fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxcfb.c:1328:		return -ENODEV;
drivers/video/mxc/mxcfb.c:1343:		if (&fbi->cmap)
drivers/video/mxc/mxcfb.c:1344:			fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxcfb.c:1354:		if (&fbi->cmap)
drivers/video/mxc/mxcfb.c:1355:			fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxcfb_claa_wvga.c:2: * Copyright 2008-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_claa_wvga.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxcfb_claa_wvga.c:53:	 "CLAA-WVGA", 57, 800, 480, 37037, 40, 60, 10, 10, 20, 10,
drivers/video/mxc/mxcfb_claa_wvga.c:71:	info->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_claa_wvga.c:73:	info->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_claa_wvga.c:81:	if (strcmp(event->info->fix.id, "DISP3 BG") &&
drivers/video/mxc/mxcfb_claa_wvga.c:82:	    strcmp(event->info->fix.id, "mxc_elcdif_fb"))
drivers/video/mxc/mxcfb_claa_wvga.c:87:		lcd_init_fb(event->info);
drivers/video/mxc/mxcfb_claa_wvga.c:88:		fb_show_logo(event->info, 0);
drivers/video/mxc/mxcfb_claa_wvga.c:92:		if ((event->info->var.xres != 800) ||
drivers/video/mxc/mxcfb_claa_wvga.c:93:		    (event->info->var.yres != 480)) {
drivers/video/mxc/mxcfb_claa_wvga.c:96:		if (*((int *)event->data) == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb_claa_wvga.c:120:	struct mxc_lcd_platform_data *plat = pdev->dev.platform_data;
drivers/video/mxc/mxcfb_claa_wvga.c:123:		if (plat->reset)
drivers/video/mxc/mxcfb_claa_wvga.c:124:			plat->reset();
drivers/video/mxc/mxcfb_claa_wvga.c:126:		io_reg = regulator_get(&pdev->dev, plat->io_reg);
drivers/video/mxc/mxcfb_claa_wvga.c:129:		core_reg = regulator_get(&pdev->dev, plat->core_reg);
drivers/video/mxc/mxcfb_claa_wvga.c:138:		if (strcmp(registered_fb[i]->fix.id, "DISP3 BG") == 0 ||
drivers/video/mxc/mxcfb_claa_wvga.c:139:		    strcmp(registered_fb[i]->fix.id, "mxc_elcdif_fb") == 0) {
drivers/video/mxc/mxcfb_claa_wvga.c:143:		} else if (strcmp(registered_fb[i]->fix.id, "DISP3 FG") == 0) {
drivers/video/mxc/mxcfb_claa_wvga.c:203:	dev_dbg(&plcd_dev->dev, "turning on LCD\n");
drivers/video/mxc/mxcfb_claa_wvga.c:218:	dev_dbg(&plcd_dev->dev, "turning off LCD\n");
drivers/video/mxc/mxc_edid.c:2: * Copyright 2009-2013 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxc_edid.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxc_edid.c:201:	return (mode1->xres         == mode2->xres &&
drivers/video/mxc/mxc_edid.c:202:		mode1->yres         == mode2->yres &&
drivers/video/mxc/mxc_edid.c:203:		mode1->hsync_len    == mode2->hsync_len &&
drivers/video/mxc/mxc_edid.c:204:		mode1->vsync_len    == mode2->vsync_len &&
drivers/video/mxc/mxc_edid.c:205:		mode1->left_margin  == mode2->left_margin &&
drivers/video/mxc/mxc_edid.c:206:		mode1->right_margin == mode2->right_margin &&
drivers/video/mxc/mxc_edid.c:207:		mode1->upper_margin == mode2->upper_margin &&
drivers/video/mxc/mxc_edid.c:208:		mode1->lower_margin == mode2->lower_margin &&
drivers/video/mxc/mxc_edid.c:209:		mode1->sync         == mode2->sync &&
drivers/video/mxc/mxc_edid.c:210:		mode1->refresh         == mode2->refresh &&
drivers/video/mxc/mxc_edid.c:211:		(mode1->vmode & mask) == (mode2->vmode & mask));
drivers/video/mxc/mxc_edid.c:217:	mode->xres = H_ACTIVE;
drivers/video/mxc/mxc_edid.c:218:	mode->yres = V_ACTIVE;
drivers/video/mxc/mxc_edid.c:219:	mode->pixclock = PIXEL_CLOCK;
drivers/video/mxc/mxc_edid.c:220:	mode->pixclock /= 1000;
drivers/video/mxc/mxc_edid.c:221:	mode->pixclock = KHZ2PICOS(mode->pixclock);
drivers/video/mxc/mxc_edid.c:222:	mode->right_margin = H_SYNC_OFFSET;
drivers/video/mxc/mxc_edid.c:223:	mode->left_margin = (H_ACTIVE + H_BLANKING) -
drivers/video/mxc/mxc_edid.c:225:	mode->upper_margin = V_BLANKING - V_SYNC_OFFSET -
drivers/video/mxc/mxc_edid.c:227:	mode->lower_margin = V_SYNC_OFFSET;
drivers/video/mxc/mxc_edid.c:228:	mode->hsync_len = H_SYNC_WIDTH;
drivers/video/mxc/mxc_edid.c:229:	mode->vsync_len = V_SYNC_WIDTH;
drivers/video/mxc/mxc_edid.c:231:		mode->sync |= FB_SYNC_HOR_HIGH_ACT;
drivers/video/mxc/mxc_edid.c:233:		mode->sync |= FB_SYNC_VERT_HIGH_ACT;
drivers/video/mxc/mxc_edid.c:234:	mode->refresh = PIXEL_CLOCK/((H_ACTIVE + H_BLANKING) *
drivers/video/mxc/mxc_edid.c:237:		mode->yres *= 2;
drivers/video/mxc/mxc_edid.c:238:		mode->upper_margin *= 2;
drivers/video/mxc/mxc_edid.c:239:		mode->lower_margin *= 2;
drivers/video/mxc/mxc_edid.c:240:		mode->vsync_len *= 2;
drivers/video/mxc/mxc_edid.c:241:		mode->vmode |= FB_VMODE_INTERLACED;
drivers/video/mxc/mxc_edid.c:243:	mode->flag = FB_MODE_IS_DETAILED;
drivers/video/mxc/mxc_edid.c:246:		mode->vmode |= FB_VMODE_ASPECT_16_9;
drivers/video/mxc/mxc_edid.c:248:		mode->vmode |= FB_VMODE_ASPECT_4_3;
drivers/video/mxc/mxc_edid.c:249:	else if ((mode->xres / 16) == (mode->yres / 9))
drivers/video/mxc/mxc_edid.c:250:		mode->vmode |= FB_VMODE_ASPECT_16_9;
drivers/video/mxc/mxc_edid.c:251:	else if ((mode->xres / 4) == (mode->yres / 3))
drivers/video/mxc/mxc_edid.c:252:		mode->vmode |= FB_VMODE_ASPECT_4_3;
drivers/video/mxc/mxc_edid.c:254:	if (mode->vmode & FB_VMODE_ASPECT_16_9)
drivers/video/mxc/mxc_edid.c:256:	if (mode->vmode & FB_VMODE_ASPECT_4_3)
drivers/video/mxc/mxc_edid.c:263:	DPRINTK("%sHSync %sVSync\n\n", (HSYNC_POSITIVE) ? "+" : "-",
drivers/video/mxc/mxc_edid.c:264:	       (VSYNC_POSITIVE) ? "+" : "-");
drivers/video/mxc/mxc_edid.c:278:		return -1;
drivers/video/mxc/mxc_edid.c:283:		return -1;
drivers/video/mxc/mxc_edid.c:288:		cfg->cea_underscan = (edid[index] >> 7) & 0x1;
drivers/video/mxc/mxc_edid.c:289:		cfg->cea_basicaudio = (edid[index] >> 6) & 0x1;
drivers/video/mxc/mxc_edid.c:290:		cfg->cea_ycbcr444 = (edid[index] >> 5) & 0x1;
drivers/video/mxc/mxc_edid.c:291:		cfg->cea_ycbcr422 = (edid[index] >> 4) & 0x1;
drivers/video/mxc/mxc_edid.c:293:		DPRINTK("CEA underscan %d\n", cfg->cea_underscan);
drivers/video/mxc/mxc_edid.c:294:		DPRINTK("CEA basicaudio %d\n", cfg->cea_basicaudio);
drivers/video/mxc/mxc_edid.c:295:		DPRINTK("CEA ycbcr444 %d\n", cfg->cea_ycbcr444);
drivers/video/mxc/mxc_edid.c:296:		DPRINTK("CEA ycbcr422 %d\n", cfg->cea_ycbcr422);
drivers/video/mxc/mxc_edid.c:349:					cfg->physical_address[0] = (edid[index+4] & 0xf0) >> 4;
drivers/video/mxc/mxc_edid.c:350:					cfg->physical_address[1] = (edid[index+4] & 0x0f);
drivers/video/mxc/mxc_edid.c:351:					cfg->physical_address[2] = (edid[index+5] & 0xf0) >> 4;
drivers/video/mxc/mxc_edid.c:352:					cfg->physical_address[3] = (edid[index+5] & 0x0f);
drivers/video/mxc/mxc_edid.c:357:						cfg->hdmi_cap = 1;
drivers/video/mxc/mxc_edid.c:362:							cfg->vsd_support_ai = true;
drivers/video/mxc/mxc_edid.c:364:							cfg->vsd_dc_48bit = true;
drivers/video/mxc/mxc_edid.c:366:							cfg->vsd_dc_36bit = true;
drivers/video/mxc/mxc_edid.c:368:							cfg->vsd_dc_30bit = true;
drivers/video/mxc/mxc_edid.c:370:							cfg->vsd_dc_y444 = true;
drivers/video/mxc/mxc_edid.c:372:							cfg->vsd_dvi_dual = true;
drivers/video/mxc/mxc_edid.c:375:					DPRINTK("VSD hdmi capability %d\n", cfg->hdmi_cap);
drivers/video/mxc/mxc_edid.c:376:					DPRINTK("VSD support ai %d\n", cfg->vsd_support_ai);
drivers/video/mxc/mxc_edid.c:377:					DPRINTK("VSD support deep color 48bit %d\n", cfg->vsd_dc_48bit);
drivers/video/mxc/mxc_edid.c:378:					DPRINTK("VSD support deep color 36bit %d\n", cfg->vsd_dc_36bit);
drivers/video/mxc/mxc_edid.c:379:					DPRINTK("VSD support deep color 30bit %d\n", cfg->vsd_dc_30bit);
drivers/video/mxc/mxc_edid.c:380:					DPRINTK("VSD support deep color y444 %d\n", cfg->vsd_dc_y444);
drivers/video/mxc/mxc_edid.c:381:					DPRINTK("VSD support dvi dual %d\n", cfg->vsd_dvi_dual);
drivers/video/mxc/mxc_edid.c:384:						cfg->vsd_max_tmdsclk_rate = edid[index+7] * 5;
drivers/video/mxc/mxc_edid.c:385:					DPRINTK("VSD MAX TMDS CLOCK RATE %d\n", cfg->vsd_max_tmdsclk_rate);
drivers/video/mxc/mxc_edid.c:391:						cfg->vsd_cnc3 = (edid[index+8] & 0x8) >> 3;
drivers/video/mxc/mxc_edid.c:392:						cfg->vsd_cnc2 = (edid[index+8] & 0x4) >> 2;
drivers/video/mxc/mxc_edid.c:393:						cfg->vsd_cnc1 = (edid[index+8] & 0x2) >> 1;
drivers/video/mxc/mxc_edid.c:394:						cfg->vsd_cnc0 = edid[index+8] & 0x1;
drivers/video/mxc/mxc_edid.c:396:						DPRINTK("VSD cnc0 %d\n", cfg->vsd_cnc0);
drivers/video/mxc/mxc_edid.c:397:						DPRINTK("VSD cnc1 %d\n", cfg->vsd_cnc1);
drivers/video/mxc/mxc_edid.c:398:						DPRINTK("VSD cnc2 %d\n", cfg->vsd_cnc2);
drivers/video/mxc/mxc_edid.c:399:						DPRINTK("VSD cnc3 %d\n", cfg->vsd_cnc3);
drivers/video/mxc/mxc_edid.c:413:						cfg->vsd_video_latency = edid[index++];
drivers/video/mxc/mxc_edid.c:414:						cfg->vsd_audio_latency = edid[index++];
drivers/video/mxc/mxc_edid.c:417:							cfg->vsd_I_video_latency = edid[index++];
drivers/video/mxc/mxc_edid.c:418:							cfg->vsd_I_audio_latency = edid[index++];
drivers/video/mxc/mxc_edid.c:420:							cfg->vsd_I_video_latency = cfg->vsd_video_latency;
drivers/video/mxc/mxc_edid.c:421:							cfg->vsd_I_audio_latency = cfg->vsd_audio_latency;
drivers/video/mxc/mxc_edid.c:424:						DPRINTK("VSD latency video_latency  %d\n", cfg->vsd_video_latency);
drivers/video/mxc/mxc_edid.c:425:						DPRINTK("VSD latency audio_latency  %d\n", cfg->vsd_audio_latency);
drivers/video/mxc/mxc_edid.c:426:						DPRINTK("VSD latency I_video_latency  %d\n", cfg->vsd_I_video_latency);
drivers/video/mxc/mxc_edid.c:427:						DPRINTK("VSD latency I_audio_latency  %d\n", cfg->vsd_I_audio_latency);
drivers/video/mxc/mxc_edid.c:445:								cfg->hdmi_vic[i] = edid[index++];
drivers/video/mxc/mxc_edid.c:446:								DPRINTK("HDMI_vic=%d\n", cfg->hdmi_vic[i]);
drivers/video/mxc/mxc_edid.c:453:									cfg->hdmi_3d_struct_all = (edid[index] << 8) | edid[index+1];
drivers/video/mxc/mxc_edid.c:456:									cfg->hdmi_3d_struct_all = (edid[index] << 8) | edid[index+1];
drivers/video/mxc/mxc_edid.c:457:									cfg->hdmi_3d_mask_all = (edid[index+2] << 8) | edid[index+3];
drivers/video/mxc/mxc_edid.c:463:							DPRINTK("HDMI 3d struct all =0x%x\n", cfg->hdmi_3d_struct_all);
drivers/video/mxc/mxc_edid.c:464:							DPRINTK("HDMI 3d mask all =0x%x\n", cfg->hdmi_3d_mask_all);
drivers/video/mxc/mxc_edid.c:467:							if ((hdmi_3d_len - index_inc) > 0) {
drivers/video/mxc/mxc_edid.c:470:								while ((hdmi_3d_len - index_inc) > 0) {
drivers/video/mxc/mxc_edid.c:472:									cfg->hdmi_3d_format[i].vic_order_2d = edid[index+index_inc] >> 4;
drivers/video/mxc/mxc_edid.c:473:									cfg->hdmi_3d_format[i].struct_3d = edid[index+index_inc] & 0x0f;
drivers/video/mxc/mxc_edid.c:476:									if (cfg->hdmi_3d_format[i].struct_3d ==  8) {
drivers/video/mxc/mxc_edid.c:477:										cfg->hdmi_3d_format[i].detail_3d = edid[index+index_inc] >> 4;
drivers/video/mxc/mxc_edid.c:479:									} else if (cfg->hdmi_3d_format[i].struct_3d > 8) {
drivers/video/mxc/mxc_edid.c:480:										cfg->hdmi_3d_format[i].detail_3d = 0;
drivers/video/mxc/mxc_edid.c:485:											cfg->hdmi_3d_format[i].vic_order_2d,
drivers/video/mxc/mxc_edid.c:486:											cfg->hdmi_3d_format[i].struct_3d,
drivers/video/mxc/mxc_edid.c:487:											cfg->hdmi_3d_format[i].detail_3d);
drivers/video/mxc/mxc_edid.c:504:					cfg->max_channels = 0;
drivers/video/mxc/mxc_edid.c:505:					cfg->sample_rates = 0;
drivers/video/mxc/mxc_edid.c:506:					cfg->sample_sizes = 0;
drivers/video/mxc/mxc_edid.c:525:							if (max_ch > cfg->max_channels)
drivers/video/mxc/mxc_edid.c:526:								cfg->max_channels = max_ch;
drivers/video/mxc/mxc_edid.c:528:							cfg->sample_rates |= byte2;
drivers/video/mxc/mxc_edid.c:529:							cfg->sample_sizes |= byte3 & 0x7;
drivers/video/mxc/mxc_edid.c:540:						cfg->speaker_alloc = edid[index + 1];
drivers/video/mxc/mxc_edid.c:543:						DPRINTK("Speaker Alloc           : %02x\n", cfg->speaker_alloc);
drivers/video/mxc/mxc_edid.c:563:	while (index < (EDID_LENGTH - DETAILED_TIMING_DESCRIPTION_SIZE)) {
drivers/video/mxc/mxc_edid.c:577:	m = kmalloc((num + specs->modedb_len) *
drivers/video/mxc/mxc_edid.c:582:	if (specs->modedb_len) {
drivers/video/mxc/mxc_edid.c:583:		memmove(m, specs->modedb,
drivers/video/mxc/mxc_edid.c:584:			specs->modedb_len * sizeof(struct fb_videomode));
drivers/video/mxc/mxc_edid.c:585:		kfree(specs->modedb);
drivers/video/mxc/mxc_edid.c:587:	memmove(m+specs->modedb_len, mode,
drivers/video/mxc/mxc_edid.c:591:	specs->modedb_len += num;
drivers/video/mxc/mxc_edid.c:592:	specs->modedb = m;
drivers/video/mxc/mxc_edid.c:620:		return -EIO;
drivers/video/mxc/mxc_edid.c:624:		return -ENOENT;
drivers/video/mxc/mxc_edid.c:635:			return -EIO;
drivers/video/mxc/mxc_edid.c:669:		return -EIO;
drivers/video/mxc/mxc_edid.c:679:			return -EIO;
drivers/video/mxc/mxc_edid.c:708:	bool use_aspect = (mode->vmode & FB_VMODE_ASPECT_MASK);
drivers/video/mxc/mxc_edid.c:728:		return -EINVAL;
drivers/video/mxc/mxc_edid.c:738:	memset(&fbi->monspecs, 0, sizeof(fbi->monspecs));
drivers/video/mxc/mxc_edid.c:739:	fb_edid_to_monspecs(edid, &fbi->monspecs);
drivers/video/mxc/mxc_edid.c:747:				edid + EDID_LENGTH*2, extblknum - 1);
drivers/video/mxc/mxc_edid.c:755:					cfg, &fbi->monspecs);
drivers/video/mxc/mxc_dispdrv.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxc_dispdrv.c:19: * Move all dev_probe() things into mxc_dispdrv_driver->init(), init() function should init
drivers/video/mxc/mxc_dispdrv.c:21: * Move all dev_remove() things into mxc_dispdrv_driver->deinit();
drivers/video/mxc/mxc_dispdrv.c:28: * about fbi info and ipuv3-hw (ipu_id and disp_id).
drivers/video/mxc/mxc_dispdrv.c:62:		return ERR_PTR(-ENOMEM);
drivers/video/mxc/mxc_dispdrv.c:65:	new->drv = drv;
drivers/video/mxc/mxc_dispdrv.c:66:	list_add_tail(&new->list, &dispdrv_list);
drivers/video/mxc/mxc_dispdrv.c:80:		list_del(&entry->list);
drivers/video/mxc/mxc_dispdrv.c:85:		return -EINVAL;
drivers/video/mxc/mxc_dispdrv.c:97:		if (!strcmp(entry->drv->name, name) && (entry->drv->init)) {
drivers/video/mxc/mxc_dispdrv.c:98:			ret = entry->drv->init((struct mxc_dispdrv_handle *)
drivers/video/mxc/mxc_dispdrv.c:101:				entry->active = true;
drivers/video/mxc/mxc_dispdrv.c:109:	return found ? (struct mxc_dispdrv_handle *)entry:ERR_PTR(-ENODEV);
drivers/video/mxc/mxc_dispdrv.c:118:	if (entry && entry->active && entry->drv->deinit) {
drivers/video/mxc/mxc_dispdrv.c:119:		entry->drv->deinit(handle);
drivers/video/mxc/mxc_dispdrv.c:120:		entry->active = false;
drivers/video/mxc/mxc_dispdrv.c:132:		entry->priv = data;
drivers/video/mxc/mxc_dispdrv.c:135:		return -EINVAL;
drivers/video/mxc/mxc_dispdrv.c:144:		return entry->priv;
drivers/video/mxc/mxc_dispdrv.c:146:		return ERR_PTR(-EINVAL);
Binary file drivers/video/mxc/built-in.o matches
drivers/video/mxc/mipi_dsi.h:2: * Copyright (C) 2011-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mipi_dsi.h:16: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/.mxc_dispdrv.o.cmd:1:cmd_drivers/video/mxc/mxc_dispdrv.o := arm-reach-linux-gnueabi-gcc -Wp,-MD,drivers/video/mxc/.mxc_dispdrv.o.d  -nostdinc -isystem /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include -I/home/reach/projects/reach-imx-linux/arch/arm/include -Iarch/arm/include/generated -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-mx6/include -Iarch/arm/plat-mxc/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -Os -marm -fno-dwarf2-cfi-asm -fno-omit-frame-pointer -mapcs -mno-sched-prolog -mabi=aapcs-linux -mno-thumb-interwork -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=4096 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -DCC_HAVE_ASM_GOTO    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(mxc_dispdrv)"  -D"KBUILD_MODNAME=KBUILD_STR(mxc_dispdrv)" -c -o drivers/video/mxc/.tmp_mxc_dispdrv.o drivers/video/mxc/mxc_dispdrv.c
drivers/video/mxc/.mxc_dispdrv.o.cmd:16:  /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include/stdarg.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:24:  include/linux/compiler-gcc.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:27:  include/linux/compiler-gcc4.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:28:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/linkage.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:35:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/types.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:36:  include/asm-generic/int-ll64.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:37:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitsperlong.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:38:  include/asm-generic/bitsperlong.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:40:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/posix_types.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:42:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitops.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:44:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/system.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:60:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irqflags.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:61:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ptrace.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:64:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hwcap.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:65:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/outercache.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:68:  include/asm-generic/cmpxchg-local.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:69:  include/asm-generic/bitops/non-atomic.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:70:  include/asm-generic/bitops/fls64.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:71:  include/asm-generic/bitops/sched.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:72:  include/asm-generic/bitops/hweight.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:73:  include/asm-generic/bitops/arch_hweight.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:74:  include/asm-generic/bitops/const_hweight.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:75:  include/asm-generic/bitops/lock.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:76:  include/asm-generic/bitops/le.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:77:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/byteorder.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:80:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/swab.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:92:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bug.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:95:  include/asm-generic/bug.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:98:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/div64.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:116:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/stat.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:121:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cache.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:135:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/thread_info.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:137:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fpstate.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:140:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/domain.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:146:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock_types.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:152:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:154:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/processor.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:158:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hw_breakpoint.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:190:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/atomic.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:192:  include/asm-generic/atomic-long.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:221:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/current.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:231:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/string.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:232:  include/linux/pageblock-flags.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:236:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/page.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:244:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/glue.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:245:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/memory.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:252:  arch/arm/plat-mxc/include/mach/memory.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:267:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sizes.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:268:  include/asm-generic/sizes.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:269:  include/asm-generic/memory_model.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:271:  include/asm-generic/getorder.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:277:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/errno.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:278:  include/asm-generic/errno.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:279:  include/asm-generic/errno-base.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:285:  include/linux/rwsem-spinlock.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:299:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/smp.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:305:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/percpu.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:306:  include/asm-generic/percpu.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:307:  include/linux/percpu-defs.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:309:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/topology.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:310:  include/asm-generic/topology.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:325:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/param.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:327:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/timex.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:328:  arch/arm/plat-mxc/include/mach/timex.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:347:  include/linux/elf-em.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:348:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/elf.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:349:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/user.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:361:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/module.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:400:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/device.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:454:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/auxvec.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:456:  include/linux/page-debug-flags.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:459:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/mmu.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:461:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cputime.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:462:  include/asm-generic/cputime.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:465:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ipcbuf.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:466:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sembuf.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:468:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/signal.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:469:  include/asm-generic/signal-defs.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:470:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sigcontext.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:471:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/siginfo.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:472:  include/asm-generic/siginfo.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:484:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/resource.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:485:  include/asm-generic/resource.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:527:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hardirq.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:529:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irq.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:530:  arch/arm/plat-mxc/include/mach/irqs.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:553:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctl.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:554:  include/asm-generic/ioctl.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:563:  include/linux/radix-tree.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:577:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fcntl.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:578:  include/asm-generic/fcntl.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:581:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termios.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:582:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termbits.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:583:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctls.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:584:  include/asm-generic/ioctls.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:597:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/kgdb.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:600:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/io.h \
drivers/video/mxc/.mxc_dispdrv.o.cmd:601:  arch/arm/plat-mxc/include/mach/io.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:1:cmd_drivers/video/mxc/mxc_lcdif.o := arm-reach-linux-gnueabi-gcc -Wp,-MD,drivers/video/mxc/.mxc_lcdif.o.d  -nostdinc -isystem /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include -I/home/reach/projects/reach-imx-linux/arch/arm/include -Iarch/arm/include/generated -Iinclude  -include include/generated/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-mx6/include -Iarch/arm/plat-mxc/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -Os -marm -fno-dwarf2-cfi-asm -fno-omit-frame-pointer -mapcs -mno-sched-prolog -mabi=aapcs-linux -mno-thumb-interwork -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=4096 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -DCC_HAVE_ASM_GOTO    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(mxc_lcdif)"  -D"KBUILD_MODNAME=KBUILD_STR(mxc_lcdif)" -c -o drivers/video/mxc/.tmp_mxc_lcdif.o drivers/video/mxc/mxc_lcdif.c
drivers/video/mxc/.mxc_lcdif.o.cmd:16:  /home/reach/builds/g2-devkit/build/tmp/sysroots/x86_64-linux/usr/lib/armv7a-vfp-neon-reach-linux-gnueabi/gcc/arm-reach-linux-gnueabi/4.8.1/include/stdarg.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:24:  include/linux/compiler-gcc.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:27:  include/linux/compiler-gcc4.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:28:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/linkage.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:35:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/types.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:36:  include/asm-generic/int-ll64.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:37:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitsperlong.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:38:  include/asm-generic/bitsperlong.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:40:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/posix_types.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:42:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bitops.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:44:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/system.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:60:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irqflags.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:61:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ptrace.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:64:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hwcap.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:65:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/outercache.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:68:  include/asm-generic/cmpxchg-local.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:69:  include/asm-generic/bitops/non-atomic.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:70:  include/asm-generic/bitops/fls64.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:71:  include/asm-generic/bitops/sched.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:72:  include/asm-generic/bitops/hweight.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:73:  include/asm-generic/bitops/arch_hweight.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:74:  include/asm-generic/bitops/const_hweight.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:75:  include/asm-generic/bitops/lock.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:76:  include/asm-generic/bitops/le.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:77:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/byteorder.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:80:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/swab.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:92:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/bug.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:95:  include/asm-generic/bug.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:98:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/div64.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:116:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/stat.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:121:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cache.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:135:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/thread_info.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:137:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fpstate.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:140:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/domain.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:146:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock_types.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:152:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/spinlock.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:154:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/processor.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:158:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hw_breakpoint.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:190:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/atomic.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:192:  include/asm-generic/atomic-long.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:221:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/current.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:231:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/string.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:232:  include/linux/pageblock-flags.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:236:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/page.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:244:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/glue.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:245:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/memory.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:252:  arch/arm/plat-mxc/include/mach/memory.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:267:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sizes.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:268:  include/asm-generic/sizes.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:269:  include/asm-generic/memory_model.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:271:  include/asm-generic/getorder.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:277:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/errno.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:278:  include/asm-generic/errno.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:279:  include/asm-generic/errno-base.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:285:  include/linux/rwsem-spinlock.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:299:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/smp.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:305:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/percpu.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:306:  include/asm-generic/percpu.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:307:  include/linux/percpu-defs.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:309:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/topology.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:310:  include/asm-generic/topology.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:325:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/param.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:327:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/timex.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:328:  arch/arm/plat-mxc/include/mach/timex.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:347:  include/linux/elf-em.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:348:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/elf.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:349:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/user.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:361:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/module.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:378:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/device.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:445:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/auxvec.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:447:  include/linux/page-debug-flags.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:450:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/mmu.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:452:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/cputime.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:453:  include/asm-generic/cputime.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:456:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ipcbuf.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:457:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sembuf.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:459:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/signal.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:460:  include/asm-generic/signal-defs.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:461:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/sigcontext.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:462:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/siginfo.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:463:  include/asm-generic/siginfo.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:475:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/resource.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:476:  include/asm-generic/resource.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:518:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/hardirq.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:520:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/irq.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:521:  arch/arm/plat-mxc/include/mach/irqs.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:544:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctl.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:545:  include/asm-generic/ioctl.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:554:  include/linux/radix-tree.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:568:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/fcntl.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:569:  include/asm-generic/fcntl.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:573:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termios.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:574:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/termbits.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:575:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/ioctls.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:576:  include/asm-generic/ioctls.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:586:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/kgdb.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:600:  /home/reach/projects/reach-imx-linux/arch/arm/include/asm/io.h \
drivers/video/mxc/.mxc_lcdif.o.cmd:601:  arch/arm/plat-mxc/include/mach/io.h \
Binary file drivers/video/mxc/mxc_lcdif.o matches
Binary file drivers/video/mxc/mxc_dispdrv.o matches
drivers/video/mxc/mxc_spdc_fb.c:16: * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
drivers/video/mxc/mxc_spdc_fb.c:113:	*val = panel_set->yoe_pol |
drivers/video/mxc/mxc_spdc_fb.c:114:		(panel_set->dual_gate << 1) |
drivers/video/mxc/mxc_spdc_fb.c:115:		(panel_set->ud << 7) |
drivers/video/mxc/mxc_spdc_fb.c:116:		(panel_set->rl << 8) |
drivers/video/mxc/mxc_spdc_fb.c:117:		(panel_set->data_filter_n  << 9) |
drivers/video/mxc/mxc_spdc_fb.c:118:		(panel_set->power_ready  << 10) |
drivers/video/mxc/mxc_spdc_fb.c:119:		(panel_set->rgbw_mode_enable  << 11) |
drivers/video/mxc/mxc_spdc_fb.c:120:		(panel_set->hburst_len_en << 13) |
drivers/video/mxc/mxc_spdc_fb.c:121:		((panel_set->resolution & 0x1F) << 2);
drivers/video/mxc/mxc_spdc_fb.c:128:	status = __raw_readl(fb_data->hwp + SPDC_INT_ENABLE);
drivers/video/mxc/mxc_spdc_fb.c:130:	__raw_writel(status, fb_data->hwp + SPDC_INT_ENABLE);
drivers/video/mxc/mxc_spdc_fb.c:135:	u32 val =  __raw_readl(fb_data->hwp + SPDC_INT_STA_CLR);
drivers/video/mxc/mxc_spdc_fb.c:143:	u32 status = __raw_readl(fb_data->hwp + SPDC_INT_STA_CLR);
drivers/video/mxc/mxc_spdc_fb.c:152:	__raw_writel(status, fb_data->hwp + SPDC_INT_STA_CLR);
drivers/video/mxc/mxc_spdc_fb.c:157:	u32 addr = fb_data->fresh_param.buf_addr.next_buf_phys_addr;
drivers/video/mxc/mxc_spdc_fb.c:158:	__raw_writel(addr, fb_data->hwp + SPDC_NEXT_BUF);
drivers/video/mxc/mxc_spdc_fb.c:159:	dev_dbg(fb_data->dev, "add: 0x%x\n", addr);
drivers/video/mxc/mxc_spdc_fb.c:164:	u32 addr = fb_data->fresh_param.buf_addr.cur_buf_phys_addr;
drivers/video/mxc/mxc_spdc_fb.c:165:	__raw_writel(addr, fb_data->hwp + SPDC_CURRENT_BUF);
drivers/video/mxc/mxc_spdc_fb.c:170:	u32 addr = fb_data->fresh_param.buf_addr.pre_buf_phys_addr;
drivers/video/mxc/mxc_spdc_fb.c:171:	__raw_writel(addr, fb_data->hwp + SPDC_PRE_BUF);
drivers/video/mxc/mxc_spdc_fb.c:176:	u32 addr = fb_data->fresh_param.buf_addr.frm_cnt_buf_phys_addr;
drivers/video/mxc/mxc_spdc_fb.c:177:	__raw_writel(addr, fb_data->hwp + SPDC_CNT_BUF);
drivers/video/mxc/mxc_spdc_fb.c:182:	u32 addr = fb_data->fresh_param.buf_addr.lut_buf_phys_addr;
drivers/video/mxc/mxc_spdc_fb.c:183:	__raw_writel(addr, fb_data->hwp + SPDC_LUT_BUF);
drivers/video/mxc/mxc_spdc_fb.c:188:	u32 x = fb_data->fresh_param.update_region.left;
drivers/video/mxc/mxc_spdc_fb.c:189:	u32 y = fb_data->fresh_param.update_region.top;
drivers/video/mxc/mxc_spdc_fb.c:196:	dev_dbg(fb_data->dev, "x:%d, y:%d\n", x, y);
drivers/video/mxc/mxc_spdc_fb.c:199:	__raw_writel(x, fb_data->hwp + SPDC_UPDATA_X_Y);
drivers/video/mxc/mxc_spdc_fb.c:204:	u32 w = fb_data->fresh_param.update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:205:	u32 h = fb_data->fresh_param.update_region.height;
drivers/video/mxc/mxc_spdc_fb.c:212:	dev_dbg(fb_data->dev, "w:%d, h:%d\n", w, h);
drivers/video/mxc/mxc_spdc_fb.c:215:	__raw_writel(w, fb_data->hwp + SPDC_UPDATE_W_H);
drivers/video/mxc/mxc_spdc_fb.c:220:	s8 temper = (s8)(fb_data->fresh_param.temper & 0xFF) << 1;
drivers/video/mxc/mxc_spdc_fb.c:222:	if (temper > -110 && temper < 200)
drivers/video/mxc/mxc_spdc_fb.c:223:		__raw_writel(temper, fb_data->hwp + SPDC_TEMP_INFO);
drivers/video/mxc/mxc_spdc_fb.c:225:		__raw_writel(SPDC_DEFAULT_TEMP, fb_data->hwp + SPDC_TEMP_INFO);
drivers/video/mxc/mxc_spdc_fb.c:231:	struct partial_refresh_param *fresh_param = &fb_data->fresh_param;
drivers/video/mxc/mxc_spdc_fb.c:233:	if ((fresh_param->wave_mode & SPDC_WAV_MODE_MASK) && fresh_param->flash)
drivers/video/mxc/mxc_spdc_fb.c:238:	val |= fresh_param->wave_mode << 1;
drivers/video/mxc/mxc_spdc_fb.c:240:	dev_dbg(fb_data->dev, "wave:%d\n", fresh_param->wave_mode);
drivers/video/mxc/mxc_spdc_fb.c:241:	__raw_writel(val, fb_data->hwp + SPDC_DISP_TRIGGER);
drivers/video/mxc/mxc_spdc_fb.c:248:	status = __raw_readl(fb_data->hwp + SPDC_STATUS);
drivers/video/mxc/mxc_spdc_fb.c:258:		fb_data->hwp + SPDC_SW_GATE_CLK);
drivers/video/mxc/mxc_spdc_fb.c:261:		fb_data->hwp + SPDC_SW_GATE_CLK);
drivers/video/mxc/mxc_spdc_fb.c:269:	get_panel_init_set(&fb_data->panel_set, &init_val);
drivers/video/mxc/mxc_spdc_fb.c:270:	dev_dbg(fb_data->dev, "panel init setting:%x\n", init_val);
drivers/video/mxc/mxc_spdc_fb.c:272:	__raw_writel(init_val, fb_data->hwp + SPDC_PANEL_INIT_SET);
drivers/video/mxc/mxc_spdc_fb.c:275:	ret = wait_for_completion_timeout(&fb_data->init_finish,
drivers/video/mxc/mxc_spdc_fb.c:278:		dev_err(fb_data->dev, "Timed out for init setting!\n");
drivers/video/mxc/mxc_spdc_fb.c:285:	fb_data->panel_set.power_ready = POWER_READY_ON;
drivers/video/mxc/mxc_spdc_fb.c:290:	fb_data->panel_set.power_ready = POWER_READY_OFF;
drivers/video/mxc/mxc_spdc_fb.c:295:	mutex_lock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:298:	* request is pre-empting this powerdown request.
drivers/video/mxc/mxc_spdc_fb.c:300:	if (!fb_data->powering_down
drivers/video/mxc/mxc_spdc_fb.c:301:		|| (fb_data->power_state == POWER_STATE_OFF)) {
drivers/video/mxc/mxc_spdc_fb.c:302:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:306:	dev_dbg(fb_data->dev, "spdc Powerdown\n");
drivers/video/mxc/mxc_spdc_fb.c:309:	regulator_disable(fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:310:	regulator_disable(fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:314:	clk_disable(fb_data->spdc_clk_pix);
drivers/video/mxc/mxc_spdc_fb.c:315:	clk_disable(fb_data->spdc_clk_axi);
drivers/video/mxc/mxc_spdc_fb.c:318:	if (fb_data->pdata->disable_pins)
drivers/video/mxc/mxc_spdc_fb.c:319:		fb_data->pdata->disable_pins();
drivers/video/mxc/mxc_spdc_fb.c:322:	regulator_disable(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_spdc_fb.c:324:	fb_data->power_state = POWER_STATE_OFF;
drivers/video/mxc/mxc_spdc_fb.c:325:	fb_data->powering_down = false;
drivers/video/mxc/mxc_spdc_fb.c:328:	if (fb_data->wait_for_powerdown) {
drivers/video/mxc/mxc_spdc_fb.c:329:		fb_data->wait_for_powerdown = false;
drivers/video/mxc/mxc_spdc_fb.c:330:		complete(&fb_data->powerdown_compl);
drivers/video/mxc/mxc_spdc_fb.c:333:	mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:339:	mutex_lock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:345:	if (fb_data->powering_down)
drivers/video/mxc/mxc_spdc_fb.c:346:		fb_data->powering_down = false;
drivers/video/mxc/mxc_spdc_fb.c:348:	if (fb_data->power_state == POWER_STATE_ON) {
drivers/video/mxc/mxc_spdc_fb.c:349:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:353:	dev_dbg(fb_data->dev, "spdc Powerup\n");
drivers/video/mxc/mxc_spdc_fb.c:356:	ret = regulator_enable(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_spdc_fb.c:358:		dev_err(fb_data->dev, "Unable to enable V3P3 regulator."
drivers/video/mxc/mxc_spdc_fb.c:360:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:367:	if (fb_data->pdata->enable_pins)
drivers/video/mxc/mxc_spdc_fb.c:368:		fb_data->pdata->enable_pins();
drivers/video/mxc/mxc_spdc_fb.c:371:	clk_enable(fb_data->spdc_clk_axi);
drivers/video/mxc/mxc_spdc_fb.c:372:	clk_enable(fb_data->spdc_clk_pix);
drivers/video/mxc/mxc_spdc_fb.c:378:	ret = regulator_enable(fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:380:		dev_err(fb_data->dev, "Unable to enable DISPLAY regulator."
drivers/video/mxc/mxc_spdc_fb.c:382:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:385:	ret = regulator_enable(fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:387:		dev_err(fb_data->dev, "Unable to enable VCOM regulator."
drivers/video/mxc/mxc_spdc_fb.c:389:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:393:	fb_data->power_state = POWER_STATE_ON;
drivers/video/mxc/mxc_spdc_fb.c:396:	mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:422:	struct mxc_spdc_version *spdc_ver = &fb_data->spdc_ver;
drivers/video/mxc/mxc_spdc_fb.c:425:	disp_id = __raw_readl(fb_data->hwp + SPDC_DISP_VER);
drivers/video/mxc/mxc_spdc_fb.c:426:	tcon_id = __raw_readl(fb_data->hwp + SPDC_TCON_VER);
drivers/video/mxc/mxc_spdc_fb.c:428:	spdc_ver->disp_ver.product_id = disp_id & 0xFFFF;
drivers/video/mxc/mxc_spdc_fb.c:429:	spdc_ver->disp_ver.lut_ver = (disp_id >> 16) & 0xFF;
drivers/video/mxc/mxc_spdc_fb.c:430:	spdc_ver->disp_ver.epd_type = (disp_id >> 24) & 0xFF;
drivers/video/mxc/mxc_spdc_fb.c:431:	spdc_ver->tcon_ver = tcon_id & 0xFF;
drivers/video/mxc/mxc_spdc_fb.c:433:	dev_info(fb_data->dev, "EPD type ID:%x, Tcon ID:%x\n",
drivers/video/mxc/mxc_spdc_fb.c:434:		spdc_ver->disp_ver.product_id, spdc_ver->tcon_ver);
drivers/video/mxc/mxc_spdc_fb.c:441:	concur_mode = fb_data->fresh_param.concur & 0xFF;
drivers/video/mxc/mxc_spdc_fb.c:444:	__raw_writel(concur_mode, fb_data->hwp + SPDC_LUT_PARA_UPDATE);
drivers/video/mxc/mxc_spdc_fb.c:450:	if (fb_data->upd_preprocess_num >= SPDC_MAX_NUM_PREPROCESS)
drivers/video/mxc/mxc_spdc_fb.c:458:	fb_data->updates_active = true;
drivers/video/mxc/mxc_spdc_fb.c:469:	struct fb_var_screeninfo *screeninfo = &fb_data->spdc_fb_var;
drivers/video/mxc/mxc_spdc_fb.c:470:	struct spdc_buffer_addr *buf_addr = &fb_data->fresh_param.buf_addr;
drivers/video/mxc/mxc_spdc_fb.c:472:		fb_data->pdata->spdc_mode->init_set;
drivers/video/mxc/mxc_spdc_fb.c:474:	int ret = -EFAULT;
drivers/video/mxc/mxc_spdc_fb.c:483:	if (fb_data->fresh_param.concur)
drivers/video/mxc/mxc_spdc_fb.c:487:	buf_addr->next_buf_phys_addr = fb_data->phy_next_buf;
drivers/video/mxc/mxc_spdc_fb.c:488:	buf_addr->cur_buf_phys_addr = fb_data->phy_current_buf;
drivers/video/mxc/mxc_spdc_fb.c:489:	buf_addr->pre_buf_phys_addr = fb_data->phy_pre_buf;
drivers/video/mxc/mxc_spdc_fb.c:490:	buf_addr->frm_cnt_buf_phys_addr = fb_data->phy_cnt_buf;
drivers/video/mxc/mxc_spdc_fb.c:491:	buf_addr->lut_buf_phys_addr = fb_data->phy_lut_buf;
drivers/video/mxc/mxc_spdc_fb.c:494:	if ((screeninfo->rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_spdc_fb.c:495:		(screeninfo->rotate == FB_ROTATE_CCW)) {
drivers/video/mxc/mxc_spdc_fb.c:496:		xres = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:497:		yres = screeninfo->xres;
drivers/video/mxc/mxc_spdc_fb.c:499:		xres = screeninfo->xres;
drivers/video/mxc/mxc_spdc_fb.c:500:		yres = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:502:	fb_data->fresh_param.update_region.left = 0;
drivers/video/mxc/mxc_spdc_fb.c:503:	fb_data->fresh_param.update_region.top = 0;
drivers/video/mxc/mxc_spdc_fb.c:504:	fb_data->fresh_param.update_region.width = xres;
drivers/video/mxc/mxc_spdc_fb.c:505:	fb_data->fresh_param.update_region.height = yres;
drivers/video/mxc/mxc_spdc_fb.c:508:	fb_data->fresh_param.temper = SPDC_DEFAULT_TEMP;
drivers/video/mxc/mxc_spdc_fb.c:510:	fb_data->fresh_param.wave_mode = SPDC_WAV_MODE_DEFAULT;
drivers/video/mxc/mxc_spdc_fb.c:524:	ret = wait_for_completion_timeout(&fb_data->lut_down,
drivers/video/mxc/mxc_spdc_fb.c:527:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:535:	__raw_writel(0x00003906, fb_data->hwp + SPDC_LUT_PARA_UPDATE);
drivers/video/mxc/mxc_spdc_fb.c:536:	__raw_writel(0x00003300, fb_data->hwp + SPDC_LUT_PARA_UPDATE);
drivers/video/mxc/mxc_spdc_fb.c:539:	fb_data->panel_set.yoe_pol = init_set->yoe_pol;
drivers/video/mxc/mxc_spdc_fb.c:540:	fb_data->panel_set.dual_gate = init_set->dual_gate;
drivers/video/mxc/mxc_spdc_fb.c:541:	fb_data->panel_set.ud = init_set->ud;
drivers/video/mxc/mxc_spdc_fb.c:542:	fb_data->panel_set.rl = init_set->rl;
drivers/video/mxc/mxc_spdc_fb.c:543:	fb_data->panel_set.data_filter_n = init_set->data_filter_n;
drivers/video/mxc/mxc_spdc_fb.c:544:	fb_data->panel_set.rgbw_mode_enable = init_set->rgbw_mode_enable;
drivers/video/mxc/mxc_spdc_fb.c:545:	fb_data->panel_set.hburst_len_en = init_set->hburst_len_en;
drivers/video/mxc/mxc_spdc_fb.c:555:	struct partial_refresh_param *fresh_param = &fb_data->fresh_param;
drivers/video/mxc/mxc_spdc_fb.c:559:	fb_data->updates_active = true;
drivers/video/mxc/mxc_spdc_fb.c:561:	fresh_addr = (u8 *)(fb_data->virt_start) +
drivers/video/mxc/mxc_spdc_fb.c:562:		(fresh_param->update_region.top * fresh_param->stride) +
drivers/video/mxc/mxc_spdc_fb.c:563:		((fresh_param->update_region.left * fb_data->default_bpp) >> 3);
drivers/video/mxc/mxc_spdc_fb.c:564:	fresh_size = (u32)((fresh_param->update_region.width *
drivers/video/mxc/mxc_spdc_fb.c:565:		fresh_param->update_region.height * fb_data->default_bpp) >> 3);
drivers/video/mxc/mxc_spdc_fb.c:570:				fresh_param->update_region.width);
drivers/video/mxc/mxc_spdc_fb.c:571:			fresh_size -= fresh_param->update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:572:			fresh_addr += fresh_param->update_region.top *
drivers/video/mxc/mxc_spdc_fb.c:573:					fresh_param->stride;
drivers/video/mxc/mxc_spdc_fb.c:574:			pattern +=  fresh_param->update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:579:	fb_data->fresh_param.buf_addr.next_buf_phys_addr =
drivers/video/mxc/mxc_spdc_fb.c:580:		fb_data->info.fix.smem_start + fb_data->fb_offset;
drivers/video/mxc/mxc_spdc_fb.c:581:	fb_data->fresh_param.wave_mode = fb_data->wv_modes.mode_init;
drivers/video/mxc/mxc_spdc_fb.c:584:	ret = wait_for_completion_timeout(&fb_data->update_finish,
drivers/video/mxc/mxc_spdc_fb.c:587:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:589:		return -ETIMEDOUT;
drivers/video/mxc/mxc_spdc_fb.c:597:	fb_data->auto_mode = AUTO_UPDATE_MODE_REGION_MODE;
drivers/video/mxc/mxc_spdc_fb.c:598:	fb_data->fresh_param.wave_mode = SPDC_WAV_MODE_0;
drivers/video/mxc/mxc_spdc_fb.c:599:	fb_data->operation_mode = SPDC_NO_OPERATION;
drivers/video/mxc/mxc_spdc_fb.c:600:	fb_data->is_deep_fresh = false;
drivers/video/mxc/mxc_spdc_fb.c:603:	fb_data->fresh_param.concur = 0;
drivers/video/mxc/mxc_spdc_fb.c:604:	fb_data->upd_preprocess_num = 0;
drivers/video/mxc/mxc_spdc_fb.c:605:	fb_data->submit_upd_sta = 0;
drivers/video/mxc/mxc_spdc_fb.c:607:	fb_data->fresh_param.temper = SPDC_DEFAULT_TEMP;
drivers/video/mxc/mxc_spdc_fb.c:613: * mxc_spdc_device_is_busy - check spdc device busy status.
drivers/video/mxc/mxc_spdc_fb.c:622:		status = __raw_readl(fb_data->hwp + SPDC_STATUS);
drivers/video/mxc/mxc_spdc_fb.c:628:			dev_dbg(fb_data->dev, "SPDC Interrupted\n");
drivers/video/mxc/mxc_spdc_fb.c:629:			return -EINTR;
drivers/video/mxc/mxc_spdc_fb.c:634:			dev_dbg(fb_data->dev, "SPDC is busy\n");
drivers/video/mxc/mxc_spdc_fb.c:635:			 return -ETIMEDOUT;
drivers/video/mxc/mxc_spdc_fb.c:650:	list_for_each_entry(plist, &fb_data->upd_buf_free_list, list)
drivers/video/mxc/mxc_spdc_fb.c:654:	if (count == fb_data->max_num_updates)
drivers/video/mxc/mxc_spdc_fb.c:664:	struct fb_var_screeninfo *screeninfo = &fb_data->spdc_fb_var;
drivers/video/mxc/mxc_spdc_fb.c:668:	fb_data->fresh_param.buf_addr.next_buf_phys_addr =
drivers/video/mxc/mxc_spdc_fb.c:669:		fb_data->phys_start;
drivers/video/mxc/mxc_spdc_fb.c:671:	fb_data->hw_ready = true;
drivers/video/mxc/mxc_spdc_fb.c:672:	fb_data->hw_initializing = false;
drivers/video/mxc/mxc_spdc_fb.c:675:	if ((screeninfo->rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_spdc_fb.c:676:		(screeninfo->rotate == FB_ROTATE_CCW)) {
drivers/video/mxc/mxc_spdc_fb.c:677:		xres = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:678:		yres = screeninfo->xres;
drivers/video/mxc/mxc_spdc_fb.c:680:		xres = screeninfo->xres;
drivers/video/mxc/mxc_spdc_fb.c:681:		yres = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:689:	update.waveform_mode = fb_data->wv_modes.mode_init;
drivers/video/mxc/mxc_spdc_fb.c:696:	mxc_spdc_fb_send_update(&update, &fb_data->info);
drivers/video/mxc/mxc_spdc_fb.c:700:		&fb_data->info);
drivers/video/mxc/mxc_spdc_fb.c:702:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:718:		if (fb_data->fw_default_load)
drivers/video/mxc/mxc_spdc_fb.c:722:		fb_data->fw_default_load = true;
drivers/video/mxc/mxc_spdc_fb.c:725:				fb_data->fw_str, fb_data->dev, GFP_KERNEL,
drivers/video/mxc/mxc_spdc_fb.c:728:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:734:	wv_file = (u8 *)fw->data;
drivers/video/mxc/mxc_spdc_fb.c:735:	memcpy(fb_data->virt_lut_buf, wv_file, fw->size);
drivers/video/mxc/mxc_spdc_fb.c:737:	check_waveform((u32 *)wv_file, (u32 *)fb_data->virt_lut_buf,
drivers/video/mxc/mxc_spdc_fb.c:738:					fw->size / 4);
drivers/video/mxc/mxc_spdc_fb.c:742:	clk_enable(fb_data->spdc_clk_axi);
drivers/video/mxc/mxc_spdc_fb.c:744:	target_pix_clk = fb_data->cur_mode->vmode->pixclock;
drivers/video/mxc/mxc_spdc_fb.c:746:	clk_enable(fb_data->spdc_clk_pix);
drivers/video/mxc/mxc_spdc_fb.c:747:	rounded_pix_clk = clk_round_rate(fb_data->spdc_clk_pix, target_pix_clk);
drivers/video/mxc/mxc_spdc_fb.c:750:		(rounded_pix_clk <= target_pix_clk - target_pix_clk/100))) {
drivers/video/mxc/mxc_spdc_fb.c:752:		spdc_parent = clk_get_parent(fb_data->spdc_clk_pix);
drivers/video/mxc/mxc_spdc_fb.c:762:			clk_round_rate(fb_data->spdc_clk_pix, target_pix_clk);
drivers/video/mxc/mxc_spdc_fb.c:764:		(rounded_pix_clk <= target_pix_clk - target_pix_clk/100)))
drivers/video/mxc/mxc_spdc_fb.c:766:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:772:	clk_set_rate(fb_data->spdc_clk_pix, rounded_pix_clk);
drivers/video/mxc/mxc_spdc_fb.c:774:	clk_disable(fb_data->spdc_clk_axi);
drivers/video/mxc/mxc_spdc_fb.c:775:	clk_disable(fb_data->spdc_clk_pix);
drivers/video/mxc/mxc_spdc_fb.c:790:	fb_data->fw_default_load = false;
drivers/video/mxc/mxc_spdc_fb.c:795:	if (fb_data->cur_mode) {
drivers/video/mxc/mxc_spdc_fb.c:796:		memset(fb_data->fw_str, 0, sizeof(fb_data->fw_str));
drivers/video/mxc/mxc_spdc_fb.c:797:		strcat(fb_data->fw_str, "imx/spdc_");
drivers/video/mxc/mxc_spdc_fb.c:798:		strcat(fb_data->fw_str, fb_data->cur_mode->wave_timing);
drivers/video/mxc/mxc_spdc_fb.c:799:		strcat(fb_data->fw_str, ".fw");
drivers/video/mxc/mxc_spdc_fb.c:801:		strcat(fb_data->fw_str, "imx/spdc_pvi.fw");
drivers/video/mxc/mxc_spdc_fb.c:804:				fb_data->fw_str, fb_data->dev, GFP_KERNEL,
drivers/video/mxc/mxc_spdc_fb.c:807:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:818:	struct partial_refresh_param *fresh_param = &fb_data->fresh_param;
drivers/video/mxc/mxc_spdc_fb.c:820:	if (!fb_data->panel_set.power_ready)
drivers/video/mxc/mxc_spdc_fb.c:823:	if (!fresh_param->blocking) {
drivers/video/mxc/mxc_spdc_fb.c:825:			dev_err(fb_data->dev, "spdc busy!\n");
drivers/video/mxc/mxc_spdc_fb.c:826:			return (u32) -1;
drivers/video/mxc/mxc_spdc_fb.c:830:			dev_err(fb_data->dev, "Waiting for spdc idle..\n");
drivers/video/mxc/mxc_spdc_fb.c:843:	struct partial_refresh_param *fresh_param = &fb_data->fresh_param;
drivers/video/mxc/mxc_spdc_fb.c:844:	u32 operation_mode = fb_data->operation_mode;
drivers/video/mxc/mxc_spdc_fb.c:846:	if (!fb_data->panel_set.power_ready)
drivers/video/mxc/mxc_spdc_fb.c:850:		if (!fresh_param->blocking) {
drivers/video/mxc/mxc_spdc_fb.c:852:				dev_err(fb_data->dev,  "spdc busy\n");
drivers/video/mxc/mxc_spdc_fb.c:853:				return (u32) -1;
drivers/video/mxc/mxc_spdc_fb.c:857:				dev_err(fb_data->dev, "Waiting spdc idle...\n");
drivers/video/mxc/mxc_spdc_fb.c:865:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:866:	__raw_writel(operation_mode, fb_data->hwp + SPDC_OPERATE);
drivers/video/mxc/mxc_spdc_fb.c:867:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:870:		dev_dbg(fb_data->dev, "reinit hw\n");
drivers/video/mxc/mxc_spdc_fb.c:873:		fb_data->hw_ready = false;
drivers/video/mxc/mxc_spdc_fb.c:874:		fb_data->operation_mode = SPDC_NO_OPERATION;
drivers/video/mxc/mxc_spdc_fb.c:875:		ret = spdc_fb_init_hw(&fb_data->info);
drivers/video/mxc/mxc_spdc_fb.c:876:		if (ret && !fb_data->hw_ready)
drivers/video/mxc/mxc_spdc_fb.c:877:			dev_err(fb_data->dev, "Failed to init HW!\n");
drivers/video/mxc/mxc_spdc_fb.c:885:	struct partial_refresh_param *fresh_param = &fb_data->fresh_param;
drivers/video/mxc/mxc_spdc_fb.c:886:	u32 operation_mode = fb_data->operation_mode;
drivers/video/mxc/mxc_spdc_fb.c:889:	fresh_param->update_region.left = 0;
drivers/video/mxc/mxc_spdc_fb.c:890:	fresh_param->update_region.top = 0;
drivers/video/mxc/mxc_spdc_fb.c:891:	fresh_param->update_region.width = fb_data->spdc_fb_var.xres;
drivers/video/mxc/mxc_spdc_fb.c:892:	fresh_param->update_region.height = fb_data->spdc_fb_var.yres;
drivers/video/mxc/mxc_spdc_fb.c:893:	fresh_param->stride = (fb_data->spdc_fb_var.xres *
drivers/video/mxc/mxc_spdc_fb.c:894:				fb_data->spdc_fb_var.bits_per_pixel) >> 3;
drivers/video/mxc/mxc_spdc_fb.c:907:		&fb_data->pdata->spdc_mode[0];
drivers/video/mxc/mxc_spdc_fb.c:913:	if (fb_data->panel_set.rgbw_mode_enable)
drivers/video/mxc/mxc_spdc_fb.c:920:			if (spdc_mode->vmode->xres == spdc_res_map[j].res_x
drivers/video/mxc/mxc_spdc_fb.c:921:			&& spdc_mode->vmode->yres == spdc_res_map[j].res_y) {
drivers/video/mxc/mxc_spdc_fb.c:922:				fb_data->panel_set.resolution =
drivers/video/mxc/mxc_spdc_fb.c:934:		spdc_mode = &fb_data->pdata->spdc_mode[i];
drivers/video/mxc/mxc_spdc_fb.c:937:	fb_data->cur_mode = spdc_mode;
drivers/video/mxc/mxc_spdc_fb.c:942:	unsigned long start = vma->vm_start;
drivers/video/mxc/mxc_spdc_fb.c:943:	unsigned long size = vma->vm_end - vma->vm_start;
drivers/video/mxc/mxc_spdc_fb.c:944:	unsigned long offset = vma->vm_pgoff << PAGE_SHIFT;
drivers/video/mxc/mxc_spdc_fb.c:947:	if (offset + size > info->fix.smem_len)
drivers/video/mxc/mxc_spdc_fb.c:948:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:950:	pos = (unsigned long)info->fix.smem_start + offset;
drivers/video/mxc/mxc_spdc_fb.c:953:	vma->vm_page_prot = pgprot_writecombine(vma->vm_page_prot);
drivers/video/mxc/mxc_spdc_fb.c:954:	vma->vm_flags |= VM_RESERVED | VM_IO;
drivers/video/mxc/mxc_spdc_fb.c:959:					PAGE_SIZE, vma->vm_page_prot))
drivers/video/mxc/mxc_spdc_fb.c:960:			return -EAGAIN;
drivers/video/mxc/mxc_spdc_fb.c:965:			size -= PAGE_SIZE;
drivers/video/mxc/mxc_spdc_fb.c:976:	chan >>= 16 - bf->length;
drivers/video/mxc/mxc_spdc_fb.c:977:	return chan << bf->offset;
drivers/video/mxc/mxc_spdc_fb.c:987:	if (info->var.grayscale) {
drivers/video/mxc/mxc_spdc_fb.c:992:#define CNVT_TOHW(val, width) ((((val)<<(width))+0x7FFF-(val))>>16)
drivers/video/mxc/mxc_spdc_fb.c:993:	switch (info->fix.visual) {
drivers/video/mxc/mxc_spdc_fb.c:996:		red = CNVT_TOHW(red, info->var.red.length);
drivers/video/mxc/mxc_spdc_fb.c:997:		green = CNVT_TOHW(green, info->var.green.length);
drivers/video/mxc/mxc_spdc_fb.c:998:		blue = CNVT_TOHW(blue, info->var.blue.length);
drivers/video/mxc/mxc_spdc_fb.c:999:		transp = CNVT_TOHW(transp, info->var.transp.length);
drivers/video/mxc/mxc_spdc_fb.c:1011:	if (info->fix.visual == FB_VISUAL_TRUECOLOR) {
drivers/video/mxc/mxc_spdc_fb.c:1015:		((u32 *) (info->pseudo_palette))[regno] =
drivers/video/mxc/mxc_spdc_fb.c:1016:		(red << info->var.red.offset) |
drivers/video/mxc/mxc_spdc_fb.c:1017:		(green << info->var.green.offset) |
drivers/video/mxc/mxc_spdc_fb.c:1018:		(blue << info->var.blue.offset) |
drivers/video/mxc/mxc_spdc_fb.c:1019:		(transp << info->var.transp.offset);
drivers/video/mxc/mxc_spdc_fb.c:1030:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1036:	 *   3) Active updates to panel - We can key off of SPDC
drivers/video/mxc/mxc_spdc_fb.c:1039:	if (!list_empty(&fb_data->upd_pending_list) ||
drivers/video/mxc/mxc_spdc_fb.c:1041:		(fb_data->updates_active == true)) {
drivers/video/mxc/mxc_spdc_fb.c:1043:		init_completion(&fb_data->updates_done);
drivers/video/mxc/mxc_spdc_fb.c:1044:		fb_data->waiting_for_idle = true;
drivers/video/mxc/mxc_spdc_fb.c:1046:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1048:		ret = wait_for_completion_timeout(&fb_data->updates_done,
drivers/video/mxc/mxc_spdc_fb.c:1051:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:1054:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1055:		fb_data->waiting_for_idle = false;
drivers/video/mxc/mxc_spdc_fb.c:1058:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1069:	dev_dbg(fb_data->dev, "setcmap\n");
drivers/video/mxc/mxc_spdc_fb.c:1071:	if (info->fix.visual == FB_VISUAL_STATIC_PSEUDOCOLOR) {
drivers/video/mxc/mxc_spdc_fb.c:1072:		/* Only support an 8-bit, 256 entry lookup */
drivers/video/mxc/mxc_spdc_fb.c:1073:		if (cmap->len != 256)
drivers/video/mxc/mxc_spdc_fb.c:1078:		mutex_lock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1087:			fb_data->pxp_conf.proc_data.lut_map[i] =
drivers/video/mxc/mxc_spdc_fb.c:1088:					cmap->red[i] & 0xFF;
drivers/video/mxc/mxc_spdc_fb.c:1090:		fb_data->pxp_conf.proc_data.lut_map_updated = true;
drivers/video/mxc/mxc_spdc_fb.c:1092:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1094:		red = cmap->red;
drivers/video/mxc/mxc_spdc_fb.c:1095:		green   = cmap->green;
drivers/video/mxc/mxc_spdc_fb.c:1096:		blue    = cmap->blue;
drivers/video/mxc/mxc_spdc_fb.c:1097:		transp  = cmap->transp;
drivers/video/mxc/mxc_spdc_fb.c:1098:		index   = cmap->start;
drivers/video/mxc/mxc_spdc_fb.c:1100:		for (count = 0; count < cmap->len; count++) {
drivers/video/mxc/mxc_spdc_fb.c:1123:			adj_update_region->top = update_region->top;
drivers/video/mxc/mxc_spdc_fb.c:1124:			adj_update_region->left = update_region->left;
drivers/video/mxc/mxc_spdc_fb.c:1125:			adj_update_region->width = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1126:			adj_update_region->height = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1129:			adj_update_region->top = update_region->left;
drivers/video/mxc/mxc_spdc_fb.c:1130:			adj_update_region->left = yres -
drivers/video/mxc/mxc_spdc_fb.c:1131:				(update_region->top + update_region->height);
drivers/video/mxc/mxc_spdc_fb.c:1132:			adj_update_region->width = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1133:			adj_update_region->height = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1136:			adj_update_region->width = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1137:			adj_update_region->height = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1138:			adj_update_region->top = yres -
drivers/video/mxc/mxc_spdc_fb.c:1139:				(update_region->top + update_region->height);
drivers/video/mxc/mxc_spdc_fb.c:1140:			adj_update_region->left = xres -
drivers/video/mxc/mxc_spdc_fb.c:1141:				(update_region->left + update_region->width);
drivers/video/mxc/mxc_spdc_fb.c:1144:			adj_update_region->left = update_region->top;
drivers/video/mxc/mxc_spdc_fb.c:1145:			adj_update_region->top = xres -
drivers/video/mxc/mxc_spdc_fb.c:1146:				(update_region->left + update_region->width);
drivers/video/mxc/mxc_spdc_fb.c:1147:			adj_update_region->width = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1148:			adj_update_region->height = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1157:			temp = update_region->top;
drivers/video/mxc/mxc_spdc_fb.c:1158:			update_region->top = update_region->left;
drivers/video/mxc/mxc_spdc_fb.c:1159:			update_region->left = yres -
drivers/video/mxc/mxc_spdc_fb.c:1160:				(temp + update_region->height);
drivers/video/mxc/mxc_spdc_fb.c:1161:			temp = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1162:			update_region->width = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1163:			update_region->height = temp;
drivers/video/mxc/mxc_spdc_fb.c:1166:			update_region->top = yres -
drivers/video/mxc/mxc_spdc_fb.c:1167:				(update_region->top + update_region->height);
drivers/video/mxc/mxc_spdc_fb.c:1168:			update_region->left = xres -
drivers/video/mxc/mxc_spdc_fb.c:1169:				(update_region->left + update_region->width);
drivers/video/mxc/mxc_spdc_fb.c:1172:			temp = update_region->left;
drivers/video/mxc/mxc_spdc_fb.c:1173:			update_region->left = update_region->top;
drivers/video/mxc/mxc_spdc_fb.c:1174:			update_region->top = xres -
drivers/video/mxc/mxc_spdc_fb.c:1175:				(temp + update_region->width);
drivers/video/mxc/mxc_spdc_fb.c:1176:			temp = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1177:			update_region->width = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1178:			update_region->height = temp;
drivers/video/mxc/mxc_spdc_fb.c:1185:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mxc_spdc_fb.c:1186:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mxc_spdc_fb.c:1188:	fix->line_length = var->xres_virtual * var->bits_per_pixel / 8;
drivers/video/mxc/mxc_spdc_fb.c:1190:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxc_spdc_fb.c:1191:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxc_spdc_fb.c:1192:	if (var->grayscale)
drivers/video/mxc/mxc_spdc_fb.c:1193:		fix->visual = FB_VISUAL_STATIC_PSEUDOCOLOR;
drivers/video/mxc/mxc_spdc_fb.c:1195:		fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxc_spdc_fb.c:1196:		fix->xpanstep = 1;
drivers/video/mxc/mxc_spdc_fb.c:1197:	fix->ypanstep = 1;
drivers/video/mxc/mxc_spdc_fb.c:1205:	struct fb_var_screeninfo *screeninfo = &fb_data->info.var;
drivers/video/mxc/mxc_spdc_fb.c:1206:	struct imx_spdc_fb_mode *spdc_modes = fb_data->pdata->spdc_mode;
drivers/video/mxc/mxc_spdc_fb.c:1207:	struct pxp_config_data *pxp_conf = &fb_data->pxp_conf;
drivers/video/mxc/mxc_spdc_fb.c:1208:	struct pxp_proc_data *proc_data = &pxp_conf->proc_data;
drivers/video/mxc/mxc_spdc_fb.c:1218:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1223:	xoffset_old = fb_data->spdc_fb_var.xoffset;
drivers/video/mxc/mxc_spdc_fb.c:1224:	yoffset_old = fb_data->spdc_fb_var.yoffset;
drivers/video/mxc/mxc_spdc_fb.c:1225:	fb_data->spdc_fb_var = *screeninfo;
drivers/video/mxc/mxc_spdc_fb.c:1226:	fb_data->spdc_fb_var.xoffset = xoffset_old;
drivers/video/mxc/mxc_spdc_fb.c:1227:	fb_data->spdc_fb_var.yoffset = yoffset_old;
drivers/video/mxc/mxc_spdc_fb.c:1228:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1230:	mutex_lock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1236:	/* Initialize non-channel-specific PxP parameters */
drivers/video/mxc/mxc_spdc_fb.c:1237:	proc_data->drect.left = proc_data->srect.left = 0;
drivers/video/mxc/mxc_spdc_fb.c:1238:	proc_data->drect.top = proc_data->srect.top = 0;
drivers/video/mxc/mxc_spdc_fb.c:1239:	proc_data->drect.width = proc_data->srect.width = screeninfo->xres;
drivers/video/mxc/mxc_spdc_fb.c:1240:	proc_data->drect.height = proc_data->srect.height = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:1241:	proc_data->scaling = 0;
drivers/video/mxc/mxc_spdc_fb.c:1242:	proc_data->hflip = 0;
drivers/video/mxc/mxc_spdc_fb.c:1243:	proc_data->vflip = 0;
drivers/video/mxc/mxc_spdc_fb.c:1244:	proc_data->rotate = screeninfo->rotate;
drivers/video/mxc/mxc_spdc_fb.c:1245:	proc_data->bgcolor = 0;
drivers/video/mxc/mxc_spdc_fb.c:1246:	proc_data->overlay_state = 0;
drivers/video/mxc/mxc_spdc_fb.c:1247:	proc_data->lut_transform = PXP_LUT_NONE;
drivers/video/mxc/mxc_spdc_fb.c:1253:	if (screeninfo->grayscale)
drivers/video/mxc/mxc_spdc_fb.c:1254:		pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_GY04;
drivers/video/mxc/mxc_spdc_fb.c:1256:		switch (screeninfo->bits_per_pixel) {
drivers/video/mxc/mxc_spdc_fb.c:1258:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_spdc_fb.c:1261:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB24;
drivers/video/mxc/mxc_spdc_fb.c:1264:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB32;
drivers/video/mxc/mxc_spdc_fb.c:1267:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_spdc_fb.c:1271:	pxp_conf->s0_param.width = screeninfo->xres_virtual;
drivers/video/mxc/mxc_spdc_fb.c:1272:	pxp_conf->s0_param.height = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:1273:	pxp_conf->s0_param.color_key = -1;
drivers/video/mxc/mxc_spdc_fb.c:1274:	pxp_conf->s0_param.color_key_enable = false;
drivers/video/mxc/mxc_spdc_fb.c:1278:	 * Output is Y-only greyscale
drivers/video/mxc/mxc_spdc_fb.c:1281:	pxp_conf->out_param.width = screeninfo->xres;
drivers/video/mxc/mxc_spdc_fb.c:1282:	pxp_conf->out_param.height = screeninfo->yres;
drivers/video/mxc/mxc_spdc_fb.c:1283:	pxp_conf->out_param.pixel_fmt = PXP_PIX_FMT_GY04;
drivers/video/mxc/mxc_spdc_fb.c:1285:	mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1291:	if (!fb_data->hw_ready) {
drivers/video/mxc/mxc_spdc_fb.c:1301:		if ((screeninfo->rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_spdc_fb.c:1302:			(screeninfo->rotate == FB_ROTATE_CCW)) {
drivers/video/mxc/mxc_spdc_fb.c:1309:		for (i = 0; i < fb_data->pdata->num_modes; i++) {
drivers/video/mxc/mxc_spdc_fb.c:1312:			fb_data->cur_mode = &spdc_modes[i];
drivers/video/mxc/mxc_spdc_fb.c:1318:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:1327:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:1343:	if (!var->xres)
drivers/video/mxc/mxc_spdc_fb.c:1344:		var->xres = 1;
drivers/video/mxc/mxc_spdc_fb.c:1345:	if (!var->yres)
drivers/video/mxc/mxc_spdc_fb.c:1346:		var->yres = 1;
drivers/video/mxc/mxc_spdc_fb.c:1348:	if (var->xres_virtual < var->xoffset + var->xres)
drivers/video/mxc/mxc_spdc_fb.c:1349:		var->xres_virtual = var->xoffset + var->xres;
drivers/video/mxc/mxc_spdc_fb.c:1350:	if (var->yres_virtual < var->yoffset + var->yres)
drivers/video/mxc/mxc_spdc_fb.c:1351:		var->yres_virtual = var->yoffset + var->yres;
drivers/video/mxc/mxc_spdc_fb.c:1353:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mxc_spdc_fb.c:1354:		(var->bits_per_pixel != 16) && (var->bits_per_pixel != 8) &&
drivers/video/mxc/mxc_spdc_fb.c:1355:		(var->bits_per_pixel != 4))
drivers/video/mxc/mxc_spdc_fb.c:1356:		var->bits_per_pixel = SPDC_DEFAULT_BPP;
drivers/video/mxc/mxc_spdc_fb.c:1358:	switch (var->bits_per_pixel) {
drivers/video/mxc/mxc_spdc_fb.c:1360:		var->red.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1361:		var->red.length = var->bits_per_pixel;
drivers/video/mxc/mxc_spdc_fb.c:1362:		var->green = var->red;
drivers/video/mxc/mxc_spdc_fb.c:1363:		var->blue = var->red;
drivers/video/mxc/mxc_spdc_fb.c:1364:		var->transp.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1365:		var->transp.length = 0;
drivers/video/mxc/mxc_spdc_fb.c:1368:		if (var->grayscale != 0) {
drivers/video/mxc/mxc_spdc_fb.c:1369:			var->red.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1370:			var->red.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1371:			var->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1373:			var->green = var->red;
drivers/video/mxc/mxc_spdc_fb.c:1374:			var->blue = var->red;
drivers/video/mxc/mxc_spdc_fb.c:1375:			var->transp.length = 0;
drivers/video/mxc/mxc_spdc_fb.c:1376:			var->transp.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1377:			var->transp.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1379:			var->red.length = 3;
drivers/video/mxc/mxc_spdc_fb.c:1380:			var->red.offset = 5;
drivers/video/mxc/mxc_spdc_fb.c:1381:			var->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1383:			var->green.length = 3;
drivers/video/mxc/mxc_spdc_fb.c:1384:			var->green.offset = 2;
drivers/video/mxc/mxc_spdc_fb.c:1385:			var->green.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1387:			var->blue.length = 2;
drivers/video/mxc/mxc_spdc_fb.c:1388:			var->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1389:			var->blue.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1391:			var->transp.length = 0;
drivers/video/mxc/mxc_spdc_fb.c:1392:			var->transp.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1393:			var->transp.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1397:		var->red.length = 5;
drivers/video/mxc/mxc_spdc_fb.c:1398:		var->red.offset = 11;
drivers/video/mxc/mxc_spdc_fb.c:1399:		var->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1401:		var->green.length = 6;
drivers/video/mxc/mxc_spdc_fb.c:1402:		var->green.offset = 5;
drivers/video/mxc/mxc_spdc_fb.c:1403:		var->green.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1405:		var->blue.length = 5;
drivers/video/mxc/mxc_spdc_fb.c:1406:		var->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1407:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1409:		var->transp.length = 0;
drivers/video/mxc/mxc_spdc_fb.c:1410:		var->transp.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1411:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1414:		var->red.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1415:		var->red.offset = 16;
drivers/video/mxc/mxc_spdc_fb.c:1416:		var->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1418:		var->green.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1419:		var->green.offset = 8;
drivers/video/mxc/mxc_spdc_fb.c:1420:		var->green.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1422:		var->blue.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1423:		var->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1424:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1426:		var->transp.length = 0;
drivers/video/mxc/mxc_spdc_fb.c:1427:		var->transp.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1428:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1431:		var->red.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1432:		var->red.offset = 16;
drivers/video/mxc/mxc_spdc_fb.c:1433:		var->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1435:		var->green.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1436:		var->green.offset = 8;
drivers/video/mxc/mxc_spdc_fb.c:1437:		var->green.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1439:		var->blue.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1440:		var->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:1441:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1443:		var->transp.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:1444:		var->transp.offset = 24;
drivers/video/mxc/mxc_spdc_fb.c:1445:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:1449:	switch (var->rotate) {
drivers/video/mxc/mxc_spdc_fb.c:1452:		var->xres = fb_data->native_width;
drivers/video/mxc/mxc_spdc_fb.c:1453:		var->yres = fb_data->native_height;
drivers/video/mxc/mxc_spdc_fb.c:1457:		var->xres = fb_data->native_height;
drivers/video/mxc/mxc_spdc_fb.c:1458:		var->yres = fb_data->native_width;
drivers/video/mxc/mxc_spdc_fb.c:1462:		var->rotate = 0;
drivers/video/mxc/mxc_spdc_fb.c:1463:		dev_dbg(fb_data->dev, "Invalid rotation request\n");
drivers/video/mxc/mxc_spdc_fb.c:1464:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:1467:	var->xres_virtual = ALIGN(var->xres, 32);
drivers/video/mxc/mxc_spdc_fb.c:1468:	var->yres_virtual = ALIGN(var->yres, 128) * fb_data->num_screens;
drivers/video/mxc/mxc_spdc_fb.c:1470:	var->height = -1;
drivers/video/mxc/mxc_spdc_fb.c:1471:	var->width = -1;
drivers/video/mxc/mxc_spdc_fb.c:1482:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1484:	memcpy(&fb_data->wv_modes, modes, sizeof(struct mxcfb_waveform_modes));
drivers/video/mxc/mxc_spdc_fb.c:1486:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1490:/* To stick with non-fractional degrees for the sake
drivers/video/mxc/mxc_spdc_fb.c:1499:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1501:	if (temper > -110 && temper < 200)
drivers/video/mxc/mxc_spdc_fb.c:1502:		__raw_writel(temper, fb_data->hwp + SPDC_TEMP_INFO);
drivers/video/mxc/mxc_spdc_fb.c:1504:		__raw_writel(SPDC_DEFAULT_TEMP, fb_data->hwp + SPDC_TEMP_INFO);
drivers/video/mxc/mxc_spdc_fb.c:1506:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1518:	dev_dbg(fb_data->dev, "Setting auto update mode to %d\n", auto_mode);
drivers/video/mxc/mxc_spdc_fb.c:1522:		fb_data->auto_mode = auto_mode;
drivers/video/mxc/mxc_spdc_fb.c:1524:		dev_err(fb_data->dev, "Invalid auto update mode parameter.\n");
drivers/video/mxc/mxc_spdc_fb.c:1525:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:1538:	dev_dbg(fb_data->dev, "Setting optimization level to %d\n", upd_scheme);
drivers/video/mxc/mxc_spdc_fb.c:1549:		fb_data->upd_scheme = upd_scheme;
drivers/video/mxc/mxc_spdc_fb.c:1551:		dev_err(fb_data->dev, "Invalid update scheme specified.\n");
drivers/video/mxc/mxc_spdc_fb.c:1552:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:1563:	struct dma_chan *chan = tx_desc->txd.chan;
drivers/video/mxc/mxc_spdc_fb.c:1565:	mxc_spdc_t *fb_data = pxp_chan->client;
drivers/video/mxc/mxc_spdc_fb.c:1570:	complete(&fb_data->pxp_tx_cmpl);
drivers/video/mxc/mxc_spdc_fb.c:1595:		dev_err(fb_data->dev, "Unsuccessfully received channel!!!!\n");
drivers/video/mxc/mxc_spdc_fb.c:1596:		return -EBUSY;
drivers/video/mxc/mxc_spdc_fb.c:1599:	fb_data->pxp_chan = to_pxp_channel(chan);
drivers/video/mxc/mxc_spdc_fb.c:1600:	fb_data->pxp_chan->client = fb_data;
drivers/video/mxc/mxc_spdc_fb.c:1602:	init_completion(&fb_data->pxp_tx_cmpl);
drivers/video/mxc/mxc_spdc_fb.c:1617:	struct scatterlist *sg = fb_data->sg;
drivers/video/mxc/mxc_spdc_fb.c:1621:	struct pxp_config_data *pxp_conf = &fb_data->pxp_conf;
drivers/video/mxc/mxc_spdc_fb.c:1622:	struct pxp_proc_data *proc_data = &fb_data->pxp_conf.proc_data;
drivers/video/mxc/mxc_spdc_fb.c:1627:	if (fb_data->pxp_chan == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:1638:			dev_err(fb_data->dev, "PxP chan init failed\n");
drivers/video/mxc/mxc_spdc_fb.c:1639:			return -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:1648:	init_completion(&fb_data->pxp_tx_cmpl);
drivers/video/mxc/mxc_spdc_fb.c:1650:	dma_chan = &fb_data->pxp_chan->dma_chan;
drivers/video/mxc/mxc_spdc_fb.c:1652:	txd = dma_chan->device->device_prep_slave_sg(dma_chan, sg, 2,
drivers/video/mxc/mxc_spdc_fb.c:1656:		dev_err(fb_data->info.device,
drivers/video/mxc/mxc_spdc_fb.c:1658:		return -EIO;
drivers/video/mxc/mxc_spdc_fb.c:1661:	txd->callback_param = txd;
drivers/video/mxc/mxc_spdc_fb.c:1662:	txd->callback = pxp_dma_done;
drivers/video/mxc/mxc_spdc_fb.c:1669:	pxp_conf->s0_param.width = src_width;
drivers/video/mxc/mxc_spdc_fb.c:1670:	pxp_conf->s0_param.height = src_height;
drivers/video/mxc/mxc_spdc_fb.c:1671:	proc_data->srect.top = update_region->top;
drivers/video/mxc/mxc_spdc_fb.c:1672:	proc_data->srect.left = update_region->left;
drivers/video/mxc/mxc_spdc_fb.c:1673:	proc_data->srect.width = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1674:	proc_data->srect.height = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1680:	proc_data->drect.top = 0;
drivers/video/mxc/mxc_spdc_fb.c:1681:	proc_data->drect.left = 0;
drivers/video/mxc/mxc_spdc_fb.c:1682:	proc_data->drect.width = proc_data->srect.width;
drivers/video/mxc/mxc_spdc_fb.c:1683:	proc_data->drect.height = proc_data->srect.height;
drivers/video/mxc/mxc_spdc_fb.c:1686:	proc_data->rotate = fb_data->spdc_fb_var.rotate * 90;
drivers/video/mxc/mxc_spdc_fb.c:1687:	if (proc_data->rotate > 270)
drivers/video/mxc/mxc_spdc_fb.c:1688:		proc_data->rotate = 0;
drivers/video/mxc/mxc_spdc_fb.c:1690:	pxp_conf->out_param.width = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1691:	pxp_conf->out_param.height = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1693:	if ((proc_data->rotate == 90) || (proc_data->rotate == 270))
drivers/video/mxc/mxc_spdc_fb.c:1694:		pxp_conf->out_param.stride = update_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1696:		pxp_conf->out_param.stride = update_region->width;
drivers/video/mxc/mxc_spdc_fb.c:1699:	length = desc->len;
drivers/video/mxc/mxc_spdc_fb.c:1702:			memcpy(&desc->proc_data, proc_data,
drivers/video/mxc/mxc_spdc_fb.c:1704:			pxp_conf->s0_param.paddr = sg_dma_address(&sg[0]);
drivers/video/mxc/mxc_spdc_fb.c:1705:			memcpy(&desc->layer_param.s0_param, &pxp_conf->s0_param,
drivers/video/mxc/mxc_spdc_fb.c:1708:			pxp_conf->out_param.paddr = sg_dma_address(&sg[1]);
drivers/video/mxc/mxc_spdc_fb.c:1709:			memcpy(&desc->layer_param.out_param,
drivers/video/mxc/mxc_spdc_fb.c:1710:					&pxp_conf->out_param,
drivers/video/mxc/mxc_spdc_fb.c:1715:		desc = desc->next;
drivers/video/mxc/mxc_spdc_fb.c:1719:	cookie = txd->tx_submit(txd);
drivers/video/mxc/mxc_spdc_fb.c:1721:		dev_err(fb_data->info.device, "Error sending FB through PxP\n");
drivers/video/mxc/mxc_spdc_fb.c:1722:		return -EIO;
drivers/video/mxc/mxc_spdc_fb.c:1725:	fb_data->txd = txd;
drivers/video/mxc/mxc_spdc_fb.c:1740:	ret = wait_for_completion_timeout(&fb_data->pxp_tx_cmpl, HZ / 10);
drivers/video/mxc/mxc_spdc_fb.c:1742:		dev_info(fb_data->info.device,
drivers/video/mxc/mxc_spdc_fb.c:1745:		dma_release_channel(&fb_data->pxp_chan->dma_chan);
drivers/video/mxc/mxc_spdc_fb.c:1746:		fb_data->pxp_chan = NULL;
drivers/video/mxc/mxc_spdc_fb.c:1747:		return ret ? : -ETIMEDOUT;
drivers/video/mxc/mxc_spdc_fb.c:1750:	if ((fb_data->pxp_conf.proc_data.lut_transform & EPDC_FLAG_USE_CMAP) &&
drivers/video/mxc/mxc_spdc_fb.c:1751:		fb_data->pxp_conf.proc_data.lut_map_updated)
drivers/video/mxc/mxc_spdc_fb.c:1752:		fb_data->pxp_conf.proc_data.lut_map_updated = false;
drivers/video/mxc/mxc_spdc_fb.c:1754:	*hist_stat = to_tx_desc(fb_data->txd)->hist_status;
drivers/video/mxc/mxc_spdc_fb.c:1755:	dma_release_channel(&fb_data->pxp_chan->dma_chan);
drivers/video/mxc/mxc_spdc_fb.c:1756:	fb_data->pxp_chan = NULL;
drivers/video/mxc/mxc_spdc_fb.c:1758:	dev_dbg(fb_data->dev, "TX completed\n");
drivers/video/mxc/mxc_spdc_fb.c:1767:		&upd_data_list->update_desc->upd_data;
drivers/video/mxc/mxc_spdc_fb.c:1768:	unsigned char *temp_buf_ptr = fb_data->virt_addr_copybuf;
drivers/video/mxc/mxc_spdc_fb.c:1769:	unsigned char *dst_ptr = upd_data_list->virt_addr;
drivers/video/mxc/mxc_spdc_fb.c:1774:	switch (fb_data->spdc_fb_var.rotate) {
drivers/video/mxc/mxc_spdc_fb.c:1776:		adj_update_region.top = upd_data->update_region.top;
drivers/video/mxc/mxc_spdc_fb.c:1777:		adj_update_region.left = upd_data->update_region.left;
drivers/video/mxc/mxc_spdc_fb.c:1778:		adj_update_region.width = upd_data->update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:1779:		adj_update_region.height = upd_data->update_region.height;
drivers/video/mxc/mxc_spdc_fb.c:1780:		dst_stride = fb_data->spdc_fb_var.xres_virtual / 2;
drivers/video/mxc/mxc_spdc_fb.c:1783:		adj_update_region.top = upd_data->update_region.left;
drivers/video/mxc/mxc_spdc_fb.c:1784:		adj_update_region.left = fb_data->spdc_fb_var.yres -
drivers/video/mxc/mxc_spdc_fb.c:1785:				(upd_data->update_region.top +
drivers/video/mxc/mxc_spdc_fb.c:1786:				upd_data->update_region.height);
drivers/video/mxc/mxc_spdc_fb.c:1787:		adj_update_region.width = upd_data->update_region.height;
drivers/video/mxc/mxc_spdc_fb.c:1788:		adj_update_region.height = upd_data->update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:1789:		dst_stride = fb_data->spdc_fb_var.yres / 2;
drivers/video/mxc/mxc_spdc_fb.c:1792:		adj_update_region.width = upd_data->update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:1793:		adj_update_region.height = upd_data->update_region.height;
drivers/video/mxc/mxc_spdc_fb.c:1794:		adj_update_region.top = fb_data->spdc_fb_var.yres -
drivers/video/mxc/mxc_spdc_fb.c:1795:		(upd_data->update_region.top + upd_data->update_region.height);
drivers/video/mxc/mxc_spdc_fb.c:1796:		adj_update_region.left = fb_data->spdc_fb_var.xres -
drivers/video/mxc/mxc_spdc_fb.c:1797:				(upd_data->update_region.left +
drivers/video/mxc/mxc_spdc_fb.c:1798:				upd_data->update_region.width);
drivers/video/mxc/mxc_spdc_fb.c:1799:		dst_stride = fb_data->spdc_fb_var.xres_virtual / 2;
drivers/video/mxc/mxc_spdc_fb.c:1802:		adj_update_region.left = upd_data->update_region.top;
drivers/video/mxc/mxc_spdc_fb.c:1803:		adj_update_region.top = fb_data->spdc_fb_var.xres -
drivers/video/mxc/mxc_spdc_fb.c:1804:				(upd_data->update_region.left +
drivers/video/mxc/mxc_spdc_fb.c:1805:				upd_data->update_region.width);
drivers/video/mxc/mxc_spdc_fb.c:1806:		adj_update_region.width = upd_data->update_region.height;
drivers/video/mxc/mxc_spdc_fb.c:1807:		adj_update_region.height = upd_data->update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:1808:		dst_stride = fb_data->spdc_fb_var.yres / 2;
drivers/video/mxc/mxc_spdc_fb.c:1834:	struct update_desc_list *upd_desc_list = upd_data_list->update_desc;
drivers/video/mxc/mxc_spdc_fb.c:1848:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_USE_ALT_BUFFER) {
drivers/video/mxc/mxc_spdc_fb.c:1849:		src_width = upd_desc_list->upd_data.alt_buffer_data.width;
drivers/video/mxc/mxc_spdc_fb.c:1850:		src_height = upd_desc_list->upd_data.alt_buffer_data.height;
drivers/video/mxc/mxc_spdc_fb.c:1852:		&upd_desc_list->upd_data.alt_buffer_data.alt_update_region;
drivers/video/mxc/mxc_spdc_fb.c:1854:		src_width = fb_data->spdc_fb_var.xres_virtual;
drivers/video/mxc/mxc_spdc_fb.c:1855:		src_height = fb_data->spdc_fb_var.yres;
drivers/video/mxc/mxc_spdc_fb.c:1856:		src_upd_region = &upd_desc_list->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:1859:	if (!(src_upd_region->width == fb_data->spdc_fb_var.xres_virtual &&
drivers/video/mxc/mxc_spdc_fb.c:1860:		fb_data->spdc_fb_var.rotate == FB_ROTATE_UR))
drivers/video/mxc/mxc_spdc_fb.c:1863:	bytes_per_pixel = fb_data->spdc_fb_var.bits_per_pixel / 8;
drivers/video/mxc/mxc_spdc_fb.c:1867:	mutex_lock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:1869:	offset_from_4 = src_upd_region->left & 0x3;
drivers/video/mxc/mxc_spdc_fb.c:1878:			(src_upd_region->top * src_width + src_upd_region->left)
drivers/video/mxc/mxc_spdc_fb.c:1887:			(src_upd_region->top * src_width + src_upd_region->left)
drivers/video/mxc/mxc_spdc_fb.c:1894:	if (fb_data->spdc_fb_var.rotate == 0) {
drivers/video/mxc/mxc_spdc_fb.c:1895:		pxp_upd_region.width = ALIGN(src_upd_region->width, 8);
drivers/video/mxc/mxc_spdc_fb.c:1896:		pxp_upd_region.height = ALIGN(src_upd_region->height, 8);
drivers/video/mxc/mxc_spdc_fb.c:1899:			ALIGN(src_upd_region->width + pxp_upd_region.left, 8);
drivers/video/mxc/mxc_spdc_fb.c:1900:		pxp_upd_region.height = ALIGN(src_upd_region->height, 8);
drivers/video/mxc/mxc_spdc_fb.c:1903:	switch (fb_data->spdc_fb_var.rotate) {
drivers/video/mxc/mxc_spdc_fb.c:1912:		post_rotation_xcoord = width_pxp_blocks -
drivers/video/mxc/mxc_spdc_fb.c:1913:					src_upd_region->height;
drivers/video/mxc/mxc_spdc_fb.c:1918:		post_rotation_xcoord = width_pxp_blocks -
drivers/video/mxc/mxc_spdc_fb.c:1919:			src_upd_region->width -	pxp_upd_region.left;
drivers/video/mxc/mxc_spdc_fb.c:1920:		post_rotation_ycoord = pxp_upd_region.height -
drivers/video/mxc/mxc_spdc_fb.c:1921:			src_upd_region->height - pxp_upd_region.top;
drivers/video/mxc/mxc_spdc_fb.c:1926:		post_rotation_ycoord = pxp_upd_region.width -
drivers/video/mxc/mxc_spdc_fb.c:1927:			src_upd_region->width -	pxp_upd_region.left;
drivers/video/mxc/mxc_spdc_fb.c:1938:		- post_rotation_xcoord;
drivers/video/mxc/mxc_spdc_fb.c:1941:	upd_desc_list->spdc_offs = ALIGN(pxp_output_offs, 8);
drivers/video/mxc/mxc_spdc_fb.c:1945:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_USE_ALT_BUFFER)
drivers/video/mxc/mxc_spdc_fb.c:1946:		sg_dma_address(&fb_data->sg[0]) =
drivers/video/mxc/mxc_spdc_fb.c:1947:			upd_desc_list->upd_data.alt_buffer_data.phys_addr
drivers/video/mxc/mxc_spdc_fb.c:1950:		sg_dma_address(&fb_data->sg[0]) =
drivers/video/mxc/mxc_spdc_fb.c:1951:			fb_data->info.fix.smem_start + fb_data->fb_offset
drivers/video/mxc/mxc_spdc_fb.c:1953:		sg_set_page(&fb_data->sg[0],
drivers/video/mxc/mxc_spdc_fb.c:1954:			virt_to_page(fb_data->info.screen_base),
drivers/video/mxc/mxc_spdc_fb.c:1955:			fb_data->info.fix.smem_len,
drivers/video/mxc/mxc_spdc_fb.c:1956:			offset_in_page(fb_data->info.screen_base));
drivers/video/mxc/mxc_spdc_fb.c:1961:		sg_dma_address(&fb_data->sg[1]) = upd_data_list->phys_addr;
drivers/video/mxc/mxc_spdc_fb.c:1962:		sg_set_page(&fb_data->sg[1],
drivers/video/mxc/mxc_spdc_fb.c:1963:				virt_to_page(upd_data_list->virt_addr),
drivers/video/mxc/mxc_spdc_fb.c:1964:		fb_data->max_pix_size,
drivers/video/mxc/mxc_spdc_fb.c:1965:		offset_in_page(upd_data_list->virt_addr));
drivers/video/mxc/mxc_spdc_fb.c:1967:		sg_dma_address(&fb_data->sg[1]) = fb_data->phys_addr_copybuf;
drivers/video/mxc/mxc_spdc_fb.c:1968:		sg_set_page(&fb_data->sg[1],
drivers/video/mxc/mxc_spdc_fb.c:1969:			virt_to_page(fb_data->virt_addr_copybuf),
drivers/video/mxc/mxc_spdc_fb.c:1970:		fb_data->max_pix_size,
drivers/video/mxc/mxc_spdc_fb.c:1971:		offset_in_page(fb_data->virt_addr_copybuf));
drivers/video/mxc/mxc_spdc_fb.c:1977:	fb_data->pxp_conf.proc_data.lut_transform = 0;
drivers/video/mxc/mxc_spdc_fb.c:1978:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_ENABLE_INVERSION)
drivers/video/mxc/mxc_spdc_fb.c:1979:		fb_data->pxp_conf.proc_data.lut_transform |= PXP_LUT_INVERT;
drivers/video/mxc/mxc_spdc_fb.c:1980:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_FORCE_MONOCHROME)
drivers/video/mxc/mxc_spdc_fb.c:1981:		fb_data->pxp_conf.proc_data.lut_transform |=
drivers/video/mxc/mxc_spdc_fb.c:1983:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_USE_CMAP)
drivers/video/mxc/mxc_spdc_fb.c:1984:		fb_data->pxp_conf.proc_data.lut_transform |=
drivers/video/mxc/mxc_spdc_fb.c:1988:	 * Toggle inversion processing if 8-bit
drivers/video/mxc/mxc_spdc_fb.c:1991:	if (fb_data->spdc_fb_var.grayscale == GRAYSCALE_4BIT_INVERTED)
drivers/video/mxc/mxc_spdc_fb.c:1992:		fb_data->pxp_conf.proc_data.lut_transform ^= PXP_LUT_INVERT;
drivers/video/mxc/mxc_spdc_fb.c:1998:		dev_err(fb_data->dev, "Unable to submit PxP update task.\n");
drivers/video/mxc/mxc_spdc_fb.c:1999:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2004:	if ((fb_data->power_state == POWER_STATE_OFF)
drivers/video/mxc/mxc_spdc_fb.c:2005:		|| fb_data->powering_down) {
drivers/video/mxc/mxc_spdc_fb.c:2012:		dev_err(fb_data->dev, "Unable to complete PxP update task.\n");
drivers/video/mxc/mxc_spdc_fb.c:2013:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2020:	mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2023:	if (upd_desc_list->upd_data.waveform_mode == WAVEFORM_MODE_AUTO) {
drivers/video/mxc/mxc_spdc_fb.c:2025:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_spdc_fb.c:2026:				fb_data->wv_modes.mode_du;
drivers/video/mxc/mxc_spdc_fb.c:2028:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_spdc_fb.c:2029:				fb_data->wv_modes.mode_gc4;
drivers/video/mxc/mxc_spdc_fb.c:2031:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_spdc_fb.c:2032:				fb_data->wv_modes.mode_gc8;
drivers/video/mxc/mxc_spdc_fb.c:2034:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_spdc_fb.c:2035:				fb_data->wv_modes.mode_gc16;
drivers/video/mxc/mxc_spdc_fb.c:2037:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_spdc_fb.c:2038:				fb_data->wv_modes.mode_gc32;
drivers/video/mxc/mxc_spdc_fb.c:2040:		dev_dbg(fb_data->dev, "hist_stat = 0x%x, new waveform = 0x%x\n",
drivers/video/mxc/mxc_spdc_fb.c:2041:			hist_stat, upd_desc_list->upd_data.waveform_mode);
drivers/video/mxc/mxc_spdc_fb.c:2055:	a = &update_to_concur->upd_data;
drivers/video/mxc/mxc_spdc_fb.c:2056:	arect = &update_to_concur->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:2059:		&fb_data->upd_buf_preprocess_list, list) {
drivers/video/mxc/mxc_spdc_fb.c:2060:		b = &next_upd->update_desc->upd_data;
drivers/video/mxc/mxc_spdc_fb.c:2061:		brect = &next_upd->update_desc->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:2066:		if (a->waveform_mode != b->waveform_mode)
drivers/video/mxc/mxc_spdc_fb.c:2072:		if (!(arect->left > (brect->left + brect->width) ||
drivers/video/mxc/mxc_spdc_fb.c:2073:			brect->left > (arect->left + arect->width) ||
drivers/video/mxc/mxc_spdc_fb.c:2074:			arect->top > (brect->top + brect->height) ||
drivers/video/mxc/mxc_spdc_fb.c:2075:			brect->top > (arect->top + arect->height)))
drivers/video/mxc/mxc_spdc_fb.c:2081:	if (i != fb_data->upd_preprocess_num)
drivers/video/mxc/mxc_spdc_fb.c:2095:	a = &upd_desc_list->upd_data;
drivers/video/mxc/mxc_spdc_fb.c:2096:	b = &update_to_merge->upd_data;
drivers/video/mxc/mxc_spdc_fb.c:2097:	arect = &upd_desc_list->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:2098:	brect = &update_to_merge->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:2104:	if (a->flags != b->flags) {
drivers/video/mxc/mxc_spdc_fb.c:2109:		if ((arect->left != brect->left) ||
drivers/video/mxc/mxc_spdc_fb.c:2110:			(arect->top != brect->top) ||
drivers/video/mxc/mxc_spdc_fb.c:2111:			(arect->width != brect->width) ||
drivers/video/mxc/mxc_spdc_fb.c:2112:			(arect->height != brect->height))
drivers/video/mxc/mxc_spdc_fb.c:2118:	if (a->waveform_mode != b->waveform_mode)
drivers/video/mxc/mxc_spdc_fb.c:2119:		a->waveform_mode = WAVEFORM_MODE_AUTO;
drivers/video/mxc/mxc_spdc_fb.c:2121:	if (arect->left > (brect->left + brect->width) ||
drivers/video/mxc/mxc_spdc_fb.c:2122:		brect->left > (arect->left + arect->width) ||
drivers/video/mxc/mxc_spdc_fb.c:2123:		arect->top > (brect->top + brect->height) ||
drivers/video/mxc/mxc_spdc_fb.c:2124:		brect->top > (arect->top + arect->height))
drivers/video/mxc/mxc_spdc_fb.c:2127:	combine.left = arect->left < brect->left ? arect->left : brect->left;
drivers/video/mxc/mxc_spdc_fb.c:2128:	combine.top = arect->top < brect->top ? arect->top : brect->top;
drivers/video/mxc/mxc_spdc_fb.c:2129:	combine.width = (arect->left + arect->width) >
drivers/video/mxc/mxc_spdc_fb.c:2130:			(brect->left + brect->width) ?
drivers/video/mxc/mxc_spdc_fb.c:2131:			(arect->left + arect->width - combine.left) :
drivers/video/mxc/mxc_spdc_fb.c:2132:			(brect->left + brect->width - combine.left);
drivers/video/mxc/mxc_spdc_fb.c:2133:	combine.height = (arect->top + arect->height) >
drivers/video/mxc/mxc_spdc_fb.c:2134:			(brect->top + brect->height) ?
drivers/video/mxc/mxc_spdc_fb.c:2135:			(arect->top + arect->height - combine.top) :
drivers/video/mxc/mxc_spdc_fb.c:2136:			(brect->top + brect->height - combine.top);
drivers/video/mxc/mxc_spdc_fb.c:2142:		a->flags = b->flags;
drivers/video/mxc/mxc_spdc_fb.c:2145:	list_splice_tail(&update_to_merge->upd_marker_list,
drivers/video/mxc/mxc_spdc_fb.c:2146:		&upd_desc_list->upd_marker_list);
drivers/video/mxc/mxc_spdc_fb.c:2165:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2168:	if (list_empty(&fb_data->upd_buf_free_list)) {
drivers/video/mxc/mxc_spdc_fb.c:2169:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2173:	if (fb_data->fresh_param.concur == SPDC_LUT_ACC_MODE) {
drivers/video/mxc/mxc_spdc_fb.c:2175:			&fb_data->upd_pending_list, list) {
drivers/video/mxc/mxc_spdc_fb.c:2178:			list_entry((&next_desc->upd_marker_list)->next,
drivers/video/mxc/mxc_spdc_fb.c:2181:			if (current_marker->update_marker) {
drivers/video/mxc/mxc_spdc_fb.c:2182:				fb_data->submit_upd_sta = 0;
drivers/video/mxc/mxc_spdc_fb.c:2187:			if (list_empty(&fb_data->upd_buf_free_list)) {
drivers/video/mxc/mxc_spdc_fb.c:2188:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2194:			list_entry(fb_data->upd_buf_free_list.next,
drivers/video/mxc/mxc_spdc_fb.c:2196:			upd_data_list->update_desc = next_desc;
drivers/video/mxc/mxc_spdc_fb.c:2199:				if (fb_data->cur_update == NULL &&
drivers/video/mxc/mxc_spdc_fb.c:2200:					!fb_data->upd_preprocess_num)
drivers/video/mxc/mxc_spdc_fb.c:2201:					list_del_init(&next_desc->list);
drivers/video/mxc/mxc_spdc_fb.c:2204:					list_del_init(&next_desc->list);
drivers/video/mxc/mxc_spdc_fb.c:2205:					list_add_tail(&upd_data_list->list,
drivers/video/mxc/mxc_spdc_fb.c:2206:					&fb_data->upd_buf_preprocess_list);
drivers/video/mxc/mxc_spdc_fb.c:2207:					fb_data->upd_preprocess_num++;
drivers/video/mxc/mxc_spdc_fb.c:2208:					fb_data->submit_upd_sta =
drivers/video/mxc/mxc_spdc_fb.c:2216:			list_del_init(&upd_data_list->list);
drivers/video/mxc/mxc_spdc_fb.c:2221:		if (fb_data->submit_upd_sta == SPDC_CONCUR_UPD)
drivers/video/mxc/mxc_spdc_fb.c:2222:			fb_data->submit_upd_sta |= SPDC_QUEUE_UPD;
drivers/video/mxc/mxc_spdc_fb.c:2224:			fb_data->submit_upd_sta = SPDC_QUEUE_UPD;
drivers/video/mxc/mxc_spdc_fb.c:2228:			&fb_data->upd_pending_list, list) {
drivers/video/mxc/mxc_spdc_fb.c:2232:			if (list_empty(&fb_data->upd_buf_free_list)) {
drivers/video/mxc/mxc_spdc_fb.c:2233:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2238:				list_entry(fb_data->upd_buf_free_list.next,
drivers/video/mxc/mxc_spdc_fb.c:2240:			list_del_init(&upd_data_list->list);
drivers/video/mxc/mxc_spdc_fb.c:2241:			upd_data_list->update_desc = next_desc;
drivers/video/mxc/mxc_spdc_fb.c:2242:			list_del_init(&next_desc->list);
drivers/video/mxc/mxc_spdc_fb.c:2244:			if (fb_data->upd_scheme == UPDATE_SCHEME_QUEUE)
drivers/video/mxc/mxc_spdc_fb.c:2247:			switch (spdc_submit_merge(upd_data_list->update_desc,
drivers/video/mxc/mxc_spdc_fb.c:2250:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2252:				list_del_init(&next_desc->list);
drivers/video/mxc/mxc_spdc_fb.c:2256:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2260:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2273:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2281:	 *   - FB unrotated
drivers/video/mxc/mxc_spdc_fb.c:2282:	 *   - FB pixel format = 4-bit grayscale
drivers/video/mxc/mxc_spdc_fb.c:2283:	 *   - No look-up transformations (inversion, posterization, etc.)
drivers/video/mxc/mxc_spdc_fb.c:2285:	is_transform = upd_data_list->update_desc->upd_data.flags &
drivers/video/mxc/mxc_spdc_fb.c:2289:	if ((fb_data->spdc_fb_var.rotate == FB_ROTATE_UR) &&
drivers/video/mxc/mxc_spdc_fb.c:2290:		(fb_data->spdc_fb_var.grayscale == GRAYSCALE_4BIT) &&
drivers/video/mxc/mxc_spdc_fb.c:2294:		if ((fb_data->power_state == POWER_STATE_OFF)
drivers/video/mxc/mxc_spdc_fb.c:2295:			|| fb_data->powering_down)
drivers/video/mxc/mxc_spdc_fb.c:2303:			&upd_data_list->update_desc->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:2304:		update_addr = fb_data->info.fix.smem_start +
drivers/video/mxc/mxc_spdc_fb.c:2305:			((upd_region->top * fb_data->info.var.xres_virtual) +
drivers/video/mxc/mxc_spdc_fb.c:2306:			upd_region->left) * fb_data->info.var.bits_per_pixel/8;
drivers/video/mxc/mxc_spdc_fb.c:2310:		upd_data_list->phys_addr =
drivers/video/mxc/mxc_spdc_fb.c:2311:			fb_data->phys_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_spdc_fb.c:2312:		upd_data_list->virt_addr =
drivers/video/mxc/mxc_spdc_fb.c:2313:			fb_data->virt_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_spdc_fb.c:2314:		fb_data->upd_buffer_num++;
drivers/video/mxc/mxc_spdc_fb.c:2315:		if (fb_data->upd_buffer_num > fb_data->max_num_buffers-1)
drivers/video/mxc/mxc_spdc_fb.c:2316:			fb_data->upd_buffer_num = 0;
drivers/video/mxc/mxc_spdc_fb.c:2317:		dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2318:			"pxp out addr:0x%x\n", upd_data_list->phys_addr);
drivers/video/mxc/mxc_spdc_fb.c:2321:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2323:		/* Perform PXP processing - SPDC power will also be enabled */
drivers/video/mxc/mxc_spdc_fb.c:2326:			dev_dbg(fb_data->dev, "PXP processing error.\n");
drivers/video/mxc/mxc_spdc_fb.c:2328:			mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2329:			list_del_init(&upd_data_list->update_desc->list);
drivers/video/mxc/mxc_spdc_fb.c:2330:			kfree(upd_data_list->update_desc);
drivers/video/mxc/mxc_spdc_fb.c:2331:			upd_data_list->update_desc = NULL;
drivers/video/mxc/mxc_spdc_fb.c:2334:			list_add_tail(&upd_data_list->list,
drivers/video/mxc/mxc_spdc_fb.c:2335:				&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_spdc_fb.c:2337:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2342:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2345:		update_addr = upd_data_list->phys_addr +
drivers/video/mxc/mxc_spdc_fb.c:2346:			+ (upd_data_list->update_desc->spdc_offs / 2);
drivers/video/mxc/mxc_spdc_fb.c:2349:	/* Get rotation-adjusted coordinates */
drivers/video/mxc/mxc_spdc_fb.c:2350:	adjust_coordinates(fb_data->spdc_fb_var.xres,
drivers/video/mxc/mxc_spdc_fb.c:2351:		fb_data->spdc_fb_var.yres, fb_data->spdc_fb_var.rotate,
drivers/video/mxc/mxc_spdc_fb.c:2352:		&upd_data_list->update_desc->upd_data.update_region,
drivers/video/mxc/mxc_spdc_fb.c:2360:	if (fb_data->cur_update != NULL &&
drivers/video/mxc/mxc_spdc_fb.c:2361:	fb_data->submit_upd_sta != SPDC_CONCUR_UPD) {
drivers/video/mxc/mxc_spdc_fb.c:2363:		init_completion(&fb_data->update_res_free);
drivers/video/mxc/mxc_spdc_fb.c:2365:		fb_data->waiting_for_wb = true;
drivers/video/mxc/mxc_spdc_fb.c:2368:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2369:		wait_for_completion(&fb_data->update_res_free);
drivers/video/mxc/mxc_spdc_fb.c:2370:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2373:	if (fb_data->submit_upd_sta != SPDC_CONCUR_UPD)
drivers/video/mxc/mxc_spdc_fb.c:2374:		fb_data->cur_update = upd_data_list;
drivers/video/mxc/mxc_spdc_fb.c:2377:	fb_data->fresh_param.buf_addr.next_buf_phys_addr = update_addr;
drivers/video/mxc/mxc_spdc_fb.c:2379:	fb_data->fresh_param.update_region.left = adj_update_region.left;
drivers/video/mxc/mxc_spdc_fb.c:2380:	fb_data->fresh_param.update_region.top = adj_update_region.top;
drivers/video/mxc/mxc_spdc_fb.c:2381:	fb_data->fresh_param.update_region.width = adj_update_region.width;
drivers/video/mxc/mxc_spdc_fb.c:2382:	fb_data->fresh_param.update_region.height = adj_update_region.height;
drivers/video/mxc/mxc_spdc_fb.c:2383:	fb_data->fresh_param.temper = upd_data_list->update_desc->upd_data.temp;
drivers/video/mxc/mxc_spdc_fb.c:2384:	fb_data->fresh_param.wave_mode =
drivers/video/mxc/mxc_spdc_fb.c:2385:		upd_data_list->update_desc->upd_data.waveform_mode;
drivers/video/mxc/mxc_spdc_fb.c:2390:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2405:	if (!fb_data->hw_ready) {
drivers/video/mxc/mxc_spdc_fb.c:2406:		/* Throw message if we are not mid-initialization */
drivers/video/mxc/mxc_spdc_fb.c:2407:		if (!fb_data->hw_initializing)
drivers/video/mxc/mxc_spdc_fb.c:2408:			dev_err(fb_data->dev, "Display HW not properly"
drivers/video/mxc/mxc_spdc_fb.c:2410:		return -EPERM;
drivers/video/mxc/mxc_spdc_fb.c:2413:	if ((upd_data->waveform_mode > SPDC_WAV_MODE_5) &&
drivers/video/mxc/mxc_spdc_fb.c:2414:		(upd_data->waveform_mode != WAVEFORM_MODE_AUTO)) {
drivers/video/mxc/mxc_spdc_fb.c:2415:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2418:			upd_data->waveform_mode);
drivers/video/mxc/mxc_spdc_fb.c:2419:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2421:	if ((upd_data->update_region.left + upd_data->update_region.width >
drivers/video/mxc/mxc_spdc_fb.c:2422:		fb_data->spdc_fb_var.xres + 1) ||
drivers/video/mxc/mxc_spdc_fb.c:2423:		(upd_data->update_region.top + upd_data->update_region.height >
drivers/video/mxc/mxc_spdc_fb.c:2424:		fb_data->spdc_fb_var.yres + 1)) {
drivers/video/mxc/mxc_spdc_fb.c:2425:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2428:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2430:	if (upd_data->flags & EPDC_FLAG_USE_ALT_BUFFER) {
drivers/video/mxc/mxc_spdc_fb.c:2431:		if ((upd_data->update_region.width !=
drivers/video/mxc/mxc_spdc_fb.c:2432:			upd_data->alt_buffer_data.alt_update_region.width) ||
drivers/video/mxc/mxc_spdc_fb.c:2433:			(upd_data->update_region.height !=
drivers/video/mxc/mxc_spdc_fb.c:2434:			upd_data->alt_buffer_data.alt_update_region.height)) {
drivers/video/mxc/mxc_spdc_fb.c:2435:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2438:			return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2441:		if ((upd_data->alt_buffer_data.phys_addr <
drivers/video/mxc/mxc_spdc_fb.c:2442:			fb_data->info.fix.smem_start) ||
drivers/video/mxc/mxc_spdc_fb.c:2443:			(upd_data->alt_buffer_data.phys_addr >
drivers/video/mxc/mxc_spdc_fb.c:2444:			fb_data->info.fix.smem_start + fb_data->map_size)) {
drivers/video/mxc/mxc_spdc_fb.c:2445:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2448:			return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2452:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2458:	if (fb_data->waiting_for_idle) {
drivers/video/mxc/mxc_spdc_fb.c:2459:		dev_dbg(fb_data->dev, "SPDC not active."
drivers/video/mxc/mxc_spdc_fb.c:2461:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2462:		return -EPERM;
drivers/video/mxc/mxc_spdc_fb.c:2465:	if (fb_data->upd_scheme == UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_spdc_fb.c:2470:		list_for_each_entry(plist, &fb_data->upd_buf_free_list, list)
drivers/video/mxc/mxc_spdc_fb.c:2475:		if (count + fb_data->max_num_buffers
drivers/video/mxc/mxc_spdc_fb.c:2476:			<= fb_data->max_num_updates) {
drivers/video/mxc/mxc_spdc_fb.c:2477:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2479:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2480:			return -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:2485:		list_entry(fb_data->upd_buf_free_list.next,
drivers/video/mxc/mxc_spdc_fb.c:2488:		list_del_init(&upd_data_list->list);
drivers/video/mxc/mxc_spdc_fb.c:2497:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2499:		if (fb_data->upd_scheme == UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_spdc_fb.c:2500:			list_add(&upd_data_list->list,
drivers/video/mxc/mxc_spdc_fb.c:2501:				&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_spdc_fb.c:2503:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2504:		return -EPERM;
drivers/video/mxc/mxc_spdc_fb.c:2506:	/* Initialize per-update marker list */
drivers/video/mxc/mxc_spdc_fb.c:2507:	INIT_LIST_HEAD(&upd_desc->upd_marker_list);
drivers/video/mxc/mxc_spdc_fb.c:2508:	upd_desc->upd_data = *upd_data;
drivers/video/mxc/mxc_spdc_fb.c:2509:	list_add_tail(&upd_desc->list, &fb_data->upd_pending_list);
drivers/video/mxc/mxc_spdc_fb.c:2512:	if (upd_data->update_marker != 0) {
drivers/video/mxc/mxc_spdc_fb.c:2518:			dev_err(fb_data->dev, "No memory for marker!\n");
drivers/video/mxc/mxc_spdc_fb.c:2519:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2520:			return -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:2522:		list_add_tail(&marker_data->upd_list,
drivers/video/mxc/mxc_spdc_fb.c:2523:			&upd_desc->upd_marker_list);
drivers/video/mxc/mxc_spdc_fb.c:2524:		marker_data->update_marker = upd_data->update_marker;
drivers/video/mxc/mxc_spdc_fb.c:2525:		init_completion(&marker_data->update_completion);
drivers/video/mxc/mxc_spdc_fb.c:2528:		list_add_tail(&marker_data->full_list,
drivers/video/mxc/mxc_spdc_fb.c:2529:			&fb_data->full_marker_list);
drivers/video/mxc/mxc_spdc_fb.c:2532:	if (fb_data->upd_scheme != UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_spdc_fb.c:2535:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2538:		queue_work(fb_data->spdc_submit_workqueue,
drivers/video/mxc/mxc_spdc_fb.c:2539:			&fb_data->spdc_submit_work);
drivers/video/mxc/mxc_spdc_fb.c:2545:	upd_data_list->update_desc = upd_desc;
drivers/video/mxc/mxc_spdc_fb.c:2546:	list_del_init(&upd_desc->list);
drivers/video/mxc/mxc_spdc_fb.c:2548:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2554:	screen_upd_region = &upd_desc->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:2557:	upd_data_list->phys_addr =
drivers/video/mxc/mxc_spdc_fb.c:2558:		fb_data->phys_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_spdc_fb.c:2559:	upd_data_list->virt_addr =
drivers/video/mxc/mxc_spdc_fb.c:2560:		fb_data->virt_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_spdc_fb.c:2561:	fb_data->upd_buffer_num++;
drivers/video/mxc/mxc_spdc_fb.c:2562:	if (fb_data->upd_buffer_num > fb_data->max_num_buffers-1)
drivers/video/mxc/mxc_spdc_fb.c:2563:		fb_data->upd_buffer_num = 0;
drivers/video/mxc/mxc_spdc_fb.c:2567:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2572:	upd_data->waveform_mode = upd_desc->upd_data.waveform_mode;
drivers/video/mxc/mxc_spdc_fb.c:2574:	/* Get rotation-adjusted coordinates */
drivers/video/mxc/mxc_spdc_fb.c:2575:	adjust_coordinates(fb_data->spdc_fb_var.xres,
drivers/video/mxc/mxc_spdc_fb.c:2576:		fb_data->spdc_fb_var.yres, fb_data->spdc_fb_var.rotate,
drivers/video/mxc/mxc_spdc_fb.c:2577:		&upd_desc->upd_data.update_region, NULL);
drivers/video/mxc/mxc_spdc_fb.c:2580:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2587:	if (fb_data->cur_update != NULL) {
drivers/video/mxc/mxc_spdc_fb.c:2590:		list_add_tail(&upd_data_list->list, &fb_data->upd_buf_queue);
drivers/video/mxc/mxc_spdc_fb.c:2593:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2598:	fb_data->cur_update = upd_data_list;
drivers/video/mxc/mxc_spdc_fb.c:2601:	fb_data->fresh_param.buf_addr.next_buf_phys_addr =
drivers/video/mxc/mxc_spdc_fb.c:2602:	upd_data_list->phys_addr + (upd_data_list->update_desc->spdc_offs / 2);
drivers/video/mxc/mxc_spdc_fb.c:2604:	fb_data->fresh_param.update_region.left = screen_upd_region->left;
drivers/video/mxc/mxc_spdc_fb.c:2605:	fb_data->fresh_param.update_region.top = screen_upd_region->top;
drivers/video/mxc/mxc_spdc_fb.c:2606:	fb_data->fresh_param.update_region.width = screen_upd_region->width;
drivers/video/mxc/mxc_spdc_fb.c:2607:	fb_data->fresh_param.update_region.height = screen_upd_region->height;
drivers/video/mxc/mxc_spdc_fb.c:2608:	fb_data->fresh_param.temper = upd_desc->upd_data.temp;
drivers/video/mxc/mxc_spdc_fb.c:2609:	fb_data->fresh_param.wave_mode = upd_desc->upd_data.waveform_mode;
drivers/video/mxc/mxc_spdc_fb.c:2612:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2632:	if (marker_data->update_marker == 0)
drivers/video/mxc/mxc_spdc_fb.c:2633:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2642:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2645:		&fb_data->full_marker_list, full_list) {
drivers/video/mxc/mxc_spdc_fb.c:2646:		if (next_marker->update_marker == marker_data->update_marker) {
drivers/video/mxc/mxc_spdc_fb.c:2647:			dev_dbg(fb_data->dev, "Waiting for marker %d\n",
drivers/video/mxc/mxc_spdc_fb.c:2648:				marker_data->update_marker);
drivers/video/mxc/mxc_spdc_fb.c:2649:			next_marker->waiting = true;
drivers/video/mxc/mxc_spdc_fb.c:2655:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2664:	ret = wait_for_completion_timeout(&next_marker->update_completion,
drivers/video/mxc/mxc_spdc_fb.c:2667:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2669:		return -ETIMEDOUT;
drivers/video/mxc/mxc_spdc_fb.c:2675:	marker_data->collision_test = false;
drivers/video/mxc/mxc_spdc_fb.c:2690:	fb_data->pwrdown_delay = pwrdown_delay;
drivers/video/mxc/mxc_spdc_fb.c:2701:	return fb_data->pwrdown_delay;
drivers/video/mxc/mxc_spdc_fb.c:2710:	int ret = -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2712:	dev_dbg(fb_data->dev, "cmd = %08X, arg = %08X\n", cmd, (u32)arg);
drivers/video/mxc/mxc_spdc_fb.c:2756:					ret = -EFAULT;
drivers/video/mxc/mxc_spdc_fb.c:2758:				ret = -EFAULT;
drivers/video/mxc/mxc_spdc_fb.c:2772:					ret = -EFAULT;
drivers/video/mxc/mxc_spdc_fb.c:2774:				ret = -EFAULT;
drivers/video/mxc/mxc_spdc_fb.c:2791:				ret = -EFAULT;
drivers/video/mxc/mxc_spdc_fb.c:2795:		dev_err(fb_data->dev, "IOCTL_CMD: not such command\n");
drivers/video/mxc/mxc_spdc_fb.c:2796:		return -ENOTTY;
drivers/video/mxc/mxc_spdc_fb.c:2808:	update.update_region.width = fb_data->spdc_fb_var.xres;
drivers/video/mxc/mxc_spdc_fb.c:2810:	update.update_region.height = y2 - y1;
drivers/video/mxc/mxc_spdc_fb.c:2817:	mxc_spdc_fb_send_update(&update, &fb_data->info);
drivers/video/mxc/mxc_spdc_fb.c:2829:	if (fb_data->auto_mode != AUTO_UPDATE_MODE_AUTOMATIC_MODE)
drivers/video/mxc/mxc_spdc_fb.c:2835:		beg = page->index << PAGE_SHIFT;
drivers/video/mxc/mxc_spdc_fb.c:2836:		end = beg + PAGE_SIZE - 1;
drivers/video/mxc/mxc_spdc_fb.c:2837:		y1 = beg / info->fix.line_length;
drivers/video/mxc/mxc_spdc_fb.c:2838:		y2 = end / info->fix.line_length;
drivers/video/mxc/mxc_spdc_fb.c:2839:		if (y2 >= fb_data->spdc_fb_var.yres)
drivers/video/mxc/mxc_spdc_fb.c:2840:			y2 = fb_data->spdc_fb_var.yres - 1;
drivers/video/mxc/mxc_spdc_fb.c:2855:	dev_dbg(fb_data->dev, "blank = %d\n", blank);
drivers/video/mxc/mxc_spdc_fb.c:2857:	if (fb_data->blank == blank)
drivers/video/mxc/mxc_spdc_fb.c:2860:	fb_data->blank = blank;
drivers/video/mxc/mxc_spdc_fb.c:2865:		mutex_lock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2866:		if ((fb_data->power_state == POWER_STATE_ON) &&
drivers/video/mxc/mxc_spdc_fb.c:2867:			(fb_data->pwrdown_delay == FB_POWERDOWN_DISABLE)) {
drivers/video/mxc/mxc_spdc_fb.c:2873:			mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2876:			while (fb_data->updates_active) {
drivers/video/mxc/mxc_spdc_fb.c:2884:			fb_data->powering_down = true;
drivers/video/mxc/mxc_spdc_fb.c:2886:		} else if (fb_data->power_state != POWER_STATE_OFF) {
drivers/video/mxc/mxc_spdc_fb.c:2887:			fb_data->wait_for_powerdown = true;
drivers/video/mxc/mxc_spdc_fb.c:2888:			init_completion(&fb_data->powerdown_compl);
drivers/video/mxc/mxc_spdc_fb.c:2889:			mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2891:			wait_for_completion_timeout(&fb_data->powerdown_compl,
drivers/video/mxc/mxc_spdc_fb.c:2894:				dev_err(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:2896:				return -ETIMEDOUT;
drivers/video/mxc/mxc_spdc_fb.c:2899:			mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2918:	dev_dbg(info->device, "%s: var->yoffset %d, info->var.yoffset %d\n",
drivers/video/mxc/mxc_spdc_fb.c:2919:		 __func__, var->yoffset, info->var.yoffset);
drivers/video/mxc/mxc_spdc_fb.c:2921:	if (!var || (var->xoffset != info->var.xoffset) ||
drivers/video/mxc/mxc_spdc_fb.c:2922:	(var->yoffset + var->yres > var->yres_virtual)) {
drivers/video/mxc/mxc_spdc_fb.c:2923:		dev_dbg(info->device, "x panning not supported\n");
drivers/video/mxc/mxc_spdc_fb.c:2924:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2927:	if ((fb_data->spdc_fb_var.xoffset == var->xoffset) &&
drivers/video/mxc/mxc_spdc_fb.c:2928:		(fb_data->spdc_fb_var.yoffset == var->yoffset))
drivers/video/mxc/mxc_spdc_fb.c:2931:	y_bottom = var->yoffset;
drivers/video/mxc/mxc_spdc_fb.c:2933:	if (!(var->vmode & FB_VMODE_YWRAP))
drivers/video/mxc/mxc_spdc_fb.c:2934:		y_bottom += var->yres;
drivers/video/mxc/mxc_spdc_fb.c:2936:	if (y_bottom > info->var.yres_virtual)
drivers/video/mxc/mxc_spdc_fb.c:2937:		return -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:2939:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2941:	fb_data->fb_offset = (var->yoffset * var->xres_virtual + var->xoffset)
drivers/video/mxc/mxc_spdc_fb.c:2942:		* (var->bits_per_pixel) / 8;
drivers/video/mxc/mxc_spdc_fb.c:2944:	fb_data->spdc_fb_var.xoffset = var->xoffset;
drivers/video/mxc/mxc_spdc_fb.c:2945:	fb_data->spdc_fb_var.yoffset = var->yoffset;
drivers/video/mxc/mxc_spdc_fb.c:2947:	if (var->vmode & FB_VMODE_YWRAP)
drivers/video/mxc/mxc_spdc_fb.c:2948:		info->var.vmode |= FB_VMODE_YWRAP;
drivers/video/mxc/mxc_spdc_fb.c:2950:		info->var.vmode &= ~FB_VMODE_YWRAP;
drivers/video/mxc/mxc_spdc_fb.c:2952:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:2991:	spin_lock_irqsave(&fb_data->lock, flags);
drivers/video/mxc/mxc_spdc_fb.c:2994:	dev_dbg(fb_data->dev, "spdc int:%x\n", int_events);
drivers/video/mxc/mxc_spdc_fb.c:2999:		dev_err(fb_data->dev, "Error IRQ\n");
drivers/video/mxc/mxc_spdc_fb.c:3004:	 * If we just completed one-time panel init, bypass
drivers/video/mxc/mxc_spdc_fb.c:3007:	if (fb_data->operation_mode &&
drivers/video/mxc/mxc_spdc_fb.c:3009:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3010:		fb_data->updates_active = false;
drivers/video/mxc/mxc_spdc_fb.c:3011:		complete(&fb_data->update_finish);
drivers/video/mxc/mxc_spdc_fb.c:3014:		if ((fb_data->operation_mode == SPDC_DEEP_REFRESH) ||
drivers/video/mxc/mxc_spdc_fb.c:3015:			fb_data->is_deep_fresh)
drivers/video/mxc/mxc_spdc_fb.c:3016:			fb_data->is_deep_fresh = false;
drivers/video/mxc/mxc_spdc_fb.c:3018:			fb_data->operation_mode = SPDC_NO_OPERATION;
drivers/video/mxc/mxc_spdc_fb.c:3020:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3028:			complete(&fb_data->lut_down);
drivers/video/mxc/mxc_spdc_fb.c:3032:			dev_dbg(fb_data->dev, "Lut checksum is err!\n");
drivers/video/mxc/mxc_spdc_fb.c:3039:		complete(&fb_data->init_finish);
drivers/video/mxc/mxc_spdc_fb.c:3045:	spin_unlock_irqrestore(&fb_data->lock, flags);
drivers/video/mxc/mxc_spdc_fb.c:3050:		queue_work(fb_data->spdc_intr_workqueue,
drivers/video/mxc/mxc_spdc_fb.c:3051:			&fb_data->spdc_intr_work);
drivers/video/mxc/mxc_spdc_fb.c:3067:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3070:	if (list_empty(&fb_data->upd_pending_list) &&
drivers/video/mxc/mxc_spdc_fb.c:3072:		(fb_data->cur_update == NULL)) {
drivers/video/mxc/mxc_spdc_fb.c:3074:		fb_data->updates_active = false;
drivers/video/mxc/mxc_spdc_fb.c:3076:		if (fb_data->pwrdown_delay != FB_POWERDOWN_DISABLE) {
drivers/video/mxc/mxc_spdc_fb.c:3081:			fb_data->powering_down = true;
drivers/video/mxc/mxc_spdc_fb.c:3084:			schedule_delayed_work(&fb_data->spdc_done_work,
drivers/video/mxc/mxc_spdc_fb.c:3085:				msecs_to_jiffies(fb_data->pwrdown_delay));
drivers/video/mxc/mxc_spdc_fb.c:3088:			fb_data->order_cnt = 0;
drivers/video/mxc/mxc_spdc_fb.c:3091:		if (fb_data->waiting_for_idle)
drivers/video/mxc/mxc_spdc_fb.c:3092:			complete(&fb_data->updates_done);
drivers/video/mxc/mxc_spdc_fb.c:3097:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3105:	if (fb_data->cur_update != NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3107:			&fb_data->cur_update->update_desc->upd_marker_list,
drivers/video/mxc/mxc_spdc_fb.c:3110:			/* Del from per-update & full list */
drivers/video/mxc/mxc_spdc_fb.c:3111:			list_del_init(&next_marker->upd_list);
drivers/video/mxc/mxc_spdc_fb.c:3112:			list_del_init(&next_marker->full_list);
drivers/video/mxc/mxc_spdc_fb.c:3115:			dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:3117:				next_marker->update_marker);
drivers/video/mxc/mxc_spdc_fb.c:3118:			if (next_marker->waiting)
drivers/video/mxc/mxc_spdc_fb.c:3119:				complete(&next_marker->update_completion);
drivers/video/mxc/mxc_spdc_fb.c:3125:		kfree(fb_data->cur_update->update_desc);
drivers/video/mxc/mxc_spdc_fb.c:3128:		list_add_tail(&fb_data->cur_update->list,
drivers/video/mxc/mxc_spdc_fb.c:3129:			 &fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_spdc_fb.c:3131:		if (fb_data->submit_upd_sta & SPDC_CONCUR_UPD) {
drivers/video/mxc/mxc_spdc_fb.c:3132:			fb_data->upd_preprocess_num = 0;
drivers/video/mxc/mxc_spdc_fb.c:3133:			fb_data->submit_upd_sta &= (~SPDC_CONCUR_UPD);
drivers/video/mxc/mxc_spdc_fb.c:3138:			&fb_data->upd_buf_preprocess_list, list) {
drivers/video/mxc/mxc_spdc_fb.c:3140:			(&next_upd->update_desc->upd_marker_list)->next,
drivers/video/mxc/mxc_spdc_fb.c:3143:			list_del_init(&next_marker->upd_list);
drivers/video/mxc/mxc_spdc_fb.c:3144:			list_del_init(&next_marker->full_list);
drivers/video/mxc/mxc_spdc_fb.c:3147:			dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_spdc_fb.c:3149:				next_marker->update_marker);
drivers/video/mxc/mxc_spdc_fb.c:3151:			if (next_marker->waiting)
drivers/video/mxc/mxc_spdc_fb.c:3152:				complete(&next_marker->update_completion);
drivers/video/mxc/mxc_spdc_fb.c:3157:			list_del_init(&next_upd->list);
drivers/video/mxc/mxc_spdc_fb.c:3159:			list_add_tail(&next_upd->list,
drivers/video/mxc/mxc_spdc_fb.c:3160:				&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_spdc_fb.c:3161:			kfree(next_upd->update_desc);
drivers/video/mxc/mxc_spdc_fb.c:3165:		if (list_empty(&fb_data->upd_pending_list) &&
drivers/video/mxc/mxc_spdc_fb.c:3168:			fb_data->updates_active = false;
drivers/video/mxc/mxc_spdc_fb.c:3170:			if (fb_data->pwrdown_delay !=
drivers/video/mxc/mxc_spdc_fb.c:3176:				fb_data->powering_down = true;
drivers/video/mxc/mxc_spdc_fb.c:3179:				schedule_delayed_work(&fb_data->spdc_done_work,
drivers/video/mxc/mxc_spdc_fb.c:3180:				msecs_to_jiffies(fb_data->pwrdown_delay));
drivers/video/mxc/mxc_spdc_fb.c:3183:				fb_data->order_cnt = 0;
drivers/video/mxc/mxc_spdc_fb.c:3186:			if (fb_data->waiting_for_idle)
drivers/video/mxc/mxc_spdc_fb.c:3187:				complete(&fb_data->updates_done);
drivers/video/mxc/mxc_spdc_fb.c:3191:		if (fb_data->waiting_for_wb) {
drivers/video/mxc/mxc_spdc_fb.c:3192:			dev_dbg(fb_data->dev, "free update_res_free\n");
drivers/video/mxc/mxc_spdc_fb.c:3193:			complete(&fb_data->update_res_free);
drivers/video/mxc/mxc_spdc_fb.c:3194:			fb_data->waiting_for_wb = false;
drivers/video/mxc/mxc_spdc_fb.c:3198:		fb_data->cur_update = NULL;
drivers/video/mxc/mxc_spdc_fb.c:3201:	if (fb_data->upd_scheme != UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_spdc_fb.c:3204:		if (!fb_data->powering_down)
drivers/video/mxc/mxc_spdc_fb.c:3205:			queue_work(fb_data->spdc_submit_workqueue,
drivers/video/mxc/mxc_spdc_fb.c:3206:				&fb_data->spdc_submit_work);
drivers/video/mxc/mxc_spdc_fb.c:3209:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3214:	if (list_empty(&fb_data->upd_buf_queue)) {
drivers/video/mxc/mxc_spdc_fb.c:3215:		dev_dbg(fb_data->dev, "No pending updates.\n");
drivers/video/mxc/mxc_spdc_fb.c:3218:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3221:		dev_dbg(fb_data->dev, "Found a pending update!\n");
drivers/video/mxc/mxc_spdc_fb.c:3224:		fb_data->cur_update =
drivers/video/mxc/mxc_spdc_fb.c:3225:			list_entry(fb_data->upd_buf_queue.next,
drivers/video/mxc/mxc_spdc_fb.c:3227:		list_del_init(&fb_data->cur_update->list);
drivers/video/mxc/mxc_spdc_fb.c:3232:		&fb_data->cur_update->update_desc->upd_data.update_region;
drivers/video/mxc/mxc_spdc_fb.c:3233:	fb_data->fresh_param.buf_addr.next_buf_phys_addr =
drivers/video/mxc/mxc_spdc_fb.c:3234:		fb_data->cur_update->phys_addr +
drivers/video/mxc/mxc_spdc_fb.c:3235:		(fb_data->cur_update->update_desc->spdc_offs / 2);
drivers/video/mxc/mxc_spdc_fb.c:3237:	fb_data->fresh_param.update_region.left = next_upd_region->left;
drivers/video/mxc/mxc_spdc_fb.c:3238:	fb_data->fresh_param.update_region.top = next_upd_region->top;
drivers/video/mxc/mxc_spdc_fb.c:3239:	fb_data->fresh_param.update_region.width = next_upd_region->width;
drivers/video/mxc/mxc_spdc_fb.c:3240:	fb_data->fresh_param.update_region.height = next_upd_region->height;
drivers/video/mxc/mxc_spdc_fb.c:3241:	fb_data->fresh_param.temper =
drivers/video/mxc/mxc_spdc_fb.c:3242:		fb_data->cur_update->update_desc->upd_data.temp;
drivers/video/mxc/mxc_spdc_fb.c:3243:	fb_data->fresh_param.wave_mode =
drivers/video/mxc/mxc_spdc_fb.c:3244:		fb_data->cur_update->update_desc->upd_data.waveform_mode;
drivers/video/mxc/mxc_spdc_fb.c:3247:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3260:	return sprintf(buf, "mode%d\n", fb_data->fresh_param.wave_mode);
drivers/video/mxc/mxc_spdc_fb.c:3271:		update.waveform_mode = fb_data->wv_modes.mode_du;
drivers/video/mxc/mxc_spdc_fb.c:3273:		update.waveform_mode = fb_data->wv_modes.mode_gc16;
drivers/video/mxc/mxc_spdc_fb.c:3275:		update.waveform_mode = fb_data->wv_modes.mode_gc4;
drivers/video/mxc/mxc_spdc_fb.c:3277:		update.waveform_mode = fb_data->wv_modes.mode_init;
drivers/video/mxc/mxc_spdc_fb.c:3285:	update.update_region.width = fb_data->spdc_fb_var.xres;
drivers/video/mxc/mxc_spdc_fb.c:3287:	update.update_region.height = fb_data->spdc_fb_var.yres;
drivers/video/mxc/mxc_spdc_fb.c:3292:	dev_dbg(fb_data->dev, "rotation:%d, gray:%d\n",
drivers/video/mxc/mxc_spdc_fb.c:3293:	fb_data->spdc_fb_var.rotate, fb_data->spdc_fb_var.grayscale);
drivers/video/mxc/mxc_spdc_fb.c:3306:	return sprintf(buf, "%d\n", fb_data->operation_mode);
drivers/video/mxc/mxc_spdc_fb.c:3321:		fb_data->is_deep_fresh = true;
drivers/video/mxc/mxc_spdc_fb.c:3322:	fb_data->operation_mode = operation;
drivers/video/mxc/mxc_spdc_fb.c:3339:	temp = fb_data->fresh_param.temper >> 1;
drivers/video/mxc/mxc_spdc_fb.c:3350:	get_panel_init_set(&fb_data->panel_set, &init_val);
drivers/video/mxc/mxc_spdc_fb.c:3361:	temp = (fb_data->fresh_param.concur ? 1 : 0);
drivers/video/mxc/mxc_spdc_fb.c:3376:	if (fb_data->fresh_param.concur != concur) {
drivers/video/mxc/mxc_spdc_fb.c:3377:		fb_data->fresh_param.concur = concur;
drivers/video/mxc/mxc_spdc_fb.c:3426:							&pdev->dev);
drivers/video/mxc/mxc_spdc_fb.c:3428:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3432:	info = &fb_data->info;
drivers/video/mxc/mxc_spdc_fb.c:3433:	fb_data->dev = &pdev->dev;
drivers/video/mxc/mxc_spdc_fb.c:3436:	fb_data->pdata = pdev->dev.platform_data;
drivers/video/mxc/mxc_spdc_fb.c:3437:	if ((fb_data->pdata == NULL) || (fb_data->pdata->num_modes < 1)
drivers/video/mxc/mxc_spdc_fb.c:3438:		|| (fb_data->pdata->spdc_mode == NULL)
drivers/video/mxc/mxc_spdc_fb.c:3439:		|| (fb_data->pdata->spdc_mode->vmode == NULL)) {
drivers/video/mxc/mxc_spdc_fb.c:3440:		ret = -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:3446:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3455:				&fb_data->default_bpp) < 0)
drivers/video/mxc/mxc_spdc_fb.c:3456:					fb_data->default_bpp = 0;
drivers/video/mxc/mxc_spdc_fb.c:3463:	if (!fb_data->default_bpp)
drivers/video/mxc/mxc_spdc_fb.c:3464:		fb_data->default_bpp = SPDC_DEFAULT_BPP;
drivers/video/mxc/mxc_spdc_fb.c:3470:		for (i = 0; i < fb_data->pdata->num_modes; i++)
drivers/video/mxc/mxc_spdc_fb.c:3471:			if (!strcmp(fb_data->pdata->spdc_mode[i].vmode->name,
drivers/video/mxc/mxc_spdc_fb.c:3473:				fb_data->cur_mode =
drivers/video/mxc/mxc_spdc_fb.c:3474:					 &fb_data->pdata->spdc_mode[i];
drivers/video/mxc/mxc_spdc_fb.c:3477:	vmode = fb_data->cur_mode->vmode;
drivers/video/mxc/mxc_spdc_fb.c:3481:	ret = fb_alloc_cmap(&info->cmap, cmap_size, 0);
drivers/video/mxc/mxc_spdc_fb.c:3487:	 * - 32-byte alignment for buffer width
drivers/video/mxc/mxc_spdc_fb.c:3488:	 * - 128-byte alignment for buffer height
drivers/video/mxc/mxc_spdc_fb.c:3491:	xres_virt = ALIGN(vmode->xres, 32);
drivers/video/mxc/mxc_spdc_fb.c:3492:	yres_virt = ALIGN(vmode->yres, 128);
drivers/video/mxc/mxc_spdc_fb.c:3493:	fb_data->max_pix_size = PAGE_ALIGN(xres_virt * yres_virt);
drivers/video/mxc/mxc_spdc_fb.c:3499:	xres_virt_rot = ALIGN(vmode->yres, 32);
drivers/video/mxc/mxc_spdc_fb.c:3500:	yres_virt_rot = ALIGN(vmode->xres, 128);
drivers/video/mxc/mxc_spdc_fb.c:3502:	fb_data->max_pix_size = (fb_data->max_pix_size > pix_size_rot) ?
drivers/video/mxc/mxc_spdc_fb.c:3503:				fb_data->max_pix_size : pix_size_rot;
drivers/video/mxc/mxc_spdc_fb.c:3504:	buf_size = fb_data->max_pix_size * fb_data->default_bpp/8;
drivers/video/mxc/mxc_spdc_fb.c:3508:		fb_data->num_screens = DIV_ROUND_UP(x_mem_size, buf_size);
drivers/video/mxc/mxc_spdc_fb.c:3509:		if (fb_data->num_screens < NUM_SCREENS_MIN)
drivers/video/mxc/mxc_spdc_fb.c:3510:			fb_data->num_screens = NUM_SCREENS_MIN;
drivers/video/mxc/mxc_spdc_fb.c:3511:		else if (buf_size * fb_data->num_screens > SZ_16M)
drivers/video/mxc/mxc_spdc_fb.c:3512:			fb_data->num_screens = SZ_16M / buf_size;
drivers/video/mxc/mxc_spdc_fb.c:3514:		fb_data->num_screens = NUM_SCREENS_MIN;
drivers/video/mxc/mxc_spdc_fb.c:3516:	fb_data->map_size = buf_size * fb_data->num_screens;
drivers/video/mxc/mxc_spdc_fb.c:3517:	dev_dbg(&pdev->dev, "memory allocate: %d\n", fb_data->map_size);
drivers/video/mxc/mxc_spdc_fb.c:3522:		dev_err(&pdev->dev, "failed to get memory register\n");
drivers/video/mxc/mxc_spdc_fb.c:3523:		ret = -ENXIO;
drivers/video/mxc/mxc_spdc_fb.c:3527:	mem = request_mem_region(res->start, resource_size(res), pdev->name);
drivers/video/mxc/mxc_spdc_fb.c:3529:		dev_err(&pdev->dev, "failed to get memory region\n");
drivers/video/mxc/mxc_spdc_fb.c:3530:		ret = -ENOENT;
drivers/video/mxc/mxc_spdc_fb.c:3534:	fb_data->hwp = ioremap(res->start, SZ_4K);
drivers/video/mxc/mxc_spdc_fb.c:3535:	if (fb_data->hwp == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3536:		dev_err(&pdev->dev, "ioremap registers failed\n");
drivers/video/mxc/mxc_spdc_fb.c:3537:		ret = -ENOENT;
drivers/video/mxc/mxc_spdc_fb.c:3542:	fb_data->virt_start = dma_alloc_writecombine(&pdev->dev,
drivers/video/mxc/mxc_spdc_fb.c:3543:		fb_data->map_size, &fb_data->phys_start, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3544:	if (fb_data->virt_start == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3545:		dev_err(&pdev->dev, "probe err - dma_alloc for framebuffer\n");
drivers/video/mxc/mxc_spdc_fb.c:3546:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3550:	var_info = &info->var;
drivers/video/mxc/mxc_spdc_fb.c:3551:	var_info->activate = FB_ACTIVATE_TEST;
drivers/video/mxc/mxc_spdc_fb.c:3552:	var_info->bits_per_pixel = fb_data->default_bpp;
drivers/video/mxc/mxc_spdc_fb.c:3553:	var_info->xres = vmode->xres;
drivers/video/mxc/mxc_spdc_fb.c:3554:	var_info->yres = vmode->yres;
drivers/video/mxc/mxc_spdc_fb.c:3555:	var_info->xres_virtual = xres_virt;
drivers/video/mxc/mxc_spdc_fb.c:3556:	var_info->yres_virtual = yres_virt * fb_data->num_screens;
drivers/video/mxc/mxc_spdc_fb.c:3557:	var_info->pixclock = vmode->pixclock;
drivers/video/mxc/mxc_spdc_fb.c:3558:	var_info->left_margin = vmode->left_margin;
drivers/video/mxc/mxc_spdc_fb.c:3559:	var_info->right_margin = vmode->right_margin;
drivers/video/mxc/mxc_spdc_fb.c:3560:	var_info->upper_margin = vmode->upper_margin;
drivers/video/mxc/mxc_spdc_fb.c:3561:	var_info->lower_margin = vmode->lower_margin;
drivers/video/mxc/mxc_spdc_fb.c:3562:	var_info->hsync_len = vmode->hsync_len;
drivers/video/mxc/mxc_spdc_fb.c:3563:	var_info->vsync_len = vmode->vsync_len;
drivers/video/mxc/mxc_spdc_fb.c:3564:	var_info->vmode = FB_VMODE_NONINTERLACED;
drivers/video/mxc/mxc_spdc_fb.c:3566:	switch (fb_data->default_bpp) {
drivers/video/mxc/mxc_spdc_fb.c:3569:		var_info->red.offset = 16;
drivers/video/mxc/mxc_spdc_fb.c:3570:		var_info->red.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:3571:		var_info->green.offset = 8;
drivers/video/mxc/mxc_spdc_fb.c:3572:		var_info->green.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:3573:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3574:		var_info->blue.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:3577:		var_info->red.offset = 11;
drivers/video/mxc/mxc_spdc_fb.c:3578:		var_info->red.length = 5;
drivers/video/mxc/mxc_spdc_fb.c:3579:		var_info->green.offset = 5;
drivers/video/mxc/mxc_spdc_fb.c:3580:		var_info->green.length = 6;
drivers/video/mxc/mxc_spdc_fb.c:3581:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3582:		var_info->blue.length = 5;
drivers/video/mxc/mxc_spdc_fb.c:3585:		var_info->grayscale = GRAYSCALE_8BIT;
drivers/video/mxc/mxc_spdc_fb.c:3587:		var_info->red.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:3588:		var_info->red.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3589:		var_info->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:3590:		var_info->green.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:3591:		var_info->green.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3592:		var_info->green.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:3593:		var_info->blue.length = 8;
drivers/video/mxc/mxc_spdc_fb.c:3594:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3595:		var_info->blue.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:3598:		var_info->grayscale = GRAYSCALE_4BIT;
drivers/video/mxc/mxc_spdc_fb.c:3600:		var_info->red.length = 4;
drivers/video/mxc/mxc_spdc_fb.c:3601:		var_info->red.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3602:		var_info->red.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:3603:		var_info->green.length = 4;
drivers/video/mxc/mxc_spdc_fb.c:3604:		var_info->green.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3605:		var_info->green.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:3606:		var_info->blue.length = 4;
drivers/video/mxc/mxc_spdc_fb.c:3607:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3608:		var_info->blue.msb_right = 0;
drivers/video/mxc/mxc_spdc_fb.c:3611:		dev_err(&pdev->dev, "unsupported bit-width:%d\n",
drivers/video/mxc/mxc_spdc_fb.c:3612:			fb_data->default_bpp);
drivers/video/mxc/mxc_spdc_fb.c:3613:		ret = -EINVAL;
drivers/video/mxc/mxc_spdc_fb.c:3617:	fix_info = &info->fix;
drivers/video/mxc/mxc_spdc_fb.c:3618:	strcpy(fix_info->id, SPDC_DRIVER_NAME);
drivers/video/mxc/mxc_spdc_fb.c:3619:	fix_info->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxc_spdc_fb.c:3620:	fix_info->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxc_spdc_fb.c:3621:	fix_info->xpanstep = 0;
drivers/video/mxc/mxc_spdc_fb.c:3622:	fix_info->ypanstep = 0;
drivers/video/mxc/mxc_spdc_fb.c:3623:	fix_info->ywrapstep = 0;
drivers/video/mxc/mxc_spdc_fb.c:3624:	fix_info->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxc_spdc_fb.c:3625:	fix_info->smem_start = fb_data->phys_start;
drivers/video/mxc/mxc_spdc_fb.c:3626:	fix_info->smem_len = fb_data->map_size;
drivers/video/mxc/mxc_spdc_fb.c:3627:	fix_info->ypanstep = 0;
drivers/video/mxc/mxc_spdc_fb.c:3630:	fb_data->native_width = vmode->xres;
drivers/video/mxc/mxc_spdc_fb.c:3631:	fb_data->native_height = vmode->yres;
drivers/video/mxc/mxc_spdc_fb.c:3632:	info->screen_base = fb_data->virt_start;
drivers/video/mxc/mxc_spdc_fb.c:3633:	info->screen_size = info->fix.smem_len;
drivers/video/mxc/mxc_spdc_fb.c:3634:	info->fbops = &mxc_spdc_fb_ops;
drivers/video/mxc/mxc_spdc_fb.c:3635:	info->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mxc_spdc_fb.c:3636:	info->pseudo_palette = fb_data->pseudo_palette;
drivers/video/mxc/mxc_spdc_fb.c:3637:	info->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mxc_spdc_fb.c:3642:	fb_data->spdc_clk_axi = clk_get(fb_data->dev, "epdc_axi");
drivers/video/mxc/mxc_spdc_fb.c:3643:	if (IS_ERR(fb_data->spdc_clk_axi)) {
drivers/video/mxc/mxc_spdc_fb.c:3644:		dev_err(&pdev->dev, "Unable to get AXI clk."
drivers/video/mxc/mxc_spdc_fb.c:3645:			"err = 0x%x\n", (int)fb_data->spdc_clk_axi);
drivers/video/mxc/mxc_spdc_fb.c:3646:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3649:	fb_data->spdc_clk_pix = clk_get(fb_data->dev, "epdc_pix");
drivers/video/mxc/mxc_spdc_fb.c:3650:	if (IS_ERR(fb_data->spdc_clk_pix)) {
drivers/video/mxc/mxc_spdc_fb.c:3651:		dev_err(&pdev->dev, "Unable to get pix clk."
drivers/video/mxc/mxc_spdc_fb.c:3652:			"err = 0x%x\n", (int)fb_data->spdc_clk_pix);
drivers/video/mxc/mxc_spdc_fb.c:3653:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3660:	INIT_LIST_HEAD(&fb_data->upd_pending_list);
drivers/video/mxc/mxc_spdc_fb.c:3661:	INIT_LIST_HEAD(&fb_data->upd_buf_queue);
drivers/video/mxc/mxc_spdc_fb.c:3662:	INIT_LIST_HEAD(&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_spdc_fb.c:3663:	INIT_LIST_HEAD(&fb_data->upd_buf_preprocess_list);
drivers/video/mxc/mxc_spdc_fb.c:3664:	INIT_LIST_HEAD(&fb_data->full_marker_list);
drivers/video/mxc/mxc_spdc_fb.c:3666:	fb_data->max_num_updates = SPDC_MAX_NUM_UPDATES;
drivers/video/mxc/mxc_spdc_fb.c:3667:	fb_data->max_num_buffers = SPDC_MAX_NUM_BUFFERS;
drivers/video/mxc/mxc_spdc_fb.c:3670:	for (i = 0; i < fb_data->max_num_updates; i++) {
drivers/video/mxc/mxc_spdc_fb.c:3673:			ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3678:		list_add(&upd_list->list, &fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_spdc_fb.c:3682:	fb_data->virt_addr_updbuf =
drivers/video/mxc/mxc_spdc_fb.c:3683:		kzalloc(sizeof(void *) * fb_data->max_num_buffers, GFP_KERNEL);
drivers/video/mxc/mxc_spdc_fb.c:3684:	fb_data->phys_addr_updbuf =
drivers/video/mxc/mxc_spdc_fb.c:3685:		kzalloc(sizeof(dma_addr_t) * fb_data->max_num_buffers,
drivers/video/mxc/mxc_spdc_fb.c:3687:	for (i = 0; i < fb_data->max_num_buffers; i++) {
drivers/video/mxc/mxc_spdc_fb.c:3692:		 * be as big as the full-screen frame buffer
drivers/video/mxc/mxc_spdc_fb.c:3694:		fb_data->virt_addr_updbuf[i] =
drivers/video/mxc/mxc_spdc_fb.c:3695:			dma_alloc_coherent(fb_data->info.device,
drivers/video/mxc/mxc_spdc_fb.c:3696:				fb_data->max_pix_size / 2,
drivers/video/mxc/mxc_spdc_fb.c:3697:				   &fb_data->phys_addr_updbuf[i], GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3698:		if (fb_data->virt_addr_updbuf[i] == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3699:			ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3704:	fb_data->upd_buffer_num = 0;
drivers/video/mxc/mxc_spdc_fb.c:3709:	fb_data->virt_addr_copybuf =
drivers/video/mxc/mxc_spdc_fb.c:3710:	dma_alloc_coherent(fb_data->info.device,
drivers/video/mxc/mxc_spdc_fb.c:3711:			fb_data->max_pix_size / 2,
drivers/video/mxc/mxc_spdc_fb.c:3712:			&fb_data->phys_addr_copybuf, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3713:	if (fb_data->virt_addr_copybuf == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3714:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3721:	fb_data->next_buf_size =
drivers/video/mxc/mxc_spdc_fb.c:3722:		(fb_data->map_size / fb_data->num_screens) >> 1;
drivers/video/mxc/mxc_spdc_fb.c:3723:	fb_data->virt_next_buf =
drivers/video/mxc/mxc_spdc_fb.c:3724:		dma_alloc_coherent(&pdev->dev, fb_data->next_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:3725:				&fb_data->phy_next_buf, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3726:	if (fb_data->virt_next_buf == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3727:		dev_err(&pdev->dev, "Can't allocate mem for next buf!\n");
drivers/video/mxc/mxc_spdc_fb.c:3728:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3732:	fb_data->current_buf_size =
drivers/video/mxc/mxc_spdc_fb.c:3733:		(fb_data->map_size / fb_data->num_screens) >> 1;
drivers/video/mxc/mxc_spdc_fb.c:3734:	fb_data->virt_current_buf =
drivers/video/mxc/mxc_spdc_fb.c:3735:		dma_alloc_coherent(&pdev->dev, fb_data->current_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:3736:				&fb_data->phy_current_buf, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3737:	if (fb_data->virt_current_buf == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3738:		dev_err(&pdev->dev, "Can't allocate mem for current buf!\n");
drivers/video/mxc/mxc_spdc_fb.c:3739:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3743:	fb_data->pre_buf_size =
drivers/video/mxc/mxc_spdc_fb.c:3744:		(fb_data->map_size / fb_data->num_screens) >> 1;
drivers/video/mxc/mxc_spdc_fb.c:3745:	fb_data->virt_pre_buf =
drivers/video/mxc/mxc_spdc_fb.c:3746:		dma_alloc_coherent(&pdev->dev, fb_data->pre_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:3747:				&fb_data->phy_pre_buf, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3748:	if (fb_data->virt_pre_buf == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3749:		dev_err(&pdev->dev, "Can't allocate mem for current buf!\n");
drivers/video/mxc/mxc_spdc_fb.c:3750:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3754:	fb_data->cnt_buf_size = info->var.xres * info->var.yres;
drivers/video/mxc/mxc_spdc_fb.c:3755:	fb_data->virt_cnt_buf =
drivers/video/mxc/mxc_spdc_fb.c:3756:		dma_alloc_coherent(&pdev->dev, fb_data->cnt_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:3757:				&fb_data->phy_cnt_buf, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3758:	if (fb_data->virt_cnt_buf == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3759:		dev_err(&pdev->dev, "Can't allocate mem for current buf!\n");
drivers/video/mxc/mxc_spdc_fb.c:3760:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3764:	fb_data->lut_buf_size = SZ_1M;
drivers/video/mxc/mxc_spdc_fb.c:3765:	fb_data->virt_lut_buf =
drivers/video/mxc/mxc_spdc_fb.c:3766:		dma_alloc_coherent(&pdev->dev, fb_data->lut_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:3767:				&fb_data->phy_lut_buf, GFP_DMA);
drivers/video/mxc/mxc_spdc_fb.c:3768:	if (fb_data->virt_lut_buf == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3769:		dev_err(&pdev->dev, "Can't allocate mem for current buf!\n");
drivers/video/mxc/mxc_spdc_fb.c:3770:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3775:	if (fb_data->pdata->get_pins)
drivers/video/mxc/mxc_spdc_fb.c:3776:		fb_data->pdata->get_pins();
drivers/video/mxc/mxc_spdc_fb.c:3778:	fb_data->hw_ready = false;
drivers/video/mxc/mxc_spdc_fb.c:3779:	fb_data->hw_initializing = false;
drivers/video/mxc/mxc_spdc_fb.c:3785:	fb_data->wv_modes.mode_init = SPDC_WAV_MODE_DEFAULT;
drivers/video/mxc/mxc_spdc_fb.c:3786:	fb_data->wv_modes.mode_du = SPDC_WAV_MODE_2;
drivers/video/mxc/mxc_spdc_fb.c:3787:	fb_data->wv_modes.mode_gc4 = SPDC_WAV_MODE_2;
drivers/video/mxc/mxc_spdc_fb.c:3788:	fb_data->wv_modes.mode_gc8 = SPDC_WAV_MODE_1;
drivers/video/mxc/mxc_spdc_fb.c:3789:	fb_data->wv_modes.mode_gc16 = SPDC_WAV_MODE_1;
drivers/video/mxc/mxc_spdc_fb.c:3790:	fb_data->wv_modes.mode_gc32 = SPDC_WAV_MODE_1;
drivers/video/mxc/mxc_spdc_fb.c:3792:	fb_data->auto_mode = AUTO_UPDATE_MODE_REGION_MODE;
drivers/video/mxc/mxc_spdc_fb.c:3793:	fb_data->upd_scheme = UPDATE_SCHEME_QUEUE_AND_MERGE;
drivers/video/mxc/mxc_spdc_fb.c:3794:	fb_data->spdc_fb_var = *var_info;
drivers/video/mxc/mxc_spdc_fb.c:3795:	fb_data->fb_offset = 0;
drivers/video/mxc/mxc_spdc_fb.c:3797:	fb_data->blank = FB_BLANK_UNBLANK;
drivers/video/mxc/mxc_spdc_fb.c:3798:	fb_data->powering_down = false;
drivers/video/mxc/mxc_spdc_fb.c:3799:	fb_data->power_state = POWER_STATE_OFF;
drivers/video/mxc/mxc_spdc_fb.c:3800:	fb_data->pwrdown_delay = 0;
drivers/video/mxc/mxc_spdc_fb.c:3801:	fb_data->cur_update = NULL;
drivers/video/mxc/mxc_spdc_fb.c:3802:	fb_data->waiting_for_idle = false;
drivers/video/mxc/mxc_spdc_fb.c:3803:	fb_data->order_cnt = 0;
drivers/video/mxc/mxc_spdc_fb.c:3804:	fb_data->waiting_for_wb = false;
drivers/video/mxc/mxc_spdc_fb.c:3805:	fb_data->wait_for_powerdown = false;
drivers/video/mxc/mxc_spdc_fb.c:3806:	fb_data->updates_active = false;
drivers/video/mxc/mxc_spdc_fb.c:3808:	spin_lock_init(&fb_data->lock);
drivers/video/mxc/mxc_spdc_fb.c:3809:	mutex_init(&fb_data->queue_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3810:	mutex_init(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3811:	mutex_init(&fb_data->power_mutex);
drivers/video/mxc/mxc_spdc_fb.c:3812:	init_completion(&fb_data->lut_down);
drivers/video/mxc/mxc_spdc_fb.c:3813:	init_completion(&fb_data->init_finish);
drivers/video/mxc/mxc_spdc_fb.c:3814:	init_completion(&fb_data->update_finish);
drivers/video/mxc/mxc_spdc_fb.c:3815:	INIT_DELAYED_WORK(&fb_data->spdc_done_work, spdc_done_work_func);
drivers/video/mxc/mxc_spdc_fb.c:3817:	fb_data->spdc_submit_workqueue = alloc_workqueue("SPDC Submit",
drivers/video/mxc/mxc_spdc_fb.c:3820:	INIT_WORK(&fb_data->spdc_submit_work, spdc_submit_work_func);
drivers/video/mxc/mxc_spdc_fb.c:3821:	fb_data->spdc_intr_workqueue = alloc_workqueue("SPDC Interrupt",
drivers/video/mxc/mxc_spdc_fb.c:3824:	INIT_WORK(&fb_data->spdc_intr_work, spdc_intr_work_func);
drivers/video/mxc/mxc_spdc_fb.c:3829:		dev_err(&pdev->dev, "cannot get IRQ resource\n");
drivers/video/mxc/mxc_spdc_fb.c:3830:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3833:	fb_data->spdc_irq = res->start;
drivers/video/mxc/mxc_spdc_fb.c:3834:	ret = request_irq(fb_data->spdc_irq, mxc_spdc_irq_handler, 0,
drivers/video/mxc/mxc_spdc_fb.c:3837:		dev_err(&pdev->dev, "request_irq (%d) failed with error %d\n",
drivers/video/mxc/mxc_spdc_fb.c:3838:			fb_data->spdc_irq, ret);
drivers/video/mxc/mxc_spdc_fb.c:3839:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3844:	info->fbdefio = &mxc_spdc_fb_defio;
drivers/video/mxc/mxc_spdc_fb.c:3850:	fb_data->display_regulator = regulator_get(NULL, "DISPLAY");
drivers/video/mxc/mxc_spdc_fb.c:3851:	if (IS_ERR(fb_data->display_regulator)) {
drivers/video/mxc/mxc_spdc_fb.c:3852:		dev_err(&pdev->dev, "Unable to get display PMIC regulator."
drivers/video/mxc/mxc_spdc_fb.c:3853:			"err = 0x%x\n", (int)fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3854:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3857:	fb_data->vcom_regulator = regulator_get(NULL, "VCOM");
drivers/video/mxc/mxc_spdc_fb.c:3858:	if (IS_ERR(fb_data->vcom_regulator)) {
drivers/video/mxc/mxc_spdc_fb.c:3859:		regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3860:		dev_err(&pdev->dev, "Unable to get VCOM regulator."
drivers/video/mxc/mxc_spdc_fb.c:3861:			"err = 0x%x\n", (int)fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3862:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3865:	fb_data->v3p3_regulator = regulator_get(NULL, "V3P3");
drivers/video/mxc/mxc_spdc_fb.c:3866:	if (IS_ERR(fb_data->v3p3_regulator)) {
drivers/video/mxc/mxc_spdc_fb.c:3867:		regulator_put(fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3868:		regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3869:		dev_err(&pdev->dev, "Unable to get V3P3 regulator."
drivers/video/mxc/mxc_spdc_fb.c:3870:			"err = 0x%x\n", (int)fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3871:		ret = -ENODEV;
drivers/video/mxc/mxc_spdc_fb.c:3879:	pxp_conf = &fb_data->pxp_conf;
drivers/video/mxc/mxc_spdc_fb.c:3880:	proc_data = &pxp_conf->proc_data;
drivers/video/mxc/mxc_spdc_fb.c:3882:	/* Initialize non-channel-specific PxP parameters */
drivers/video/mxc/mxc_spdc_fb.c:3883:	proc_data->drect.left = proc_data->srect.left = 0;
drivers/video/mxc/mxc_spdc_fb.c:3884:	proc_data->drect.top = proc_data->srect.top = 0;
drivers/video/mxc/mxc_spdc_fb.c:3885:	proc_data->drect.width = fb_data->info.var.xres;
drivers/video/mxc/mxc_spdc_fb.c:3886:	proc_data->srect.width = fb_data->info.var.xres;
drivers/video/mxc/mxc_spdc_fb.c:3887:	proc_data->drect.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_spdc_fb.c:3888:	proc_data->srect.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_spdc_fb.c:3889:	proc_data->scaling = 0;
drivers/video/mxc/mxc_spdc_fb.c:3890:	proc_data->hflip = 0;
drivers/video/mxc/mxc_spdc_fb.c:3891:	proc_data->vflip = 0;
drivers/video/mxc/mxc_spdc_fb.c:3892:	proc_data->rotate = 0;
drivers/video/mxc/mxc_spdc_fb.c:3893:	proc_data->bgcolor = 0;
drivers/video/mxc/mxc_spdc_fb.c:3894:	proc_data->overlay_state = 0;
drivers/video/mxc/mxc_spdc_fb.c:3895:	proc_data->lut_transform = PXP_LUT_NONE;
drivers/video/mxc/mxc_spdc_fb.c:3896:	proc_data->lut_map = NULL;
drivers/video/mxc/mxc_spdc_fb.c:3899:	 * We initially configure PxP for RGB->YUV conversion,
drivers/video/mxc/mxc_spdc_fb.c:3907:	pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_spdc_fb.c:3908:	pxp_conf->s0_param.width = fb_data->info.var.xres_virtual;
drivers/video/mxc/mxc_spdc_fb.c:3909:	pxp_conf->s0_param.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_spdc_fb.c:3910:	pxp_conf->s0_param.color_key = -1;
drivers/video/mxc/mxc_spdc_fb.c:3911:	pxp_conf->s0_param.color_key_enable = false;
drivers/video/mxc/mxc_spdc_fb.c:3918:		pxp_conf->ol_param[i].combine_enable = false;
drivers/video/mxc/mxc_spdc_fb.c:3919:		pxp_conf->ol_param[i].width = 0;
drivers/video/mxc/mxc_spdc_fb.c:3920:		pxp_conf->ol_param[i].height = 0;
drivers/video/mxc/mxc_spdc_fb.c:3921:		pxp_conf->ol_param[i].pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_spdc_fb.c:3922:		pxp_conf->ol_param[i].color_key_enable = false;
drivers/video/mxc/mxc_spdc_fb.c:3923:		pxp_conf->ol_param[i].color_key = -1;
drivers/video/mxc/mxc_spdc_fb.c:3924:		pxp_conf->ol_param[i].global_alpha_enable = false;
drivers/video/mxc/mxc_spdc_fb.c:3925:		pxp_conf->ol_param[i].global_alpha = 0;
drivers/video/mxc/mxc_spdc_fb.c:3926:		pxp_conf->ol_param[i].local_alpha_enable = false;
drivers/video/mxc/mxc_spdc_fb.c:3931:	 * Output is Y-only greyscale
drivers/video/mxc/mxc_spdc_fb.c:3934:	pxp_conf->out_param.width = fb_data->info.var.xres;
drivers/video/mxc/mxc_spdc_fb.c:3935:	pxp_conf->out_param.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_spdc_fb.c:3936:	pxp_conf->out_param.pixel_fmt = PXP_PIX_FMT_GY04;
drivers/video/mxc/mxc_spdc_fb.c:3937:	pxp_conf->out_param.stride = pxp_conf->out_param.width;
drivers/video/mxc/mxc_spdc_fb.c:3939:	/* Initialize color map for conversion of 8-bit gray pixels */
drivers/video/mxc/mxc_spdc_fb.c:3940:	fb_data->pxp_conf.proc_data.lut_map = kmalloc(256, GFP_KERNEL);
drivers/video/mxc/mxc_spdc_fb.c:3941:	if (fb_data->pxp_conf.proc_data.lut_map == NULL) {
drivers/video/mxc/mxc_spdc_fb.c:3942:		dev_err(&pdev->dev, "Can't allocate mem for lut map!\n");
drivers/video/mxc/mxc_spdc_fb.c:3943:		ret = -ENOMEM;
drivers/video/mxc/mxc_spdc_fb.c:3947:		fb_data->pxp_conf.proc_data.lut_map[i] = i;
drivers/video/mxc/mxc_spdc_fb.c:3949:	fb_data->pxp_conf.proc_data.lut_map_updated = true;
drivers/video/mxc/mxc_spdc_fb.c:3955:	fb_data->pxp_chan = NULL;
drivers/video/mxc/mxc_spdc_fb.c:3957:	/* Initialize Scatter-gather list containing 2 buffer addresses. */
drivers/video/mxc/mxc_spdc_fb.c:3958:	sg = fb_data->sg;
drivers/video/mxc/mxc_spdc_fb.c:3966:	sg_dma_address(&sg[0]) = info->fix.smem_start;
drivers/video/mxc/mxc_spdc_fb.c:3967:	sg_set_page(&sg[0], virt_to_page(info->screen_base),
drivers/video/mxc/mxc_spdc_fb.c:3968:		info->fix.smem_len, offset_in_page(info->screen_base));
drivers/video/mxc/mxc_spdc_fb.c:3973:		dev_err(&pdev->dev,
drivers/video/mxc/mxc_spdc_fb.c:3978:	ret = sysfs_create_group(&info->device->kobj, &spdc_attr_group);
drivers/video/mxc/mxc_spdc_fb.c:3980:		dev_err(&pdev->dev, "Unable to create file from fb_attrs\n");
drivers/video/mxc/mxc_spdc_fb.c:3994:	kfree(fb_data->pxp_conf.proc_data.lut_map);
drivers/video/mxc/mxc_spdc_fb.c:3996:	regulator_put(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_spdc_fb.c:3998:	regulator_put(fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:4000:	regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:4002:	free_irq(fb_data->spdc_irq, fb_data);
drivers/video/mxc/mxc_spdc_fb.c:4004:	dma_free_coherent(&pdev->dev, fb_data->lut_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4005:		fb_data->virt_lut_buf, fb_data->phy_lut_buf);
drivers/video/mxc/mxc_spdc_fb.c:4007:	dma_free_coherent(&pdev->dev, fb_data->cnt_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4008:		fb_data->virt_cnt_buf, fb_data->phy_cnt_buf);
drivers/video/mxc/mxc_spdc_fb.c:4010:	dma_free_coherent(&pdev->dev, fb_data->pre_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4011:		fb_data->virt_pre_buf, fb_data->phy_pre_buf);
drivers/video/mxc/mxc_spdc_fb.c:4013:	dma_free_coherent(&pdev->dev, fb_data->current_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4014:		fb_data->virt_current_buf, fb_data->phy_current_buf);
drivers/video/mxc/mxc_spdc_fb.c:4016:	dma_free_coherent(&pdev->dev, fb_data->next_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4017:		fb_data->virt_next_buf, fb_data->phy_next_buf);
drivers/video/mxc/mxc_spdc_fb.c:4019:	dma_free_writecombine(&pdev->dev, fb_data->max_pix_size / 2,
drivers/video/mxc/mxc_spdc_fb.c:4020:		fb_data->virt_addr_copybuf, fb_data->phys_addr_copybuf);
drivers/video/mxc/mxc_spdc_fb.c:4022:	for (i = 0; i < fb_data->max_num_buffers; i++)
drivers/video/mxc/mxc_spdc_fb.c:4023:		if (fb_data->virt_addr_updbuf[i] != NULL)
drivers/video/mxc/mxc_spdc_fb.c:4024:			dma_free_writecombine(&pdev->dev,
drivers/video/mxc/mxc_spdc_fb.c:4025:			fb_data->max_pix_size / 2, fb_data->virt_addr_updbuf[i],
drivers/video/mxc/mxc_spdc_fb.c:4026:			fb_data->phys_addr_updbuf[i]);
drivers/video/mxc/mxc_spdc_fb.c:4027:	if (fb_data->virt_addr_updbuf != NULL)
drivers/video/mxc/mxc_spdc_fb.c:4028:		kfree(fb_data->virt_addr_updbuf);
drivers/video/mxc/mxc_spdc_fb.c:4029:	if (fb_data->phys_addr_updbuf != NULL)
drivers/video/mxc/mxc_spdc_fb.c:4030:		kfree(fb_data->phys_addr_updbuf);
drivers/video/mxc/mxc_spdc_fb.c:4032:	list_for_each_entry_safe(plist, temp_list, &fb_data->upd_buf_free_list,
drivers/video/mxc/mxc_spdc_fb.c:4034:		list_del(&plist->list);
drivers/video/mxc/mxc_spdc_fb.c:4038:	dma_free_writecombine(&pdev->dev,
drivers/video/mxc/mxc_spdc_fb.c:4039:	fb_data->map_size, fb_data->virt_start, fb_data->phys_start);
drivers/video/mxc/mxc_spdc_fb.c:4041:	iounmap(fb_data->hwp);
drivers/video/mxc/mxc_spdc_fb.c:4045:	fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mxc_spdc_fb.c:4056:	struct fb_info *info = &fb_data->info;
drivers/video/mxc/mxc_spdc_fb.c:4059:	mxc_spdc_fb_blank(FB_BLANK_POWERDOWN, &fb_data->info);
drivers/video/mxc/mxc_spdc_fb.c:4061:	flush_workqueue(fb_data->spdc_submit_workqueue);
drivers/video/mxc/mxc_spdc_fb.c:4062:	destroy_workqueue(fb_data->spdc_submit_workqueue);
drivers/video/mxc/mxc_spdc_fb.c:4064:	regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_spdc_fb.c:4065:	regulator_put(fb_data->vcom_regulator);
drivers/video/mxc/mxc_spdc_fb.c:4066:	regulator_put(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_spdc_fb.c:4068:	for (i = 0; i < fb_data->max_num_buffers; i++)
drivers/video/mxc/mxc_spdc_fb.c:4069:		if (fb_data->virt_addr_updbuf[i] != NULL)
drivers/video/mxc/mxc_spdc_fb.c:4070:			dma_free_writecombine(&pdev->dev,
drivers/video/mxc/mxc_spdc_fb.c:4071:				fb_data->max_pix_size,
drivers/video/mxc/mxc_spdc_fb.c:4072:				fb_data->virt_addr_updbuf[i],
drivers/video/mxc/mxc_spdc_fb.c:4073:				fb_data->phys_addr_updbuf[i]);
drivers/video/mxc/mxc_spdc_fb.c:4074:	if (fb_data->virt_addr_updbuf != NULL)
drivers/video/mxc/mxc_spdc_fb.c:4075:		kfree(fb_data->virt_addr_updbuf);
drivers/video/mxc/mxc_spdc_fb.c:4076:	if (fb_data->phys_addr_updbuf != NULL)
drivers/video/mxc/mxc_spdc_fb.c:4077:		kfree(fb_data->phys_addr_updbuf);
drivers/video/mxc/mxc_spdc_fb.c:4080:	dma_free_writecombine(&pdev->dev, fb_data->max_pix_size / 2,
drivers/video/mxc/mxc_spdc_fb.c:4081:		fb_data->virt_addr_copybuf, fb_data->phys_addr_copybuf);
drivers/video/mxc/mxc_spdc_fb.c:4084:			&fb_data->upd_buf_free_list,
drivers/video/mxc/mxc_spdc_fb.c:4086:		list_del(&plist->list);
drivers/video/mxc/mxc_spdc_fb.c:4091:	fb_deferred_io_cleanup(&fb_data->info);
drivers/video/mxc/mxc_spdc_fb.c:4095:	dma_free_writecombine(&pdev->dev, fb_data->map_size,
drivers/video/mxc/mxc_spdc_fb.c:4096:			info->screen_base, fb_data->phys_start);
drivers/video/mxc/mxc_spdc_fb.c:4099:	dma_free_coherent(&pdev->dev, fb_data->next_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4100:		fb_data->virt_next_buf, fb_data->phy_next_buf);
drivers/video/mxc/mxc_spdc_fb.c:4101:	dma_free_coherent(&pdev->dev, fb_data->current_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4102:		fb_data->virt_current_buf, fb_data->phy_current_buf);
drivers/video/mxc/mxc_spdc_fb.c:4103:	dma_free_coherent(&pdev->dev, fb_data->pre_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4104:		fb_data->virt_pre_buf, fb_data->phy_pre_buf);
drivers/video/mxc/mxc_spdc_fb.c:4105:	dma_free_coherent(&pdev->dev, fb_data->cnt_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4106:		fb_data->virt_cnt_buf, fb_data->phy_cnt_buf);
drivers/video/mxc/mxc_spdc_fb.c:4107:	dma_free_coherent(&pdev->dev, fb_data->lut_buf_size,
drivers/video/mxc/mxc_spdc_fb.c:4108:		fb_data->virt_lut_buf, fb_data->phy_lut_buf);
drivers/video/mxc/mxc_spdc_fb.c:4110:	sysfs_remove_group(&info->device->kobj, &spdc_attr_group);
drivers/video/mxc/mxc_spdc_fb.c:4113:	if (fb_data->pdata->put_pins)
drivers/video/mxc/mxc_spdc_fb.c:4114:		fb_data->pdata->put_pins();
drivers/video/mxc/mxc_spdc_fb.c:4116:	free_irq(fb_data->spdc_irq, fb_data);
drivers/video/mxc/mxc_spdc_fb.c:4117:	iounmap(fb_data->hwp);
drivers/video/mxc/mxc_spdc_fb.c:4119:	fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mxc_spdc_fb.c:4134:	data->pwrdown_delay = FB_POWERDOWN_DISABLE;
drivers/video/mxc/mxc_spdc_fb.c:4135:	ret = mxc_spdc_fb_blank(FB_BLANK_POWERDOWN, &data->info);
drivers/video/mxc/mxc_spdc_fb.c:4144:	mxc_spdc_fb_blank(FB_BLANK_UNBLANK, &data->info);
drivers/video/mxc/mxcfb_modedb.c:2: * Copyright 2007-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_modedb.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxcfb_modedb.c:20:	 "Sharp-QVGA", 60, 240, 320, 185925, 9, 16, 7, 9, 1, 1,
drivers/video/mxc/mxcfb_modedb.c:27:	 "Sharp-CLI", 60, 240, 33, 185925, 9, 16, 7, 9 + 287, 1, 1,
drivers/video/mxc/mxcfb_modedb.c:34:	 "NEC-VGA", 60, 640, 480, 38255, 144, 0, 34, 40, 1, 1,
drivers/video/mxc/mxcfb_modedb.c:40:	 "CPT-VGA", 60, 640, 480, 39683, 45, 114, 33, 11, 1, 1,
drivers/video/mxc/mxcfb_modedb.c:46:	 "TV-NTSC", 60, 640, 480, 37538,
drivers/video/mxc/mxcfb_modedb.c:47:	 38, 858 - 640 - 38 - 3,
drivers/video/mxc/mxcfb_modedb.c:48:	 36, 518 - 480 - 36 - 1,
drivers/video/mxc/mxcfb_modedb.c:55:	 "TV-PAL", 50, 640, 480, 37538,
drivers/video/mxc/mxcfb_modedb.c:56:	 38, 960 - 640 - 38 - 32,
drivers/video/mxc/mxcfb_modedb.c:57:	 32, 555 - 480 - 32 - 3,
drivers/video/mxc/mxcfb_modedb.c:64:	 "TV-VGA", 60, 640, 480, 40574, 35, 45, 9, 1, 46, 5,
drivers/video/mxc/mxc_ipuv3_fb.c:2: * Copyright 2004-2013 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxc_ipuv3_fb.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxc_ipuv3_fb.c:41:#include <linux/dma-mapping.h>
drivers/video/mxc/mxc_ipuv3_fb.c:49:#include <asm/mach-types.h>
drivers/video/mxc/mxc_ipuv3_fb.c:50:#include <mach/ipu-v3.h>
drivers/video/mxc/mxc_ipuv3_fb.c:174:	int i, ret = -1;
drivers/video/mxc/mxc_ipuv3_fb.c:178:			var->red    = mxcfb_pfmts[i].red;
drivers/video/mxc/mxc_ipuv3_fb.c:179:			var->green  = mxcfb_pfmts[i].green;
drivers/video/mxc/mxc_ipuv3_fb.c:180:			var->blue   = mxcfb_pfmts[i].blue;
drivers/video/mxc/mxc_ipuv3_fb.c:181:			var->transp = mxcfb_pfmts[i].transp;
drivers/video/mxc/mxc_ipuv3_fb.c:182:			var->bits_per_pixel = mxcfb_pfmts[i].bpp;
drivers/video/mxc/mxc_ipuv3_fb.c:198:		return -1;
drivers/video/mxc/mxc_ipuv3_fb.c:203:	int i, ret = -1;
drivers/video/mxc/mxc_ipuv3_fb.c:206:		if (bitfield_is_equal(var->red, mxcfb_pfmts[i].red) &&
drivers/video/mxc/mxc_ipuv3_fb.c:207:		    bitfield_is_equal(var->green, mxcfb_pfmts[i].green) &&
drivers/video/mxc/mxc_ipuv3_fb.c:208:		    bitfield_is_equal(var->blue, mxcfb_pfmts[i].blue) &&
drivers/video/mxc/mxc_ipuv3_fb.c:209:		    bitfield_is_equal(var->transp, mxcfb_pfmts[i].transp) &&
drivers/video/mxc/mxc_ipuv3_fb.c:210:		    var->bits_per_pixel == mxcfb_pfmts[i].bpp) {
drivers/video/mxc/mxc_ipuv3_fb.c:223:	if (fbi->var.nonstd)
drivers/video/mxc/mxc_ipuv3_fb.c:224:		return fbi->var.nonstd;
drivers/video/mxc/mxc_ipuv3_fb.c:227:		if (bitfield_is_equal(fbi->var.red, mxcfb_pfmts[i].red) &&
drivers/video/mxc/mxc_ipuv3_fb.c:228:		    bitfield_is_equal(fbi->var.green, mxcfb_pfmts[i].green) &&
drivers/video/mxc/mxc_ipuv3_fb.c:229:		    bitfield_is_equal(fbi->var.blue, mxcfb_pfmts[i].blue) &&
drivers/video/mxc/mxc_ipuv3_fb.c:230:		    bitfield_is_equal(fbi->var.transp, mxcfb_pfmts[i].transp)) {
drivers/video/mxc/mxc_ipuv3_fb.c:237:		dev_err(fbi->device, "cannot get pixel format\n");
drivers/video/mxc/mxc_ipuv3_fb.c:250:			((struct mxcfb_info *)(registered_fb[i]->par));
drivers/video/mxc/mxc_ipuv3_fb.c:252:		if ((mxc_fbi->ipu_ch == ipu_ch) &&
drivers/video/mxc/mxc_ipuv3_fb.c:253:			(mxc_fbi->ipu_id == ipu_id)) {
drivers/video/mxc/mxc_ipuv3_fb.c:274:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mxc_ipuv3_fb.c:275:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mxc_ipuv3_fb.c:277:	fix->line_length = var->xres_virtual * var->bits_per_pixel / 8;
drivers/video/mxc/mxc_ipuv3_fb.c:279:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxc_ipuv3_fb.c:280:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxc_ipuv3_fb.c:281:	fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxc_ipuv3_fb.c:282:	fix->xpanstep = 1;
drivers/video/mxc/mxc_ipuv3_fb.c:283:	fix->ywrapstep = 1;
drivers/video/mxc/mxc_ipuv3_fb.c:284:	fix->ypanstep = 1;
drivers/video/mxc/mxc_ipuv3_fb.c:292:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:296:	if (mxc_fbi->ipu_ch == MEM_DC_SYNC) {
drivers/video/mxc/mxc_ipuv3_fb.c:297:		params.mem_dc_sync.di = mxc_fbi->ipu_di;
drivers/video/mxc/mxc_ipuv3_fb.c:298:		if (fbi->var.vmode & FB_VMODE_INTERLACED)
drivers/video/mxc/mxc_ipuv3_fb.c:300:		params.mem_dc_sync.out_pixel_fmt = mxc_fbi->ipu_di_pix_fmt;
drivers/video/mxc/mxc_ipuv3_fb.c:303:		params.mem_dp_bg_sync.di = mxc_fbi->ipu_di;
drivers/video/mxc/mxc_ipuv3_fb.c:304:		if (fbi->var.vmode & FB_VMODE_INTERLACED)
drivers/video/mxc/mxc_ipuv3_fb.c:306:		params.mem_dp_bg_sync.out_pixel_fmt = mxc_fbi->ipu_di_pix_fmt;
drivers/video/mxc/mxc_ipuv3_fb.c:308:		if (mxc_fbi->alpha_chan_en)
drivers/video/mxc/mxc_ipuv3_fb.c:311:	ipu_init_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch, &params);
drivers/video/mxc/mxc_ipuv3_fb.c:319:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:332:		fb_stride = fbi->var.xres_virtual;
drivers/video/mxc/mxc_ipuv3_fb.c:335:		fb_stride = fbi->fix.line_length;
drivers/video/mxc/mxc_ipuv3_fb.c:338:	base = fbi->fix.smem_start;
drivers/video/mxc/mxc_ipuv3_fb.c:339:	fr_xoff = fbi->var.xoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:340:	fr_w = fbi->var.xres_virtual;
drivers/video/mxc/mxc_ipuv3_fb.c:341:	if (!(fbi->var.vmode & FB_VMODE_YWRAP)) {
drivers/video/mxc/mxc_ipuv3_fb.c:342:		dev_dbg(fbi->device, "Y wrap disabled\n");
drivers/video/mxc/mxc_ipuv3_fb.c:343:		fr_yoff = fbi->var.yoffset % fbi->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:344:		fr_h = fbi->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:345:		base += fbi->fix.line_length * fbi->var.yres *
drivers/video/mxc/mxc_ipuv3_fb.c:346:			(fbi->var.yoffset / fbi->var.yres);
drivers/video/mxc/mxc_ipuv3_fb.c:348:		dev_dbg(fbi->device, "Y wrap enabled\n");
drivers/video/mxc/mxc_ipuv3_fb.c:349:		fr_yoff = fbi->var.yoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:350:		fr_h = fbi->var.yres_virtual;
drivers/video/mxc/mxc_ipuv3_fb.c:354:	mxc_fbi->cur_ipu_buf = 2;
drivers/video/mxc/mxc_ipuv3_fb.c:355:	init_completion(&mxc_fbi->flip_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:360:	 * so we call complete() for both mxc_fbi->flip_complete
drivers/video/mxc/mxc_ipuv3_fb.c:361:	 * and mxc_fbi->alpha_flip_complete.
drivers/video/mxc/mxc_ipuv3_fb.c:363:	complete(&mxc_fbi->flip_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:364:	if (mxc_fbi->alpha_chan_en) {
drivers/video/mxc/mxc_ipuv3_fb.c:365:		mxc_fbi->cur_ipu_alpha_buf = 1;
drivers/video/mxc/mxc_ipuv3_fb.c:366:		init_completion(&mxc_fbi->alpha_flip_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:367:		complete(&mxc_fbi->alpha_flip_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:370:	retval = ipu_init_channel_buffer(mxc_fbi->ipu,
drivers/video/mxc/mxc_ipuv3_fb.c:371:					 mxc_fbi->ipu_ch, IPU_INPUT_BUFFER,
drivers/video/mxc/mxc_ipuv3_fb.c:373:					 fbi->var.xres, fbi->var.yres,
drivers/video/mxc/mxc_ipuv3_fb.c:375:					 fbi->var.rotate,
drivers/video/mxc/mxc_ipuv3_fb.c:378:					 fbi->var.accel_flags &
drivers/video/mxc/mxc_ipuv3_fb.c:382:		dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:388:	ipu_update_channel_offset(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:398:	if (mxc_fbi->alpha_chan_en) {
drivers/video/mxc/mxc_ipuv3_fb.c:399:		retval = ipu_init_channel_buffer(mxc_fbi->ipu,
drivers/video/mxc/mxc_ipuv3_fb.c:400:						 mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:403:						 fbi->var.xres, fbi->var.yres,
drivers/video/mxc/mxc_ipuv3_fb.c:404:						 fbi->var.xres,
drivers/video/mxc/mxc_ipuv3_fb.c:405:						 fbi->var.rotate,
drivers/video/mxc/mxc_ipuv3_fb.c:406:						 mxc_fbi->alpha_phy_addr1,
drivers/video/mxc/mxc_ipuv3_fb.c:407:						 mxc_fbi->alpha_phy_addr0,
drivers/video/mxc/mxc_ipuv3_fb.c:411:			dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:422:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:424:	if ((fbi->var.activate & FB_ACTIVATE_FORCE) &&
drivers/video/mxc/mxc_ipuv3_fb.c:425:	    (fbi->var.activate & FB_ACTIVATE_MASK) == FB_ACTIVATE_NOW)
drivers/video/mxc/mxc_ipuv3_fb.c:432:	mxc_fbi->cur_var.xoffset = fbi->var.xoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:433:	mxc_fbi->cur_var.yoffset = fbi->var.yoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:435:	return !!memcmp(&mxc_fbi->cur_var, &fbi->var,
drivers/video/mxc/mxc_ipuv3_fb.c:449:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:456:	if (mxc_fbi->ovfbi)
drivers/video/mxc/mxc_ipuv3_fb.c:457:		mxc_fbi_fg = (struct mxcfb_info *)mxc_fbi->ovfbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:459:	if (mxc_fbi->ovfbi && mxc_fbi_fg)
drivers/video/mxc/mxc_ipuv3_fb.c:460:		if (mxc_fbi_fg->next_blank == FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_ipuv3_fb.c:466:	dev_dbg(fbi->device, "Reconfiguring framebuffer\n");
drivers/video/mxc/mxc_ipuv3_fb.c:468:	if (fbi->var.xres == 0 || fbi->var.yres == 0)
drivers/video/mxc/mxc_ipuv3_fb.c:473:						mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:476:			dev_err(fbi->device, "Get overlay pos failed, dispdrv:%s.\n",
drivers/video/mxc/mxc_ipuv3_fb.c:477:					mxc_fbi->dispdrv->drv->name);
drivers/video/mxc/mxc_ipuv3_fb.c:479:		ipu_clear_irq(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:480:		ipu_disable_irq(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:481:		ipu_clear_irq(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:482:		ipu_disable_irq(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:483:		ipu_disable_channel(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch, true);
drivers/video/mxc/mxc_ipuv3_fb.c:484:		ipu_uninit_channel(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:487:	ipu_clear_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:488:	ipu_disable_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:489:	ipu_clear_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:490:	ipu_disable_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:491:	ipu_disable_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch, true);
drivers/video/mxc/mxc_ipuv3_fb.c:492:	ipu_uninit_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:498:	if (mxc_fbi->first_set_par && mxc_fbi->late_init)
drivers/video/mxc/mxc_ipuv3_fb.c:499:		ipu_disable_hsp_clk(mxc_fbi->ipu);
drivers/video/mxc/mxc_ipuv3_fb.c:503:	mem_len = fbi->var.yres_virtual * fbi->fix.line_length;
drivers/video/mxc/mxc_ipuv3_fb.c:504:	if (!fbi->fix.smem_start || (mem_len > fbi->fix.smem_len)) {
drivers/video/mxc/mxc_ipuv3_fb.c:505:		if (fbi->fix.smem_start)
drivers/video/mxc/mxc_ipuv3_fb.c:509:			return -ENOMEM;
drivers/video/mxc/mxc_ipuv3_fb.c:512:	if (mxc_fbi->first_set_par) {
drivers/video/mxc/mxc_ipuv3_fb.c:517:		if (mxc_fbi->late_init)
drivers/video/mxc/mxc_ipuv3_fb.c:518:			memset((char *)fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxc_ipuv3_fb.c:520:		mxc_fbi->first_set_par = false;
drivers/video/mxc/mxc_ipuv3_fb.c:523:	if (mxc_fbi->alpha_chan_en) {
drivers/video/mxc/mxc_ipuv3_fb.c:524:		alpha_mem_len = fbi->var.xres * fbi->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:525:		if ((!mxc_fbi->alpha_phy_addr0 && !mxc_fbi->alpha_phy_addr1) ||
drivers/video/mxc/mxc_ipuv3_fb.c:526:		    (alpha_mem_len > mxc_fbi->alpha_mem_len)) {
drivers/video/mxc/mxc_ipuv3_fb.c:527:			if (mxc_fbi->alpha_phy_addr0)
drivers/video/mxc/mxc_ipuv3_fb.c:528:				dma_free_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:529:						  mxc_fbi->alpha_mem_len,
drivers/video/mxc/mxc_ipuv3_fb.c:530:						  mxc_fbi->alpha_virt_addr0,
drivers/video/mxc/mxc_ipuv3_fb.c:531:						  mxc_fbi->alpha_phy_addr0);
drivers/video/mxc/mxc_ipuv3_fb.c:532:			if (mxc_fbi->alpha_phy_addr1)
drivers/video/mxc/mxc_ipuv3_fb.c:533:				dma_free_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:534:						  mxc_fbi->alpha_mem_len,
drivers/video/mxc/mxc_ipuv3_fb.c:535:						  mxc_fbi->alpha_virt_addr1,
drivers/video/mxc/mxc_ipuv3_fb.c:536:						  mxc_fbi->alpha_phy_addr1);
drivers/video/mxc/mxc_ipuv3_fb.c:538:			mxc_fbi->alpha_virt_addr0 =
drivers/video/mxc/mxc_ipuv3_fb.c:539:					dma_alloc_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:541:						  &mxc_fbi->alpha_phy_addr0,
drivers/video/mxc/mxc_ipuv3_fb.c:544:			mxc_fbi->alpha_virt_addr1 =
drivers/video/mxc/mxc_ipuv3_fb.c:545:					dma_alloc_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:547:						  &mxc_fbi->alpha_phy_addr1,
drivers/video/mxc/mxc_ipuv3_fb.c:549:			if (mxc_fbi->alpha_virt_addr0 == NULL ||
drivers/video/mxc/mxc_ipuv3_fb.c:550:			    mxc_fbi->alpha_virt_addr1 == NULL) {
drivers/video/mxc/mxc_ipuv3_fb.c:551:				dev_err(fbi->device, "mxcfb: dma alloc for"
drivers/video/mxc/mxc_ipuv3_fb.c:553:				if (mxc_fbi->alpha_virt_addr0)
drivers/video/mxc/mxc_ipuv3_fb.c:554:					dma_free_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:555:						  mxc_fbi->alpha_mem_len,
drivers/video/mxc/mxc_ipuv3_fb.c:556:						  mxc_fbi->alpha_virt_addr0,
drivers/video/mxc/mxc_ipuv3_fb.c:557:						  mxc_fbi->alpha_phy_addr0);
drivers/video/mxc/mxc_ipuv3_fb.c:558:				if (mxc_fbi->alpha_virt_addr1)
drivers/video/mxc/mxc_ipuv3_fb.c:559:					dma_free_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:560:						  mxc_fbi->alpha_mem_len,
drivers/video/mxc/mxc_ipuv3_fb.c:561:						  mxc_fbi->alpha_virt_addr1,
drivers/video/mxc/mxc_ipuv3_fb.c:562:						  mxc_fbi->alpha_phy_addr1);
drivers/video/mxc/mxc_ipuv3_fb.c:563:				return -ENOMEM;
drivers/video/mxc/mxc_ipuv3_fb.c:565:			mxc_fbi->alpha_mem_len = alpha_mem_len;
drivers/video/mxc/mxc_ipuv3_fb.c:569:	if (mxc_fbi->next_blank != FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_ipuv3_fb.c:572:	if (mxc_fbi->dispdrv && mxc_fbi->dispdrv->drv->setup) {
drivers/video/mxc/mxc_ipuv3_fb.c:573:		retval = mxc_fbi->dispdrv->drv->setup(mxc_fbi->dispdrv, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:575:			dev_err(fbi->device, "setup error, dispdrv:%s.\n",
drivers/video/mxc/mxc_ipuv3_fb.c:576:					mxc_fbi->dispdrv->drv->name);
drivers/video/mxc/mxc_ipuv3_fb.c:577:			return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:583:		_setup_disp_channel1(mxc_fbi->ovfbi);
drivers/video/mxc/mxc_ipuv3_fb.c:585:	if (!mxc_fbi->overlay) {
drivers/video/mxc/mxc_ipuv3_fb.c:589:		if (fbi->var.vmode & FB_VMODE_INTERLACED)
drivers/video/mxc/mxc_ipuv3_fb.c:591:		out_pixel_fmt = mxc_fbi->ipu_di_pix_fmt;
drivers/video/mxc/mxc_ipuv3_fb.c:592:		if (fbi->var.vmode & FB_VMODE_ODD_FLD_FIRST) /* PAL */
drivers/video/mxc/mxc_ipuv3_fb.c:594:		if (mxc_fbi->ipu_int_clk)
drivers/video/mxc/mxc_ipuv3_fb.c:596:		if (fbi->var.sync & FB_SYNC_HOR_HIGH_ACT)
drivers/video/mxc/mxc_ipuv3_fb.c:598:		if (fbi->var.sync & FB_SYNC_VERT_HIGH_ACT)
drivers/video/mxc/mxc_ipuv3_fb.c:600:		if (!(fbi->var.sync & FB_SYNC_CLK_LAT_FALL))
drivers/video/mxc/mxc_ipuv3_fb.c:602:		if (fbi->var.sync & FB_SYNC_DATA_INVERT)
drivers/video/mxc/mxc_ipuv3_fb.c:604:		if (!(fbi->var.sync & FB_SYNC_OE_LOW_ACT))
drivers/video/mxc/mxc_ipuv3_fb.c:606:		if (fbi->var.sync & FB_SYNC_CLK_IDLE_EN)
drivers/video/mxc/mxc_ipuv3_fb.c:609:		dev_dbg(fbi->device, "pixclock = %ul Hz\n",
drivers/video/mxc/mxc_ipuv3_fb.c:610:			(u32) (PICOS2KHZ(fbi->var.pixclock) * 1000UL));
drivers/video/mxc/mxc_ipuv3_fb.c:612:		if (ipu_init_sync_panel(mxc_fbi->ipu, mxc_fbi->ipu_di,
drivers/video/mxc/mxc_ipuv3_fb.c:613:					(PICOS2KHZ(fbi->var.pixclock)) * 1000UL,
drivers/video/mxc/mxc_ipuv3_fb.c:614:					fbi->var.xres, fbi->var.yres,
drivers/video/mxc/mxc_ipuv3_fb.c:616:					fbi->var.left_margin,
drivers/video/mxc/mxc_ipuv3_fb.c:617:					fbi->var.hsync_len,
drivers/video/mxc/mxc_ipuv3_fb.c:618:					fbi->var.right_margin,
drivers/video/mxc/mxc_ipuv3_fb.c:619:					fbi->var.upper_margin,
drivers/video/mxc/mxc_ipuv3_fb.c:620:					fbi->var.vsync_len,
drivers/video/mxc/mxc_ipuv3_fb.c:621:					fbi->var.lower_margin,
drivers/video/mxc/mxc_ipuv3_fb.c:623:			dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:625:			return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:628:		fbi->mode =
drivers/video/mxc/mxc_ipuv3_fb.c:629:		    (struct fb_videomode *)fb_match_mode(&fbi->var,
drivers/video/mxc/mxc_ipuv3_fb.c:630:							 &fbi->modelist);
drivers/video/mxc/mxc_ipuv3_fb.c:632:		ipu_disp_set_window_pos(mxc_fbi->ipu, mxc_fbi->ipu_ch, 0, 0);
drivers/video/mxc/mxc_ipuv3_fb.c:637:		ipu_uninit_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:644:					mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:646:		retval = _setup_disp_channel2(mxc_fbi->ovfbi);
drivers/video/mxc/mxc_ipuv3_fb.c:648:			ipu_uninit_channel(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:649:			ipu_uninit_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:654:	ipu_enable_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:656:		ipu_enable_channel(mxc_fbi_fg->ipu, mxc_fbi_fg->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:658:	if (mxc_fbi->dispdrv && mxc_fbi->dispdrv->drv->enable) {
drivers/video/mxc/mxc_ipuv3_fb.c:659:		retval = mxc_fbi->dispdrv->drv->enable(mxc_fbi->dispdrv);
drivers/video/mxc/mxc_ipuv3_fb.c:661:			dev_err(fbi->device, "enable error, dispdrv:%s.\n",
drivers/video/mxc/mxc_ipuv3_fb.c:662:					mxc_fbi->dispdrv->drv->name);
drivers/video/mxc/mxc_ipuv3_fb.c:663:			return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:667:	mxc_fbi->cur_var = fbi->var;
drivers/video/mxc/mxc_ipuv3_fb.c:678:	struct mxcfb_info *mxc_fbi_from = (struct mxcfb_info *)fbi_from->par;
drivers/video/mxc/mxc_ipuv3_fb.c:679:	struct mxcfb_info *mxc_fbi_to = (struct mxcfb_info *)fbi_to->par;
drivers/video/mxc/mxc_ipuv3_fb.c:682:		ipu_disable_channel(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch, true);
drivers/video/mxc/mxc_ipuv3_fb.c:683:		ipu_uninit_channel(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:687:	old_ch = mxc_fbi_from->ipu_ch;
drivers/video/mxc/mxc_ipuv3_fb.c:688:	mxc_fbi_from->ipu_ch = mxc_fbi_to->ipu_ch;
drivers/video/mxc/mxc_ipuv3_fb.c:689:	mxc_fbi_to->ipu_ch = old_ch;
drivers/video/mxc/mxc_ipuv3_fb.c:690:	tmp = mxc_fbi_from->ipu_ch_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:691:	mxc_fbi_from->ipu_ch_irq = mxc_fbi_to->ipu_ch_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:692:	mxc_fbi_to->ipu_ch_irq = tmp;
drivers/video/mxc/mxc_ipuv3_fb.c:693:	tmp = mxc_fbi_from->ipu_ch_nf_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:694:	mxc_fbi_from->ipu_ch_nf_irq = mxc_fbi_to->ipu_ch_nf_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:695:	mxc_fbi_to->ipu_ch_nf_irq = tmp;
drivers/video/mxc/mxc_ipuv3_fb.c:696:	ovfbi = mxc_fbi_from->ovfbi;
drivers/video/mxc/mxc_ipuv3_fb.c:697:	mxc_fbi_from->ovfbi = mxc_fbi_to->ovfbi;
drivers/video/mxc/mxc_ipuv3_fb.c:698:	mxc_fbi_to->ovfbi = ovfbi;
drivers/video/mxc/mxc_ipuv3_fb.c:706:	retval = ipu_swap_channel(mxc_fbi_from->ipu, old_ch, mxc_fbi_from->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:707:	ipu_uninit_channel(mxc_fbi_from->ipu, old_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:714:		ipu_enable_channel(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:725:	struct mxcfb_info *mxc_fbi_from = (struct mxcfb_info *)fbi_from->par;
drivers/video/mxc/mxc_ipuv3_fb.c:730:	if (mxc_fbi_from->ipu_ch == MEM_BG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:735:	fbi_to = found_registered_fb(ch_to, mxc_fbi_from->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:737:		return -1;
drivers/video/mxc/mxc_ipuv3_fb.c:738:	mxc_fbi_to = (struct mxcfb_info *)fbi_to->par;
drivers/video/mxc/mxc_ipuv3_fb.c:740:	ipu_clear_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:741:	ipu_clear_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:742:	ipu_free_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_irq, fbi_from);
drivers/video/mxc/mxc_ipuv3_fb.c:743:	ipu_free_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_irq, fbi_to);
drivers/video/mxc/mxc_ipuv3_fb.c:744:	ipu_clear_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:745:	ipu_clear_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:746:	ipu_free_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_nf_irq, fbi_from);
drivers/video/mxc/mxc_ipuv3_fb.c:747:	ipu_free_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_nf_irq, fbi_to);
drivers/video/mxc/mxc_ipuv3_fb.c:749:	if (mxc_fbi_from->cur_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:750:		if (mxc_fbi_to->cur_blank == FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_ipuv3_fb.c:755:		if (mxc_fbi_to->cur_blank == FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_ipuv3_fb.c:763:		/* disable target->switch src->enable target */
drivers/video/mxc/mxc_ipuv3_fb.c:776:		mxc_fbi_to->ipu_ch = mxc_fbi_from->ipu_ch;
drivers/video/mxc/mxc_ipuv3_fb.c:777:		mxc_fbi_from->ipu_ch = ch_to;
drivers/video/mxc/mxc_ipuv3_fb.c:778:		i = mxc_fbi_from->ipu_ch_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:779:		mxc_fbi_from->ipu_ch_irq = mxc_fbi_to->ipu_ch_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:780:		mxc_fbi_to->ipu_ch_irq = i;
drivers/video/mxc/mxc_ipuv3_fb.c:781:		i = mxc_fbi_from->ipu_ch_nf_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:782:		mxc_fbi_from->ipu_ch_nf_irq = mxc_fbi_to->ipu_ch_nf_irq;
drivers/video/mxc/mxc_ipuv3_fb.c:783:		mxc_fbi_to->ipu_ch_nf_irq = i;
drivers/video/mxc/mxc_ipuv3_fb.c:789:	if (ipu_request_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:792:		dev_err(fbi_from->device, "Error registering irq %d\n",
drivers/video/mxc/mxc_ipuv3_fb.c:793:			mxc_fbi_from->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:794:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:796:	ipu_disable_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:797:	if (ipu_request_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:800:		dev_err(fbi_to->device, "Error registering irq %d\n",
drivers/video/mxc/mxc_ipuv3_fb.c:801:			mxc_fbi_to->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:802:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:804:	ipu_disable_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:805:	if (ipu_request_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_nf_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:808:		dev_err(fbi_from->device, "Error registering irq %d\n",
drivers/video/mxc/mxc_ipuv3_fb.c:809:			mxc_fbi_from->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:810:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:812:	ipu_disable_irq(mxc_fbi_from->ipu, mxc_fbi_from->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:813:	if (ipu_request_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_nf_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:816:		dev_err(fbi_to->device, "Error registering irq %d\n",
drivers/video/mxc/mxc_ipuv3_fb.c:817:			mxc_fbi_to->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:818:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:820:	ipu_disable_irq(mxc_fbi_to->ipu, mxc_fbi_to->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:836:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxc_ipuv3_fb.c:839:	if (var->xres == 0 || var->yres == 0)
drivers/video/mxc/mxc_ipuv3_fb.c:843:	if (mxc_fbi->ipu_ch == MEM_FG_SYNC) {
drivers/video/mxc/mxc_ipuv3_fb.c:848:		bg_xres = var->xres;
drivers/video/mxc/mxc_ipuv3_fb.c:849:		bg_yres = var->yres;
drivers/video/mxc/mxc_ipuv3_fb.c:851:		fbi_tmp = found_registered_fb(MEM_BG_SYNC, mxc_fbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:853:			bg_xres = fbi_tmp->var.xres;
drivers/video/mxc/mxc_ipuv3_fb.c:854:			bg_yres = fbi_tmp->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:857:		ipu_disp_get_window_pos(mxc_fbi->ipu, mxc_fbi->ipu_ch, &pos_x, &pos_y);
drivers/video/mxc/mxc_ipuv3_fb.c:859:		if ((var->xres + pos_x) > bg_xres)
drivers/video/mxc/mxc_ipuv3_fb.c:860:			var->xres = bg_xres - pos_x;
drivers/video/mxc/mxc_ipuv3_fb.c:861:		if ((var->yres + pos_y) > bg_yres)
drivers/video/mxc/mxc_ipuv3_fb.c:862:			var->yres = bg_yres - pos_y;
drivers/video/mxc/mxc_ipuv3_fb.c:865:	if (var->rotate > IPU_ROTATE_VERT_FLIP)
drivers/video/mxc/mxc_ipuv3_fb.c:866:		var->rotate = IPU_ROTATE_NONE;
drivers/video/mxc/mxc_ipuv3_fb.c:868:	if (var->xres_virtual < var->xres)
drivers/video/mxc/mxc_ipuv3_fb.c:869:		var->xres_virtual = var->xres;
drivers/video/mxc/mxc_ipuv3_fb.c:871:	if (var->yres_virtual < var->yres)
drivers/video/mxc/mxc_ipuv3_fb.c:872:		var->yres_virtual = var->yres * 3;
drivers/video/mxc/mxc_ipuv3_fb.c:874:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mxc_ipuv3_fb.c:875:	    (var->bits_per_pixel != 16) && (var->bits_per_pixel != 12) &&
drivers/video/mxc/mxc_ipuv3_fb.c:876:	    (var->bits_per_pixel != 8))
drivers/video/mxc/mxc_ipuv3_fb.c:877:		var->bits_per_pixel = 16;
drivers/video/mxc/mxc_ipuv3_fb.c:881:		bpp_to_var(var->bits_per_pixel, var);
drivers/video/mxc/mxc_ipuv3_fb.c:883:	if (var->pixclock < 1000) {
drivers/video/mxc/mxc_ipuv3_fb.c:884:		htotal = var->xres + var->right_margin + var->hsync_len +
drivers/video/mxc/mxc_ipuv3_fb.c:885:		    var->left_margin;
drivers/video/mxc/mxc_ipuv3_fb.c:886:		vtotal = var->yres + var->lower_margin + var->vsync_len +
drivers/video/mxc/mxc_ipuv3_fb.c:887:		    var->upper_margin;
drivers/video/mxc/mxc_ipuv3_fb.c:888:		var->pixclock = (vtotal * htotal * 6UL) / 100UL;
drivers/video/mxc/mxc_ipuv3_fb.c:889:		var->pixclock = KHZ2PICOS(var->pixclock);
drivers/video/mxc/mxc_ipuv3_fb.c:890:		dev_dbg(info->device,
drivers/video/mxc/mxc_ipuv3_fb.c:892:			var->pixclock);
drivers/video/mxc/mxc_ipuv3_fb.c:895:	var->height = -1;
drivers/video/mxc/mxc_ipuv3_fb.c:896:	var->width = -1;
drivers/video/mxc/mxc_ipuv3_fb.c:897:	var->grayscale = 0;
drivers/video/mxc/mxc_ipuv3_fb.c:905:	chan >>= 16 - bf->length;
drivers/video/mxc/mxc_ipuv3_fb.c:906:	return chan << bf->offset;
drivers/video/mxc/mxc_ipuv3_fb.c:919:	if (fbi->var.grayscale)
drivers/video/mxc/mxc_ipuv3_fb.c:922:	switch (fbi->fix.visual) {
drivers/video/mxc/mxc_ipuv3_fb.c:925:		 * 16-bit True Colour.  We encode the RGB value
drivers/video/mxc/mxc_ipuv3_fb.c:929:			u32 *pal = fbi->pseudo_palette;
drivers/video/mxc/mxc_ipuv3_fb.c:931:			val = _chan_to_field(red, &fbi->var.red);
drivers/video/mxc/mxc_ipuv3_fb.c:932:			val |= _chan_to_field(green, &fbi->var.green);
drivers/video/mxc/mxc_ipuv3_fb.c:933:			val |= _chan_to_field(blue, &fbi->var.blue);
drivers/video/mxc/mxc_ipuv3_fb.c:965:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:973:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:977:			if (ipu_disp_set_global_alpha(mxc_fbi->ipu,
drivers/video/mxc/mxc_ipuv3_fb.c:978:						      mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:981:				retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:986:				mxc_fbi->alpha_chan_en = false;
drivers/video/mxc/mxc_ipuv3_fb.c:989:				dev_dbg(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:991:					fbi->fix.id, ga.alpha);
drivers/video/mxc/mxc_ipuv3_fb.c:999:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1003:			if (ipu_disp_set_global_alpha(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1005:				retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1013:				mxc_fbi->alpha_chan_en = true;
drivers/video/mxc/mxc_ipuv3_fb.c:1015:				if (mxc_fbi->ipu_ch == MEM_FG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1017:				else if (mxc_fbi->ipu_ch == MEM_BG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1020:					retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1024:				fbi_tmp = found_registered_fb(ipu_ch, mxc_fbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:1026:					((struct mxcfb_info *)(fbi_tmp->par))->alpha_chan_en = false;
drivers/video/mxc/mxc_ipuv3_fb.c:1028:				mxc_fbi->alpha_chan_en = false;
drivers/video/mxc/mxc_ipuv3_fb.c:1030:			fbi->var.activate = (fbi->var.activate & ~FB_ACTIVATE_MASK) |
drivers/video/mxc/mxc_ipuv3_fb.c:1034:			la.alpha_phy_addr0 = mxc_fbi->alpha_phy_addr0;
drivers/video/mxc/mxc_ipuv3_fb.c:1035:			la.alpha_phy_addr1 = mxc_fbi->alpha_phy_addr1;
drivers/video/mxc/mxc_ipuv3_fb.c:1037:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1042:				dev_dbg(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1044:					fbi->fix.id);
drivers/video/mxc/mxc_ipuv3_fb.c:1052:			if (!(((mxc_fbi->ipu_ch == MEM_FG_SYNC) ||
drivers/video/mxc/mxc_ipuv3_fb.c:1053:			     (mxc_fbi->ipu_ch == MEM_BG_SYNC)) &&
drivers/video/mxc/mxc_ipuv3_fb.c:1054:			     (mxc_fbi->alpha_chan_en))) {
drivers/video/mxc/mxc_ipuv3_fb.c:1055:				dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1059:				return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1063:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1065:			if (base != mxc_fbi->alpha_phy_addr0 &&
drivers/video/mxc/mxc_ipuv3_fb.c:1066:			    base != mxc_fbi->alpha_phy_addr1) {
drivers/video/mxc/mxc_ipuv3_fb.c:1067:				dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1070:				return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1073:			if (mxc_fbi->ipu_ch == MEM_FG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1079:				&mxc_fbi->alpha_flip_complete, HZ/2);
drivers/video/mxc/mxc_ipuv3_fb.c:1081:				dev_err(fbi->device, "timeout when waiting for alpha flip irq\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1082:				retval = -ETIMEDOUT;
drivers/video/mxc/mxc_ipuv3_fb.c:1086:			mxc_fbi->cur_ipu_alpha_buf =
drivers/video/mxc/mxc_ipuv3_fb.c:1087:						!mxc_fbi->cur_ipu_alpha_buf;
drivers/video/mxc/mxc_ipuv3_fb.c:1088:			if (ipu_update_channel_buffer(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1090:						      mxc_fbi->
drivers/video/mxc/mxc_ipuv3_fb.c:1093:				ipu_select_buffer(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1095:						  mxc_fbi->cur_ipu_alpha_buf);
drivers/video/mxc/mxc_ipuv3_fb.c:1096:				ipu_clear_irq(mxc_fbi->ipu, ipu_alp_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1097:				ipu_enable_irq(mxc_fbi->ipu, ipu_alp_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1099:				dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1102:					fbi->fix.id,
drivers/video/mxc/mxc_ipuv3_fb.c:1103:					mxc_fbi->cur_ipu_alpha_buf, base);
drivers/video/mxc/mxc_ipuv3_fb.c:1111:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1114:			retval = ipu_disp_set_color_key(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1117:			dev_dbg(fbi->device, "Set color key to 0x%08X\n",
drivers/video/mxc/mxc_ipuv3_fb.c:1125:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1128:			retval = ipu_disp_set_gamma_correction(mxc_fbi->ipu,
drivers/video/mxc/mxc_ipuv3_fb.c:1129:							mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1137:			if (mxc_fbi->ipu_ch == MEM_FG_SYNC) {
drivers/video/mxc/mxc_ipuv3_fb.c:1142:				fbi_tmp = found_registered_fb(MEM_BG_SYNC, mxc_fbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:1144:					bg_mxcfbi = ((struct mxcfb_info *)(fbi_tmp->par));
drivers/video/mxc/mxc_ipuv3_fb.c:1147:					retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1150:				if (bg_mxcfbi->cur_blank != FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:1151:					retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1155:			if (mxc_fbi->cur_blank != FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:1156:				retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1160:			init_completion(&mxc_fbi->vsync_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:1161:			ipu_clear_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1162:			ipu_enable_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1164:				&mxc_fbi->vsync_complete, 1 * HZ);
drivers/video/mxc/mxc_ipuv3_fb.c:1166:				dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1169:				retval = -ETIME;
drivers/video/mxc/mxc_ipuv3_fb.c:1182:				return -ENOMEM;
drivers/video/mxc/mxc_ipuv3_fb.c:1185:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1187:			mem->size = PAGE_ALIGN(size);
drivers/video/mxc/mxc_ipuv3_fb.c:1189:			mem->cpu_addr = dma_alloc_coherent(fbi->device, size,
drivers/video/mxc/mxc_ipuv3_fb.c:1190:							   &mem->phy_addr,
drivers/video/mxc/mxc_ipuv3_fb.c:1192:			if (mem->cpu_addr == NULL) {
drivers/video/mxc/mxc_ipuv3_fb.c:1194:				return -ENOMEM;
drivers/video/mxc/mxc_ipuv3_fb.c:1197:			list_add(&mem->list, &fb_alloc_list);
drivers/video/mxc/mxc_ipuv3_fb.c:1199:			dev_dbg(fbi->device, "allocated %d bytes @ 0x%08X\n",
drivers/video/mxc/mxc_ipuv3_fb.c:1200:				mem->size, mem->phy_addr);
drivers/video/mxc/mxc_ipuv3_fb.c:1202:			if (put_user(mem->phy_addr, argp))
drivers/video/mxc/mxc_ipuv3_fb.c:1203:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1213:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1215:			retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1217:				if (mem->phy_addr == offset) {
drivers/video/mxc/mxc_ipuv3_fb.c:1218:					list_del(&mem->list);
drivers/video/mxc/mxc_ipuv3_fb.c:1219:					dma_free_coherent(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1220:							  mem->size,
drivers/video/mxc/mxc_ipuv3_fb.c:1221:							  mem->cpu_addr,
drivers/video/mxc/mxc_ipuv3_fb.c:1222:							  mem->phy_addr);
drivers/video/mxc/mxc_ipuv3_fb.c:1237:			if (mxc_fbi->ipu_ch != MEM_FG_SYNC) {
drivers/video/mxc/mxc_ipuv3_fb.c:1238:				dev_err(fbi->device, "Should use the overlay "
drivers/video/mxc/mxc_ipuv3_fb.c:1241:				retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1246:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1250:			bg_fbi = found_registered_fb(MEM_BG_SYNC, mxc_fbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:1252:				bg_mxcfbi = ((struct mxcfb_info *)(bg_fbi->par));
drivers/video/mxc/mxc_ipuv3_fb.c:1255:				dev_err(fbi->device, "Cannot find the "
drivers/video/mxc/mxc_ipuv3_fb.c:1257:				retval = -ENOENT;
drivers/video/mxc/mxc_ipuv3_fb.c:1262:			if (mxc_fbi->cur_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:1263:				if (fbi->var.xres + pos.x > bg_fbi->var.xres) {
drivers/video/mxc/mxc_ipuv3_fb.c:1264:					if (bg_fbi->var.xres < fbi->var.xres)
drivers/video/mxc/mxc_ipuv3_fb.c:1267:						pos.x = bg_fbi->var.xres - fbi->var.xres;
drivers/video/mxc/mxc_ipuv3_fb.c:1269:				if (fbi->var.yres + pos.y > bg_fbi->var.yres) {
drivers/video/mxc/mxc_ipuv3_fb.c:1270:					if (bg_fbi->var.yres < fbi->var.yres)
drivers/video/mxc/mxc_ipuv3_fb.c:1273:						pos.y = bg_fbi->var.yres - fbi->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:1277:			retval = ipu_disp_set_window_pos(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1281:				retval = -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1289:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1291:			if (put_user(mxc_fbi->ipu_ch, argp))
drivers/video/mxc/mxc_ipuv3_fb.c:1292:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1298:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1300:			if (put_user(mxc_fbi->ipu_di_pix_fmt, argp))
drivers/video/mxc/mxc_ipuv3_fb.c:1301:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1307:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1309:			if (put_user(mxc_fbi->ipu_di, argp))
drivers/video/mxc/mxc_ipuv3_fb.c:1310:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1316:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1318:			if (put_user(mxc_fbi->cur_blank, argp))
drivers/video/mxc/mxc_ipuv3_fb.c:1319:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1325:				(struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1327:			if (get_user(mxc_fbi->ipu_di_pix_fmt, argp))
drivers/video/mxc/mxc_ipuv3_fb.c:1328:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1337:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1339:			if ((mxc_fbi->ipu_ch != MEM_FG_SYNC) &&
drivers/video/mxc/mxc_ipuv3_fb.c:1340:				(mxc_fbi->ipu_ch != MEM_BG_SYNC) &&
drivers/video/mxc/mxc_ipuv3_fb.c:1341:				(mxc_fbi->ipu_ch != MEM_BG_ASYNC0))
drivers/video/mxc/mxc_ipuv3_fb.c:1342:				return -EFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1343:			ipu_set_csc_coefficients(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1347:		retval = -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1358:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1361:	dev_dbg(info->device, "blank = %d\n", blank);
drivers/video/mxc/mxc_ipuv3_fb.c:1363:	if (mxc_fbi->cur_blank == blank)
drivers/video/mxc/mxc_ipuv3_fb.c:1366:	mxc_fbi->next_blank = blank;
drivers/video/mxc/mxc_ipuv3_fb.c:1373:		if (mxc_fbi->dispdrv && mxc_fbi->dispdrv->drv->disable)
drivers/video/mxc/mxc_ipuv3_fb.c:1374:			mxc_fbi->dispdrv->drv->disable(mxc_fbi->dispdrv);
drivers/video/mxc/mxc_ipuv3_fb.c:1375:		ipu_disable_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch, true);
drivers/video/mxc/mxc_ipuv3_fb.c:1376:		if (mxc_fbi->ipu_di >= 0)
drivers/video/mxc/mxc_ipuv3_fb.c:1377:			ipu_uninit_sync_panel(mxc_fbi->ipu, mxc_fbi->ipu_di);
drivers/video/mxc/mxc_ipuv3_fb.c:1378:		ipu_uninit_channel(mxc_fbi->ipu, mxc_fbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:1381:		info->var.activate = (info->var.activate & ~FB_ACTIVATE_MASK) |
drivers/video/mxc/mxc_ipuv3_fb.c:1387:		mxc_fbi->cur_blank = blank;
drivers/video/mxc/mxc_ipuv3_fb.c:1402:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par,
drivers/video/mxc/mxc_ipuv3_fb.c:1413:	if (mxc_fbi->ipu_ch == MEM_FG_SYNC) {
drivers/video/mxc/mxc_ipuv3_fb.c:1417:		fbi_tmp = found_registered_fb(MEM_BG_SYNC, mxc_fbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:1419:			bg_mxcfbi = ((struct mxcfb_info *)(fbi_tmp->par));
drivers/video/mxc/mxc_ipuv3_fb.c:1421:			return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1422:		if (bg_mxcfbi->cur_blank != FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_ipuv3_fb.c:1423:			return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1425:	if (mxc_fbi->cur_blank != FB_BLANK_UNBLANK)
drivers/video/mxc/mxc_ipuv3_fb.c:1426:		return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1428:	y_bottom = var->yoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:1430:	if (y_bottom > info->var.yres_virtual)
drivers/video/mxc/mxc_ipuv3_fb.c:1431:		return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1441:		fb_stride = info->var.xres_virtual;
drivers/video/mxc/mxc_ipuv3_fb.c:1444:		fb_stride = info->fix.line_length;
drivers/video/mxc/mxc_ipuv3_fb.c:1447:	base = info->fix.smem_start;
drivers/video/mxc/mxc_ipuv3_fb.c:1448:	fr_xoff = var->xoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:1449:	fr_w = info->var.xres_virtual;
drivers/video/mxc/mxc_ipuv3_fb.c:1450:	if (!(var->vmode & FB_VMODE_YWRAP)) {
drivers/video/mxc/mxc_ipuv3_fb.c:1451:		dev_dbg(info->device, "Y wrap disabled\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1452:		fr_yoff = var->yoffset % info->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:1453:		fr_h = info->var.yres;
drivers/video/mxc/mxc_ipuv3_fb.c:1454:		base += info->fix.line_length * info->var.yres *
drivers/video/mxc/mxc_ipuv3_fb.c:1455:			(var->yoffset / info->var.yres);
drivers/video/mxc/mxc_ipuv3_fb.c:1457:		dev_dbg(info->device, "Y wrap enabled\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1458:		fr_yoff = var->yoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:1459:		fr_h = info->var.yres_virtual;
drivers/video/mxc/mxc_ipuv3_fb.c:1464:	if (mxc_fbi->ipu_ch == MEM_BG_SYNC || mxc_fbi->ipu_ch == MEM_FG_SYNC) {
drivers/video/mxc/mxc_ipuv3_fb.c:1468:			char *idstr = registered_fb[i]->fix.id;
drivers/video/mxc/mxc_ipuv3_fb.c:1469:			bg_id[4] += mxc_fbi->ipu_id;
drivers/video/mxc/mxc_ipuv3_fb.c:1470:			fg_id[4] += mxc_fbi->ipu_id;
drivers/video/mxc/mxc_ipuv3_fb.c:1474:			      (registered_fb[i]->par))->alpha_chan_en) {
drivers/video/mxc/mxc_ipuv3_fb.c:1477:						(registered_fb[i]->par);
drivers/video/mxc/mxc_ipuv3_fb.c:1479:					mxc_fbi->cur_ipu_alpha_buf ?
drivers/video/mxc/mxc_ipuv3_fb.c:1480:					mxc_graphic_fbi->alpha_phy_addr1 :
drivers/video/mxc/mxc_ipuv3_fb.c:1481:					mxc_graphic_fbi->alpha_phy_addr0;
drivers/video/mxc/mxc_ipuv3_fb.c:1482:				dev_dbg(info->device, "Updating SDC alpha "
drivers/video/mxc/mxc_ipuv3_fb.c:1484:					!mxc_fbi->cur_ipu_alpha_buf,
drivers/video/mxc/mxc_ipuv3_fb.c:1491:	ret = wait_for_completion_timeout(&mxc_fbi->flip_complete, HZ/2);
drivers/video/mxc/mxc_ipuv3_fb.c:1493:		dev_err(info->device, "timeout when waiting for flip irq\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1494:		return -ETIMEDOUT;
drivers/video/mxc/mxc_ipuv3_fb.c:1497:	++mxc_fbi->cur_ipu_buf;
drivers/video/mxc/mxc_ipuv3_fb.c:1498:	mxc_fbi->cur_ipu_buf %= 3;
drivers/video/mxc/mxc_ipuv3_fb.c:1499:	mxc_fbi->cur_ipu_alpha_buf = !mxc_fbi->cur_ipu_alpha_buf;
drivers/video/mxc/mxc_ipuv3_fb.c:1501:	dev_dbg(info->device, "Updating SDC %s buf %d address=0x%08lX\n",
drivers/video/mxc/mxc_ipuv3_fb.c:1502:		info->fix.id, mxc_fbi->cur_ipu_buf, base);
drivers/video/mxc/mxc_ipuv3_fb.c:1504:	if (ipu_update_channel_buffer(mxc_fbi->ipu, mxc_fbi->ipu_ch, IPU_INPUT_BUFFER,
drivers/video/mxc/mxc_ipuv3_fb.c:1505:				      mxc_fbi->cur_ipu_buf, base) == 0) {
drivers/video/mxc/mxc_ipuv3_fb.c:1508:		    ipu_update_channel_buffer(mxc_graphic_fbi->ipu, mxc_graphic_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1510:					      mxc_fbi->cur_ipu_alpha_buf,
drivers/video/mxc/mxc_ipuv3_fb.c:1512:			ipu_select_buffer(mxc_graphic_fbi->ipu, mxc_graphic_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1514:					  mxc_fbi->cur_ipu_alpha_buf);
drivers/video/mxc/mxc_ipuv3_fb.c:1518:		ipu_update_channel_offset(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1528:		ipu_select_buffer(mxc_fbi->ipu, mxc_fbi->ipu_ch, IPU_INPUT_BUFFER,
drivers/video/mxc/mxc_ipuv3_fb.c:1529:				  mxc_fbi->cur_ipu_buf);
drivers/video/mxc/mxc_ipuv3_fb.c:1530:		ipu_clear_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1531:		ipu_enable_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1533:		dev_err(info->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1536:			"buf2 ready %d\n", mxc_fbi->cur_ipu_buf, base,
drivers/video/mxc/mxc_ipuv3_fb.c:1537:			ipu_get_cur_buffer_idx(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1539:			ipu_check_buffer_ready(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1541:			ipu_check_buffer_ready(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1543:			ipu_check_buffer_ready(mxc_fbi->ipu, mxc_fbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:1545:		++mxc_fbi->cur_ipu_buf;
drivers/video/mxc/mxc_ipuv3_fb.c:1546:		mxc_fbi->cur_ipu_buf %= 3;
drivers/video/mxc/mxc_ipuv3_fb.c:1547:		++mxc_fbi->cur_ipu_buf;
drivers/video/mxc/mxc_ipuv3_fb.c:1548:		mxc_fbi->cur_ipu_buf %= 3;
drivers/video/mxc/mxc_ipuv3_fb.c:1549:		mxc_fbi->cur_ipu_alpha_buf = !mxc_fbi->cur_ipu_alpha_buf;
drivers/video/mxc/mxc_ipuv3_fb.c:1550:		ipu_clear_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1551:		ipu_enable_irq(mxc_fbi->ipu, mxc_fbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:1552:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:1555:	dev_dbg(info->device, "Update complete\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1557:	info->var.yoffset = var->yoffset;
drivers/video/mxc/mxc_ipuv3_fb.c:1573:	unsigned long offset = vma->vm_pgoff << PAGE_SHIFT;
drivers/video/mxc/mxc_ipuv3_fb.c:1575:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1577:	if (offset < fbi->fix.smem_len) {
drivers/video/mxc/mxc_ipuv3_fb.c:1579:		len = fbi->fix.smem_len - offset;
drivers/video/mxc/mxc_ipuv3_fb.c:1580:		vma->vm_pgoff = (fbi->fix.smem_start + offset) >> PAGE_SHIFT;
drivers/video/mxc/mxc_ipuv3_fb.c:1581:	} else if ((vma->vm_pgoff ==
drivers/video/mxc/mxc_ipuv3_fb.c:1582:			(mxc_fbi->alpha_phy_addr0 >> PAGE_SHIFT)) ||
drivers/video/mxc/mxc_ipuv3_fb.c:1583:		   (vma->vm_pgoff ==
drivers/video/mxc/mxc_ipuv3_fb.c:1584:			(mxc_fbi->alpha_phy_addr1 >> PAGE_SHIFT))) {
drivers/video/mxc/mxc_ipuv3_fb.c:1585:		len = mxc_fbi->alpha_mem_len;
drivers/video/mxc/mxc_ipuv3_fb.c:1588:			if (offset == mem->phy_addr) {
drivers/video/mxc/mxc_ipuv3_fb.c:1590:				len = mem->size;
drivers/video/mxc/mxc_ipuv3_fb.c:1595:			return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1599:	if (vma->vm_end - vma->vm_start > len)
drivers/video/mxc/mxc_ipuv3_fb.c:1600:		return -EINVAL;
drivers/video/mxc/mxc_ipuv3_fb.c:1603:	vma->vm_page_prot = pgprot_writecombine(vma->vm_page_prot);
drivers/video/mxc/mxc_ipuv3_fb.c:1605:	vma->vm_flags |= VM_IO | VM_RESERVED;
drivers/video/mxc/mxc_ipuv3_fb.c:1607:	if (remap_pfn_range(vma, vma->vm_start, vma->vm_pgoff,
drivers/video/mxc/mxc_ipuv3_fb.c:1608:			    vma->vm_end - vma->vm_start, vma->vm_page_prot)) {
drivers/video/mxc/mxc_ipuv3_fb.c:1609:		dev_dbg(fbi->device, "mmap remap_pfn_range failed\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1610:		return -ENOBUFS;
drivers/video/mxc/mxc_ipuv3_fb.c:1638:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1640:	complete(&mxc_fbi->flip_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:1647:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1649:	complete(&mxc_fbi->vsync_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:1656:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1658:	complete(&mxc_fbi->alpha_flip_complete);
drivers/video/mxc/mxc_ipuv3_fb.c:1668:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1674:	if (mxc_fbi->ovfbi) {
drivers/video/mxc/mxc_ipuv3_fb.c:1676:			(struct mxcfb_info *)mxc_fbi->ovfbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1679:		fb_set_suspend(mxc_fbi->ovfbi, 1);
drivers/video/mxc/mxc_ipuv3_fb.c:1680:		saved_blank = mxc_fbi_fg->cur_blank;
drivers/video/mxc/mxc_ipuv3_fb.c:1681:		mxcfb_blank(FB_BLANK_POWERDOWN, mxc_fbi->ovfbi);
drivers/video/mxc/mxc_ipuv3_fb.c:1682:		mxc_fbi_fg->next_blank = saved_blank;
drivers/video/mxc/mxc_ipuv3_fb.c:1688:	saved_blank = mxc_fbi->cur_blank;
drivers/video/mxc/mxc_ipuv3_fb.c:1690:	mxc_fbi->next_blank = saved_blank;
drivers/video/mxc/mxc_ipuv3_fb.c:1702:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1705:	mxcfb_blank(mxc_fbi->next_blank, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:1709:	if (mxc_fbi->ovfbi) {
drivers/video/mxc/mxc_ipuv3_fb.c:1711:			(struct mxcfb_info *)mxc_fbi->ovfbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1713:		mxcfb_blank(mxc_fbi_fg->next_blank, mxc_fbi->ovfbi);
drivers/video/mxc/mxc_ipuv3_fb.c:1714:		fb_set_suspend(mxc_fbi->ovfbi, 0);
drivers/video/mxc/mxc_ipuv3_fb.c:1727: * into a non-cached, non-buffered, memory region to allow palette and pixel
drivers/video/mxc/mxc_ipuv3_fb.c:1737:	if (fbi->fix.smem_len < fbi->var.yres_virtual * fbi->fix.line_length)
drivers/video/mxc/mxc_ipuv3_fb.c:1738:		fbi->fix.smem_len = fbi->var.yres_virtual *
drivers/video/mxc/mxc_ipuv3_fb.c:1739:				    fbi->fix.line_length;
drivers/video/mxc/mxc_ipuv3_fb.c:1741:	fbi->screen_base = dma_alloc_writecombine(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:1742:				fbi->fix.smem_len,
drivers/video/mxc/mxc_ipuv3_fb.c:1743:				(dma_addr_t *)&fbi->fix.smem_start,
drivers/video/mxc/mxc_ipuv3_fb.c:1745:	if (fbi->screen_base == 0) {
drivers/video/mxc/mxc_ipuv3_fb.c:1746:		dev_err(fbi->device, "Unable to allocate framebuffer memory\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1747:		fbi->fix.smem_len = 0;
drivers/video/mxc/mxc_ipuv3_fb.c:1748:		fbi->fix.smem_start = 0;
drivers/video/mxc/mxc_ipuv3_fb.c:1749:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:1752:	dev_dbg(fbi->device, "allocated fb @ paddr=0x%08X, size=%d.\n",
drivers/video/mxc/mxc_ipuv3_fb.c:1753:		(uint32_t) fbi->fix.smem_start, fbi->fix.smem_len);
drivers/video/mxc/mxc_ipuv3_fb.c:1755:	fbi->screen_size = fbi->fix.smem_len;
drivers/video/mxc/mxc_ipuv3_fb.c:1758:	memset((char *)fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxc_ipuv3_fb.c:1764: * De-allocates the DRAM memory for the frame buffer.
drivers/video/mxc/mxc_ipuv3_fb.c:1772:	dma_free_writecombine(fbi->device, fbi->fix.smem_len,
drivers/video/mxc/mxc_ipuv3_fb.c:1773:			      fbi->screen_base, fbi->fix.smem_start);
drivers/video/mxc/mxc_ipuv3_fb.c:1774:	fbi->screen_base = 0;
drivers/video/mxc/mxc_ipuv3_fb.c:1775:	fbi->fix.smem_start = 0;
drivers/video/mxc/mxc_ipuv3_fb.c:1776:	fbi->fix.smem_len = 0;
drivers/video/mxc/mxc_ipuv3_fb.c:1801:	mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1803:	fbi->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mxc_ipuv3_fb.c:1805:	fbi->fbops = ops;
drivers/video/mxc/mxc_ipuv3_fb.c:1806:	fbi->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mxc_ipuv3_fb.c:1807:	fbi->pseudo_palette = mxcfbi->pseudo_palette;
drivers/video/mxc/mxc_ipuv3_fb.c:1812:	fb_alloc_cmap(&fbi->cmap, 16, 0);
drivers/video/mxc/mxc_ipuv3_fb.c:1821:	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1823:	if (mxcfbi->ipu_ch == MEM_BG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1824:		return sprintf(buf, "2-layer-fb-bg\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1825:	else if (mxcfbi->ipu_ch == MEM_FG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1826:		return sprintf(buf, "2-layer-fb-fg\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1827:	else if (mxcfbi->ipu_ch == MEM_DC_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1828:		return sprintf(buf, "1-layer-fb\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1838:	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1842:	/* swap only happen between DP-BG and DC, while DP-FG disable */
drivers/video/mxc/mxc_ipuv3_fb.c:1843:	if (((mxcfbi->ipu_ch == MEM_BG_SYNC) &&
drivers/video/mxc/mxc_ipuv3_fb.c:1844:	     (strstr(buf, "1-layer-fb") != NULL)) ||
drivers/video/mxc/mxc_ipuv3_fb.c:1845:	    ((mxcfbi->ipu_ch == MEM_DC_SYNC) &&
drivers/video/mxc/mxc_ipuv3_fb.c:1846:	     (strstr(buf, "2-layer-fb-bg") != NULL))) {
drivers/video/mxc/mxc_ipuv3_fb.c:1849:		fbi_fg = found_registered_fb(MEM_FG_SYNC, mxcfbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:1851:			fg_mxcfbi = (struct mxcfb_info *)fbi_fg->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1854:			fg_mxcfbi->cur_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:1856:				"Can not switch while fb2(fb-fg) is on.\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1874:	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1876:	if (mxcfbi->ipu_ch == MEM_FG_SYNC)
drivers/video/mxc/mxc_ipuv3_fb.c:1879:		return sprintf(buf, "%s\n", mxcfbi->dispdrv->drv->name);
drivers/video/mxc/mxc_ipuv3_fb.c:1886:	struct ipuv3_fb_platform_data *plat_data = pdev->dev.platform_data;
drivers/video/mxc/mxc_ipuv3_fb.c:1887:	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:1892:	setting.if_fmt = plat_data->interface_pix_fmt;
drivers/video/mxc/mxc_ipuv3_fb.c:1893:	setting.dft_mode_str = plat_data->mode_str;
drivers/video/mxc/mxc_ipuv3_fb.c:1894:	setting.default_bpp = plat_data->default_bpp;
drivers/video/mxc/mxc_ipuv3_fb.c:1898:	if (!strlen(plat_data->disp_dev)) {
drivers/video/mxc/mxc_ipuv3_fb.c:1902:		memcpy(disp_dev, plat_data->disp_dev,
drivers/video/mxc/mxc_ipuv3_fb.c:1903:				strlen(plat_data->disp_dev));
drivers/video/mxc/mxc_ipuv3_fb.c:1904:		disp_dev[strlen(plat_data->disp_dev)] = '\0';
drivers/video/mxc/mxc_ipuv3_fb.c:1907:	dev_info(&pdev->dev, "register mxc display driver %s\n", disp_dev);
drivers/video/mxc/mxc_ipuv3_fb.c:1909:	mxcfbi->dispdrv = mxc_dispdrv_gethandle(disp_dev, &setting);
drivers/video/mxc/mxc_ipuv3_fb.c:1910:	if (IS_ERR(mxcfbi->dispdrv)) {
drivers/video/mxc/mxc_ipuv3_fb.c:1911:		ret = PTR_ERR(mxcfbi->dispdrv);
drivers/video/mxc/mxc_ipuv3_fb.c:1912:		dev_err(&pdev->dev, "NO mxc display driver found!\n");
drivers/video/mxc/mxc_ipuv3_fb.c:1915:		/* fix-up  */
drivers/video/mxc/mxc_ipuv3_fb.c:1916:		mxcfbi->ipu_di_pix_fmt = setting.if_fmt;
drivers/video/mxc/mxc_ipuv3_fb.c:1917:		mxcfbi->default_bpp = setting.default_bpp;
drivers/video/mxc/mxc_ipuv3_fb.c:1920:		mxcfbi->ipu_id = setting.dev_id;
drivers/video/mxc/mxc_ipuv3_fb.c:1921:		mxcfbi->ipu_di = setting.disp_id;
drivers/video/mxc/mxc_ipuv3_fb.c:1930: * 	video=mxcfb0:dev=lcd,800x480M-16@55,if=RGB565,bpp=16,noaccel
drivers/video/mxc/mxc_ipuv3_fb.c:1931: *	video=mxcfb0:dev=lcd,800x480M-16@55,if=RGB565,fbpix=RGB565
drivers/video/mxc/mxc_ipuv3_fb.c:1935:	struct ipuv3_fb_platform_data *pdata = pdev->dev.platform_data;
drivers/video/mxc/mxc_ipuv3_fb.c:1942:	name[5] += pdev->id;
drivers/video/mxc/mxc_ipuv3_fb.c:1945:		dev_err(&pdev->dev, "Can't get fb option for %s!\n", name);
drivers/video/mxc/mxc_ipuv3_fb.c:1946:		return -ENODEV;
drivers/video/mxc/mxc_ipuv3_fb.c:1960:			memcpy(pdata->disp_dev, opt + 4, strlen(opt) - 4);
drivers/video/mxc/mxc_ipuv3_fb.c:1961:			pdata->disp_dev[strlen(opt) - 4] = '\0';
drivers/video/mxc/mxc_ipuv3_fb.c:1964:				pdata->interface_pix_fmt = IPU_PIX_FMT_RGB24;
drivers/video/mxc/mxc_ipuv3_fb.c:1966:				pdata->interface_pix_fmt = IPU_PIX_FMT_BGR24;
drivers/video/mxc/mxc_ipuv3_fb.c:1968:				pdata->interface_pix_fmt = IPU_PIX_FMT_GBR24;
drivers/video/mxc/mxc_ipuv3_fb.c:1970:				pdata->interface_pix_fmt = IPU_PIX_FMT_RGB565;
drivers/video/mxc/mxc_ipuv3_fb.c:1972:				pdata->interface_pix_fmt = IPU_PIX_FMT_RGB666;
drivers/video/mxc/mxc_ipuv3_fb.c:1974:				pdata->interface_pix_fmt = IPU_PIX_FMT_YUV444;
drivers/video/mxc/mxc_ipuv3_fb.c:1976:				pdata->interface_pix_fmt = IPU_PIX_FMT_LVDS666;
drivers/video/mxc/mxc_ipuv3_fb.c:1978:				pdata->interface_pix_fmt = IPU_PIX_FMT_YUYV;
drivers/video/mxc/mxc_ipuv3_fb.c:1980:				pdata->interface_pix_fmt = IPU_PIX_FMT_UYVY;
drivers/video/mxc/mxc_ipuv3_fb.c:1982:				pdata->interface_pix_fmt = IPU_PIX_FMT_YVYU;
drivers/video/mxc/mxc_ipuv3_fb.c:1984:				pdata->interface_pix_fmt = IPU_PIX_FMT_VYUY;
drivers/video/mxc/mxc_ipuv3_fb.c:2000:				pixfmt_to_var(fb_pix_fmt, &fbi->var);
drivers/video/mxc/mxc_ipuv3_fb.c:2001:				pdata->default_bpp =
drivers/video/mxc/mxc_ipuv3_fb.c:2002:					fbi->var.bits_per_pixel;
drivers/video/mxc/mxc_ipuv3_fb.c:2005:			pdata->int_clk = true;
drivers/video/mxc/mxc_ipuv3_fb.c:2012:			pdata->default_bpp =
drivers/video/mxc/mxc_ipuv3_fb.c:2015:			fb_pix_fmt = bpp_to_pixfmt(pdata->default_bpp);
drivers/video/mxc/mxc_ipuv3_fb.c:2017:				pixfmt_to_var(fb_pix_fmt, &fbi->var);
drivers/video/mxc/mxc_ipuv3_fb.c:2024:		pdata->mode_str = fb_mode_str;
drivers/video/mxc/mxc_ipuv3_fb.c:2032:	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2036:	char bg1_id[] = "DISP3 BG - DI1";
drivers/video/mxc/mxc_ipuv3_fb.c:2039:	if (mxcfbi->ipu_di == 0) {
drivers/video/mxc/mxc_ipuv3_fb.c:2040:		bg0_id[4] += mxcfbi->ipu_id;
drivers/video/mxc/mxc_ipuv3_fb.c:2041:		strcpy(fbi->fix.id, bg0_id);
drivers/video/mxc/mxc_ipuv3_fb.c:2042:	} else if (mxcfbi->ipu_di == 1) {
drivers/video/mxc/mxc_ipuv3_fb.c:2043:		bg1_id[4] += mxcfbi->ipu_id;
drivers/video/mxc/mxc_ipuv3_fb.c:2044:		strcpy(fbi->fix.id, bg1_id);
drivers/video/mxc/mxc_ipuv3_fb.c:2046:		fg_id[4] += mxcfbi->ipu_id;
drivers/video/mxc/mxc_ipuv3_fb.c:2047:		strcpy(fbi->fix.id, fg_id);
drivers/video/mxc/mxc_ipuv3_fb.c:2050:	mxcfb_check_var(&fbi->var, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2055:	if (!fbi->modelist.next || !fbi->modelist.prev)
drivers/video/mxc/mxc_ipuv3_fb.c:2056:		INIT_LIST_HEAD(&fbi->modelist);
drivers/video/mxc/mxc_ipuv3_fb.c:2057:	fb_var_to_videomode(&m, &fbi->var);
drivers/video/mxc/mxc_ipuv3_fb.c:2058:	fb_add_videomode(&m, &fbi->modelist);
drivers/video/mxc/mxc_ipuv3_fb.c:2060:	if (ipu_request_irq(mxcfbi->ipu, mxcfbi->ipu_ch_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:2062:		dev_err(fbi->device, "Error registering EOF irq handler.\n");
drivers/video/mxc/mxc_ipuv3_fb.c:2063:		ret = -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:2066:	ipu_disable_irq(mxcfbi->ipu, mxcfbi->ipu_ch_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:2067:	if (ipu_request_irq(mxcfbi->ipu, mxcfbi->ipu_ch_nf_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:2069:		dev_err(fbi->device, "Error registering NFACK irq handler.\n");
drivers/video/mxc/mxc_ipuv3_fb.c:2070:		ret = -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:2073:	ipu_disable_irq(mxcfbi->ipu, mxcfbi->ipu_ch_nf_irq);
drivers/video/mxc/mxc_ipuv3_fb.c:2075:	if (mxcfbi->ipu_alp_ch_irq != -1)
drivers/video/mxc/mxc_ipuv3_fb.c:2076:		if (ipu_request_irq(mxcfbi->ipu, mxcfbi->ipu_alp_ch_irq,
drivers/video/mxc/mxc_ipuv3_fb.c:2079:			dev_err(fbi->device, "Error registering alpha irq "
drivers/video/mxc/mxc_ipuv3_fb.c:2081:			ret = -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:2085:	if (!mxcfbi->late_init) {
drivers/video/mxc/mxc_ipuv3_fb.c:2086:		fbi->var.activate |= FB_ACTIVATE_FORCE;
drivers/video/mxc/mxc_ipuv3_fb.c:2088:		fbi->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxc_ipuv3_fb.c:2089:		ret = fb_set_var(fbi, &fbi->var);
drivers/video/mxc/mxc_ipuv3_fb.c:2090:		fbi->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxc_ipuv3_fb.c:2093:			dev_err(fbi->device, "Error fb_set_var ret:%d\n", ret);
drivers/video/mxc/mxc_ipuv3_fb.c:2097:		if (mxcfbi->next_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:2102:				dev_err(fbi->device,
drivers/video/mxc/mxc_ipuv3_fb.c:2111:		 * channel neatly and re-initialize it .
drivers/video/mxc/mxc_ipuv3_fb.c:2113:		if (mxcfbi->next_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:2116:			ipu_enable_channel(mxcfbi->ipu, mxcfbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:2128:	if (mxcfbi->next_blank == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxc_ipuv3_fb.c:2130:		if (!mxcfbi->late_init)
drivers/video/mxc/mxc_ipuv3_fb.c:2133:			ipu_disable_channel(mxcfbi->ipu, mxcfbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:2135:			ipu_uninit_channel(mxcfbi->ipu, mxcfbi->ipu_ch);
drivers/video/mxc/mxc_ipuv3_fb.c:2141:	if (mxcfbi->ipu_alp_ch_irq != -1)
drivers/video/mxc/mxc_ipuv3_fb.c:2142:		ipu_free_irq(mxcfbi->ipu, mxcfbi->ipu_alp_ch_irq, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2144:	ipu_free_irq(mxcfbi->ipu, mxcfbi->ipu_ch_nf_irq, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2146:	ipu_free_irq(mxcfbi->ipu, mxcfbi->ipu_ch_irq, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2153:	struct mxcfb_info *mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2155:	if (mxcfbi->ipu_alp_ch_irq != -1)
drivers/video/mxc/mxc_ipuv3_fb.c:2156:		ipu_free_irq(mxcfbi->ipu, mxcfbi->ipu_alp_ch_irq, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2157:	if (mxcfbi->ipu_ch_irq)
drivers/video/mxc/mxc_ipuv3_fb.c:2158:		ipu_free_irq(mxcfbi->ipu, mxcfbi->ipu_ch_irq, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2159:	if (mxcfbi->ipu_ch_nf_irq)
drivers/video/mxc/mxc_ipuv3_fb.c:2160:		ipu_free_irq(mxcfbi->ipu, mxcfbi->ipu_ch_nf_irq, fbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2169:	struct mxcfb_info *mxcfbi_bg = (struct mxcfb_info *)fbi_bg->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2173:	ovfbi = mxcfb_init_fbinfo(&pdev->dev, &mxcfb_ops);
drivers/video/mxc/mxc_ipuv3_fb.c:2175:		ret = -ENOMEM;
drivers/video/mxc/mxc_ipuv3_fb.c:2178:	mxcfbi_fg = (struct mxcfb_info *)ovfbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2180:	mxcfbi_fg->ipu = ipu_get_soc(mxcfbi_bg->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:2181:	if (IS_ERR(mxcfbi_fg->ipu)) {
drivers/video/mxc/mxc_ipuv3_fb.c:2182:		ret = -ENODEV;
drivers/video/mxc/mxc_ipuv3_fb.c:2185:	mxcfbi_fg->ipu_id = mxcfbi_bg->ipu_id;
drivers/video/mxc/mxc_ipuv3_fb.c:2186:	mxcfbi_fg->ipu_ch_irq = IPU_IRQ_FG_SYNC_EOF;
drivers/video/mxc/mxc_ipuv3_fb.c:2187:	mxcfbi_fg->ipu_ch_nf_irq = IPU_IRQ_FG_SYNC_NFACK;
drivers/video/mxc/mxc_ipuv3_fb.c:2188:	mxcfbi_fg->ipu_alp_ch_irq = IPU_IRQ_FG_ALPHA_SYNC_EOF;
drivers/video/mxc/mxc_ipuv3_fb.c:2189:	mxcfbi_fg->ipu_ch = MEM_FG_SYNC;
drivers/video/mxc/mxc_ipuv3_fb.c:2190:	mxcfbi_fg->ipu_di = -1;
drivers/video/mxc/mxc_ipuv3_fb.c:2191:	mxcfbi_fg->ipu_di_pix_fmt = mxcfbi_bg->ipu_di_pix_fmt;
drivers/video/mxc/mxc_ipuv3_fb.c:2192:	mxcfbi_fg->overlay = true;
drivers/video/mxc/mxc_ipuv3_fb.c:2193:	mxcfbi_fg->cur_blank = mxcfbi_fg->next_blank = FB_BLANK_POWERDOWN;
drivers/video/mxc/mxc_ipuv3_fb.c:2196:	ovfbi->var.xres = 240;
drivers/video/mxc/mxc_ipuv3_fb.c:2197:	ovfbi->var.yres = 320;
drivers/video/mxc/mxc_ipuv3_fb.c:2199:	if (res && res->start && res->end) {
drivers/video/mxc/mxc_ipuv3_fb.c:2200:		ovfbi->fix.smem_len = res->end - res->start + 1;
drivers/video/mxc/mxc_ipuv3_fb.c:2201:		ovfbi->fix.smem_start = res->start;
drivers/video/mxc/mxc_ipuv3_fb.c:2202:		ovfbi->screen_base = ioremap(
drivers/video/mxc/mxc_ipuv3_fb.c:2203:					ovfbi->fix.smem_start,
drivers/video/mxc/mxc_ipuv3_fb.c:2204:					ovfbi->fix.smem_len);
drivers/video/mxc/mxc_ipuv3_fb.c:2211:	mxcfbi_bg->ovfbi = ovfbi;
drivers/video/mxc/mxc_ipuv3_fb.c:2217:	fb_dealloc_cmap(&ovfbi->cmap);
drivers/video/mxc/mxc_ipuv3_fb.c:2225:	struct mxcfb_info *mxcfbi_bg = (struct mxcfb_info *)fbi_bg->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2226:	struct fb_info *ovfbi = mxcfbi_bg->ovfbi;
drivers/video/mxc/mxc_ipuv3_fb.c:2230:	if (&ovfbi->cmap)
drivers/video/mxc/mxc_ipuv3_fb.c:2231:		fb_dealloc_cmap(&ovfbi->cmap);
drivers/video/mxc/mxc_ipuv3_fb.c:2239:		return -EBUSY;
drivers/video/mxc/mxc_ipuv3_fb.c:2260:	struct ipuv3_fb_platform_data *plat_data = pdev->dev.platform_data;
drivers/video/mxc/mxc_ipuv3_fb.c:2269:	fbi = mxcfb_init_fbinfo(&pdev->dev, &mxcfb_ops);
drivers/video/mxc/mxc_ipuv3_fb.c:2271:		ret = -ENOMEM;
drivers/video/mxc/mxc_ipuv3_fb.c:2277:		printk("%s: get_fb_option_failed - bailing out! \n", __func__);
drivers/video/mxc/mxc_ipuv3_fb.c:2282:	mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2283:	mxcfbi->ipu_int_clk = plat_data->int_clk;
drivers/video/mxc/mxc_ipuv3_fb.c:2284:	mxcfbi->late_init = plat_data->late_init;
drivers/video/mxc/mxc_ipuv3_fb.c:2285:	mxcfbi->first_set_par = true;
drivers/video/mxc/mxc_ipuv3_fb.c:2290:	ret = ipu_test_set_usage(mxcfbi->ipu_id, mxcfbi->ipu_di);
drivers/video/mxc/mxc_ipuv3_fb.c:2292:		dev_err(&pdev->dev, "ipu%d-di%d already in use\n",
drivers/video/mxc/mxc_ipuv3_fb.c:2293:				mxcfbi->ipu_id, mxcfbi->ipu_di);
drivers/video/mxc/mxc_ipuv3_fb.c:2298:	if (res && res->start && res->end) {
drivers/video/mxc/mxc_ipuv3_fb.c:2299:		fbi->fix.smem_len = res->end - res->start + 1;
drivers/video/mxc/mxc_ipuv3_fb.c:2300:		fbi->fix.smem_start = res->start;
drivers/video/mxc/mxc_ipuv3_fb.c:2301:		fbi->screen_base = ioremap(fbi->fix.smem_start, fbi->fix.smem_len);
drivers/video/mxc/mxc_ipuv3_fb.c:2303:		if (!mxcfbi->late_init) {
drivers/video/mxc/mxc_ipuv3_fb.c:2305:			memset(fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxc_ipuv3_fb.c:2309:	mxcfbi->ipu = ipu_get_soc(mxcfbi->ipu_id);
drivers/video/mxc/mxc_ipuv3_fb.c:2310:	if (IS_ERR(mxcfbi->ipu)) {
drivers/video/mxc/mxc_ipuv3_fb.c:2311:		ret = -ENODEV;
drivers/video/mxc/mxc_ipuv3_fb.c:2316:	if (!g_dp_in_use[mxcfbi->ipu_id]) {
drivers/video/mxc/mxc_ipuv3_fb.c:2317:		mxcfbi->ipu_ch_irq = IPU_IRQ_BG_SYNC_EOF;
drivers/video/mxc/mxc_ipuv3_fb.c:2318:		mxcfbi->ipu_ch_nf_irq = IPU_IRQ_BG_SYNC_NFACK;
drivers/video/mxc/mxc_ipuv3_fb.c:2319:		mxcfbi->ipu_alp_ch_irq = IPU_IRQ_BG_ALPHA_SYNC_EOF;
drivers/video/mxc/mxc_ipuv3_fb.c:2320:		mxcfbi->ipu_ch = MEM_BG_SYNC;
drivers/video/mxc/mxc_ipuv3_fb.c:2322:		if (pdev->id == 0)
drivers/video/mxc/mxc_ipuv3_fb.c:2323:			mxcfbi->cur_blank = mxcfbi->next_blank = FB_BLANK_UNBLANK;
drivers/video/mxc/mxc_ipuv3_fb.c:2325:			mxcfbi->cur_blank = mxcfbi->next_blank = FB_BLANK_POWERDOWN;
drivers/video/mxc/mxc_ipuv3_fb.c:2331:		ipu_disp_set_global_alpha(mxcfbi->ipu, mxcfbi->ipu_ch,
drivers/video/mxc/mxc_ipuv3_fb.c:2333:		ipu_disp_set_color_key(mxcfbi->ipu, mxcfbi->ipu_ch, false, 0);
drivers/video/mxc/mxc_ipuv3_fb.c:2343:		g_dp_in_use[mxcfbi->ipu_id] = true;
drivers/video/mxc/mxc_ipuv3_fb.c:2345:		ret = device_create_file(mxcfbi->ovfbi->dev,
drivers/video/mxc/mxc_ipuv3_fb.c:2348:			dev_err(mxcfbi->ovfbi->dev, "Error %d on creating "
drivers/video/mxc/mxc_ipuv3_fb.c:2352:		ret = device_create_file(mxcfbi->ovfbi->dev,
drivers/video/mxc/mxc_ipuv3_fb.c:2355:			dev_err(mxcfbi->ovfbi->dev, "Error %d on creating "
drivers/video/mxc/mxc_ipuv3_fb.c:2359:		mxcfbi->ipu_ch_irq = IPU_IRQ_DC_SYNC_EOF;
drivers/video/mxc/mxc_ipuv3_fb.c:2360:		mxcfbi->ipu_ch_nf_irq = IPU_IRQ_DC_SYNC_NFACK;
drivers/video/mxc/mxc_ipuv3_fb.c:2361:		mxcfbi->ipu_alp_ch_irq = -1;
drivers/video/mxc/mxc_ipuv3_fb.c:2362:		mxcfbi->ipu_ch = MEM_DC_SYNC;
drivers/video/mxc/mxc_ipuv3_fb.c:2363:		mxcfbi->cur_blank = mxcfbi->next_blank = FB_BLANK_POWERDOWN;
drivers/video/mxc/mxc_ipuv3_fb.c:2372:	ret = device_create_file(fbi->dev, &dev_attr_fsl_disp_property);
drivers/video/mxc/mxc_ipuv3_fb.c:2374:		dev_err(&pdev->dev, "Error %d on creating file for disp "
drivers/video/mxc/mxc_ipuv3_fb.c:2377:	ret = device_create_file(fbi->dev, &dev_attr_fsl_disp_dev_property);
drivers/video/mxc/mxc_ipuv3_fb.c:2379:		dev_err(&pdev->dev, "Error %d on creating file for disp "
drivers/video/mxc/mxc_ipuv3_fb.c:2399:	ipu_clear_usage(mxcfbi->ipu_id, mxcfbi->ipu_di);
drivers/video/mxc/mxc_ipuv3_fb.c:2402:	fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxc_ipuv3_fb.c:2412:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxc_ipuv3_fb.c:2417:	device_remove_file(fbi->dev, &dev_attr_fsl_disp_dev_property);
drivers/video/mxc/mxc_ipuv3_fb.c:2418:	device_remove_file(fbi->dev, &dev_attr_fsl_disp_property);
drivers/video/mxc/mxc_ipuv3_fb.c:2423:	if (mxc_fbi->ovfbi) {
drivers/video/mxc/mxc_ipuv3_fb.c:2424:		device_remove_file(mxc_fbi->ovfbi->dev,
drivers/video/mxc/mxc_ipuv3_fb.c:2426:		device_remove_file(mxc_fbi->ovfbi->dev,
drivers/video/mxc/mxc_ipuv3_fb.c:2428:		mxcfb_blank(FB_BLANK_POWERDOWN, mxc_fbi->ovfbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2430:		mxcfb_unmap_video_memory(mxc_fbi->ovfbi);
drivers/video/mxc/mxc_ipuv3_fb.c:2433:	ipu_clear_usage(mxc_fbi->ipu_id, mxc_fbi->ipu_di);
drivers/video/mxc/mxc_ipuv3_fb.c:2434:	if (&fbi->cmap)
drivers/video/mxc/mxc_ipuv3_fb.c:2435:		fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/.built-in.o.cmd:1:cmd_drivers/video/mxc/built-in.o :=  arm-reach-linux-gnueabi-ld -EL    -r -o drivers/video/mxc/built-in.o drivers/video/mxc/ldb.o drivers/video/mxc/mxc_dispdrv.o drivers/video/mxc/mxc_lcdif.o drivers/video/mxc/mxc_ipuv3_fb.o 
drivers/video/mxc/tve.c:2: * Copyright 2008-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/tve.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/tve.c:171:	 "TV-NTSC", 60, 720, 480, 74074,
drivers/video/mxc/tve.c:180:	 "TV-PAL", 50, 720, 576, 74074,
drivers/video/mxc/tve.c:189:	 "TV-720P60", 60, 1280, 720, 13468,
drivers/video/mxc/tve.c:198:	 "TV-720P30", 30, 1280, 720, 13468,
drivers/video/mxc/tve.c:207:	 "TV-1080I60", 60, 1920, 1080, 13468,
drivers/video/mxc/tve.c:216:	 "TV-1080I50", 50, 1920, 1080, 13468,
drivers/video/mxc/tve.c:225:	 "TV-1080P30", 30, 1920, 1080, 13468,
drivers/video/mxc/tve.c:234:	 "TV-1080P25", 25, 1920, 1080, 13468,
drivers/video/mxc/tve.c:243:	 "TV-1080P24", 24, 1920, 1080, 13468,
drivers/video/mxc/tve.c:256:	 "VGA-SVGA", 60, 800, 600, 25000,
drivers/video/mxc/tve.c:265:	 "VGA-XGA", 60, 1024, 768, 15384,
drivers/video/mxc/tve.c:274:	"VGA-SXGA", 60, 1280, 1024, 9259,
drivers/video/mxc/tve.c:283:	"VGA-WSXGA+", 60, 1680, 1050, 6796,
drivers/video/mxc/tve.c:317:	dev_dbg(&tve->pdev->dev, "tve_com_conf_reg 0x%x\n",
drivers/video/mxc/tve.c:318:			readl(tve->base + tve->regs->tve_com_conf_reg));
drivers/video/mxc/tve.c:319:	dev_dbg(&tve->pdev->dev, "tve_cd_cont_reg 0x%x\n",
drivers/video/mxc/tve.c:320:			readl(tve->base + tve->regs->tve_cd_cont_reg));
drivers/video/mxc/tve.c:321:	dev_dbg(&tve->pdev->dev, "tve_int_cont_reg 0x%x\n",
drivers/video/mxc/tve.c:322:			readl(tve->base + tve->regs->tve_int_cont_reg));
drivers/video/mxc/tve.c:323:	dev_dbg(&tve->pdev->dev, "tve_tst_mode_reg 0x%x\n",
drivers/video/mxc/tve.c:324:			readl(tve->base + tve->regs->tve_tst_mode_reg));
drivers/video/mxc/tve.c:325:	dev_dbg(&tve->pdev->dev, "tve_tvdac_cont_reg0 0x%x\n",
drivers/video/mxc/tve.c:326:			readl(tve->base + tve->regs->tve_tvdac_cont_reg));
drivers/video/mxc/tve.c:327:	dev_dbg(&tve->pdev->dev, "tve_tvdac_cont_reg1 0x%x\n",
drivers/video/mxc/tve.c:328:			readl(tve->base + tve->regs->tve_tvdac_cont_reg + 4));
drivers/video/mxc/tve.c:329:	dev_dbg(&tve->pdev->dev, "tve_tvdac_cont_reg2 0x%x\n",
drivers/video/mxc/tve.c:330:			readl(tve->base + tve->regs->tve_tvdac_cont_reg + 8));
drivers/video/mxc/tve.c:337:	if (tve->revision == 2) {
drivers/video/mxc/tve.c:338:		reg = readl(tve->base + tve->regs->tve_tst_mode_reg);
drivers/video/mxc/tve.c:373:	if (fb_mode_is_equal(fbi->mode, &video_modes_tve[0])) {
drivers/video/mxc/tve.c:375:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[1])) {
drivers/video/mxc/tve.c:377:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[2])) {
drivers/video/mxc/tve.c:379:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[3])) {
drivers/video/mxc/tve.c:381:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[4])) {
drivers/video/mxc/tve.c:383:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[5])) {
drivers/video/mxc/tve.c:385:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[6])) {
drivers/video/mxc/tve.c:387:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[7])) {
drivers/video/mxc/tve.c:389:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_tve[8])) {
drivers/video/mxc/tve.c:391:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_vga[0])) {
drivers/video/mxc/tve.c:393:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_vga[1])) {
drivers/video/mxc/tve.c:395:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_vga[2])) {
drivers/video/mxc/tve.c:397:	} else if (fb_mode_is_equal(fbi->mode, &video_modes_vga[3])) {
drivers/video/mxc/tve.c:407:	if (tve->revision == 2) {
drivers/video/mxc/tve.c:410:		reg = readl(tve->base + tve->regs->tve_tst_mode_reg);
drivers/video/mxc/tve.c:412:		writel(reg, tve->base + tve->regs->tve_tst_mode_reg);
drivers/video/mxc/tve.c:421:	conf_reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:422:	conf_reg &= ~(tve->reg_fields->sync_ch_mask |
drivers/video/mxc/tve.c:423:				tve->reg_fields->tvout_mode_mask);
drivers/video/mxc/tve.c:426:	if (tve->revision == 2) {
drivers/video/mxc/tve.c:434:		mode << tve->reg_fields->
drivers/video/mxc/tve.c:436:		tve->reg_fields->sync_ch_offset;
drivers/video/mxc/tve.c:437:	writel(conf_reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:444:	conf_reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:445:	mode = (conf_reg >> tve->reg_fields->tvout_mode_offset) & 7;
drivers/video/mxc/tve.c:457:	if (tve->revision == 2) {
drivers/video/mxc/tve.c:459:		reg = readl(tve->base + tve->regs->tve_tvdac_cont_reg);
drivers/video/mxc/tve.c:461:		writel(reg, tve->base + tve->regs->tve_tvdac_cont_reg);
drivers/video/mxc/tve.c:462:		reg = readl(tve->base + tve->regs->tve_tvdac_cont_reg + 4);
drivers/video/mxc/tve.c:464:		writel(reg, tve->base + tve->regs->tve_tvdac_cont_reg + 4);
drivers/video/mxc/tve.c:465:		reg = readl(tve->base + tve->regs->tve_tvdac_cont_reg + 8);
drivers/video/mxc/tve.c:467:		writel(reg, tve->base + tve->regs->tve_tvdac_cont_reg + 8);
drivers/video/mxc/tve.c:470:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:476:		reg |= TVRGB << tve->reg_fields->tvout_mode_offset |
drivers/video/mxc/tve.c:477:			1 << tve->reg_fields->sync_ch_offset;
drivers/video/mxc/tve.c:478:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:481:		reg = readl(tve->base + tve->regs->tve_tst_mode_reg);
drivers/video/mxc/tve.c:483:		writel(reg, tve->base + tve->regs->tve_tst_mode_reg);
drivers/video/mxc/tve.c:506:	if (tve->cur_mode == mode)
drivers/video/mxc/tve.c:509:	spin_lock_irqsave(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:549:	if (tve->enabled)
drivers/video/mxc/tve.c:550:		clk_disable(tve->clk);
drivers/video/mxc/tve.c:552:	tve_parent_clk = clk_get_parent(tve->clk);
drivers/video/mxc/tve.c:556:	tve_clock_rate = clk_round_rate(tve->clk, tve_clock_rate);
drivers/video/mxc/tve.c:557:	clk_set_rate(tve->clk, tve_clock_rate);
drivers/video/mxc/tve.c:559:	clk_enable(tve->clk);
drivers/video/mxc/tve.c:560:	di1_clock_rate = clk_round_rate(tve->di_clk, di1_clock_rate);
drivers/video/mxc/tve.c:561:	clk_set_rate(tve->di_clk, di1_clock_rate);
drivers/video/mxc/tve.c:563:	tve->cur_mode = mode;
drivers/video/mxc/tve.c:569:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:571:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:572:		dev_dbg(&tve->pdev->dev, "TVE: change to PAL video\n");
drivers/video/mxc/tve.c:576:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:578:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:579:		dev_dbg(&tve->pdev->dev, "TVE: change to NTSC video\n");
drivers/video/mxc/tve.c:584:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:586:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:588:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:589:		dev_dbg(&tve->pdev->dev, "TVE: change to 720P60 video\n");
drivers/video/mxc/tve.c:594:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:596:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:598:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:599:		dev_dbg(&tve->pdev->dev, "TVE: change to 720P30 video\n");
drivers/video/mxc/tve.c:604:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:606:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:608:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:609:		dev_dbg(&tve->pdev->dev, "TVE: change to 1080I60 video\n");
drivers/video/mxc/tve.c:614:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:616:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:618:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:619:		dev_dbg(&tve->pdev->dev, "TVE: change to 1080I50 video\n");
drivers/video/mxc/tve.c:624:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:626:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:628:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:629:		dev_dbg(&tve->pdev->dev, "TVE: change to 1080P30 video\n");
drivers/video/mxc/tve.c:634:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:636:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:638:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:639:		dev_dbg(&tve->pdev->dev, "TVE: change to 1080P25 video\n");
drivers/video/mxc/tve.c:644:			dev_dbg(&tve->pdev->dev, "The TV out mode is HD incompatible. Setting to YPBPR.");
drivers/video/mxc/tve.c:646:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:648:		writel(reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:649:		dev_dbg(&tve->pdev->dev, "TVE: change to 1080P24 video\n");
drivers/video/mxc/tve.c:653:		dev_dbg(&tve->pdev->dev, "TVE: change to VGA video\n");
drivers/video/mxc/tve.c:655:		writel(0x0, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:656:		dev_dbg(&tve->pdev->dev, "TVE: change to OFF video\n");
drivers/video/mxc/tve.c:658:		dev_dbg(&tve->pdev->dev, "TVE: no such video format.\n");
drivers/video/mxc/tve.c:661:	if (!tve->enabled)
drivers/video/mxc/tve.c:662:		clk_disable(tve->clk);
drivers/video/mxc/tve.c:664:	spin_unlock_irqrestore(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:677:	spin_lock_irqsave(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:678:	if (!tve->enabled) {
drivers/video/mxc/tve.c:679:		tve->enabled = 1;
drivers/video/mxc/tve.c:680:		clk_enable(tve->clk);
drivers/video/mxc/tve.c:681:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:683:					tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:684:		dev_dbg(&tve->pdev->dev, "TVE power on.\n");
drivers/video/mxc/tve.c:689:		dev_dbg(&tve->pdev->dev, "TVE VGA disable cable detect.\n");
drivers/video/mxc/tve.c:690:		writel(0xffffffff, tve->base + tve->regs->tve_stat_reg);
drivers/video/mxc/tve.c:691:		writel(0, tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:694:		dev_dbg(&tve->pdev->dev, "TVE TVE enable cable detect.\n");
drivers/video/mxc/tve.c:695:		writel(0xffffffff, tve->base + tve->regs->tve_stat_reg);
drivers/video/mxc/tve.c:697:				tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:700:	spin_unlock_irqrestore(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:714:	spin_lock_irqsave(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:715:	if (tve->enabled) {
drivers/video/mxc/tve.c:716:		tve->enabled = 0;
drivers/video/mxc/tve.c:717:		reg = readl(tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:719:				tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:720:		clk_disable(tve->clk);
drivers/video/mxc/tve.c:721:		dev_dbg(&tve->pdev->dev, "TVE power off.\n");
drivers/video/mxc/tve.c:723:	spin_unlock_irqrestore(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:728:	int old_detect = tve->detect;
drivers/video/mxc/tve.c:737:	spin_lock_irqsave(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:739:	if (!tve->enabled) {
drivers/video/mxc/tve.c:740:		dev_warn(&tve->pdev->dev, "Warning: update tve status while it disabled!\n");
drivers/video/mxc/tve.c:741:		tve->detect = 0;
drivers/video/mxc/tve.c:745:	int_ctl = readl(tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:746:	cd_cont_reg = readl(tve->base + tve->regs->tve_cd_cont_reg);
drivers/video/mxc/tve.c:749:		dev_warn(&tve->pdev->dev, "Warning: pls enable TVE CD first!\n");
drivers/video/mxc/tve.c:753:	stat = readl(tve->base + tve->regs->tve_stat_reg);
drivers/video/mxc/tve.c:755:		spin_unlock_irqrestore(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:757:		spin_lock_irqsave(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:758:		timeout -= 2;
drivers/video/mxc/tve.c:759:		if (!tve->enabled) {
drivers/video/mxc/tve.c:760:			dev_warn(&tve->pdev->dev, "Warning: update tve status while it disabled!\n");
drivers/video/mxc/tve.c:761:			tve->detect = 0;
drivers/video/mxc/tve.c:764:			stat = readl(tve->base + tve->regs->tve_stat_reg);
drivers/video/mxc/tve.c:767:		dev_warn(&tve->pdev->dev, "Warning: get detect result without CD_MON_END_INT!\n");
drivers/video/mxc/tve.c:771:	stat = stat >> tve->reg_fields->cd_ch_stat_offset;
drivers/video/mxc/tve.c:776:			tve->detect = 3;
drivers/video/mxc/tve.c:777:			tve->output_mode = YPBPR;
drivers/video/mxc/tve.c:780:			tve->detect = 4;
drivers/video/mxc/tve.c:781:			tve->output_mode = SVIDEO;
drivers/video/mxc/tve.c:786:			tve->detect = 2;
drivers/video/mxc/tve.c:787:			tve->output_mode = TV_OFF;
drivers/video/mxc/tve.c:789:			tve->detect = 1;
drivers/video/mxc/tve.c:790:			tve->output_mode = CVBS0;
drivers/video/mxc/tve.c:796:			tve->detect = 2;
drivers/video/mxc/tve.c:797:			tve->output_mode = TV_OFF;
drivers/video/mxc/tve.c:799:			tve->detect = 1;
drivers/video/mxc/tve.c:800:			tve->output_mode = CVBS2;
drivers/video/mxc/tve.c:804:		tve->detect = 0;
drivers/video/mxc/tve.c:805:		tve->output_mode = TV_OFF;
drivers/video/mxc/tve.c:808:	tve_set_tvout_mode(tve, tve->output_mode);
drivers/video/mxc/tve.c:812:			tve->base + tve->regs->tve_stat_reg);
drivers/video/mxc/tve.c:815:			tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:818:	spin_unlock_irqrestore(&tve->tve_lock, lock_flags);
drivers/video/mxc/tve.c:820:	if (old_detect != tve->detect) {
drivers/video/mxc/tve.c:821:		sysfs_notify(&tve->pdev->dev.kobj, NULL, "headphone");
drivers/video/mxc/tve.c:822:		if (tve->detect == 1)
drivers/video/mxc/tve.c:824:		else if (tve->detect == 3)
drivers/video/mxc/tve.c:826:		else if (tve->detect == 4)
drivers/video/mxc/tve.c:830:		kobject_uevent_env(&tve->pdev->dev.kobj, KOBJ_CHANGE, envp);
drivers/video/mxc/tve.c:833:	dev_dbg(&tve->pdev->dev, "detect = %d mode = %d\n",
drivers/video/mxc/tve.c:834:			tve->detect, tve->output_mode);
drivers/video/mxc/tve.c:835:	return tve->detect;
drivers/video/mxc/tve.c:851:	u32 int_ctl = readl(tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:855:	writel(int_ctl, tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:858:			tve->base + tve->regs->tve_stat_reg);
drivers/video/mxc/tve.c:860:	schedule_delayed_work(&tve->cd_work, msecs_to_jiffies(1000));
drivers/video/mxc/tve.c:870:	if (tve->enabled) {
drivers/video/mxc/tve.c:871:		writel(0, tve->base + tve->regs->tve_int_cont_reg);
drivers/video/mxc/tve.c:872:		writel(0, tve->base + tve->regs->tve_cd_cont_reg);
drivers/video/mxc/tve.c:873:		writel(0, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:874:		clk_disable(tve->clk);
drivers/video/mxc/tve.c:883:	if (tve->enabled) {
drivers/video/mxc/tve.c:884:		clk_enable(tve->clk);
drivers/video/mxc/tve.c:887:		if (tve->revision == 1)
drivers/video/mxc/tve.c:889:				tve->base + tve->regs->tve_cd_cont_reg);
drivers/video/mxc/tve.c:892:				tve->base + tve->regs->tve_cd_cont_reg);
drivers/video/mxc/tve.c:894:		if (valid_mode(tve->cur_mode)) {
drivers/video/mxc/tve.c:895:			mode = tve->cur_mode;
drivers/video/mxc/tve.c:897:			tve->cur_mode = TVOUT_FMT_OFF;
drivers/video/mxc/tve.c:910:	fbi->mode = (struct fb_videomode *)fb_match_mode(&fbi->var,
drivers/video/mxc/tve.c:911:			&fbi->modelist);
drivers/video/mxc/tve.c:913:	if (!fbi->mode) {
drivers/video/mxc/tve.c:914:		dev_warn(&tve->pdev->dev, "TVE: can not find mode for xres=%d, yres=%d\n",
drivers/video/mxc/tve.c:915:				fbi->var.xres, fbi->var.yres);
drivers/video/mxc/tve.c:917:		tve->cur_mode = TVOUT_FMT_OFF;
drivers/video/mxc/tve.c:921:	dev_dbg(&tve->pdev->dev, "TVE: fb mode change event: xres=%d, yres=%d\n",
drivers/video/mxc/tve.c:922:			fbi->mode->xres, fbi->mode->yres);
drivers/video/mxc/tve.c:950:	struct fb_info *fbi = event->info;
drivers/video/mxc/tve.c:953:	if (strcmp(fbi->fix.id, "DISP3 BG - DI1"))
drivers/video/mxc/tve.c:958:		if (fbi->mode == NULL)
drivers/video/mxc/tve.c:961:		dev_dbg(&tve->pdev->dev, "TVE: fb blank event\n");
drivers/video/mxc/tve.c:963:		if (*((int *)event->data) == FB_BLANK_UNBLANK) {
drivers/video/mxc/tve.c:967:				if (tve->cur_mode != mode) {
drivers/video/mxc/tve.c:993:	if (!tve->enabled) {
drivers/video/mxc/tve.c:1023:	conf_reg = readl(tve->base);
drivers/video/mxc/tve.c:1041:			= tve->pdev->dev.platform_data;
drivers/video/mxc/tve.c:1047:	if (tve->inited == true)
drivers/video/mxc/tve.c:1048:		return -ENODEV;
drivers/video/mxc/tve.c:1051:	setting->dev_id = 0;
drivers/video/mxc/tve.c:1052:	setting->disp_id = 1;
drivers/video/mxc/tve.c:1054:	res = platform_get_resource(tve->pdev, IORESOURCE_MEM, 0);
drivers/video/mxc/tve.c:1056:		ret = -ENOMEM;
drivers/video/mxc/tve.c:1060:	tve->irq = platform_get_irq(tve->pdev, 0);
drivers/video/mxc/tve.c:1061:	if (tve->irq < 0) {
drivers/video/mxc/tve.c:1062:		ret = tve->irq;
drivers/video/mxc/tve.c:1066:	tve->base = ioremap(res->start, res->end - res->start);
drivers/video/mxc/tve.c:1067:	if (!tve->base) {
drivers/video/mxc/tve.c:1068:		ret = -ENOMEM;
drivers/video/mxc/tve.c:1072:	ret = device_create_file(&tve->pdev->dev, &dev_attr_headphone);
drivers/video/mxc/tve.c:1076:	tve->dac_reg = regulator_get(&tve->pdev->dev, plat_data->dac_reg);
drivers/video/mxc/tve.c:1077:	if (!IS_ERR(tve->dac_reg)) {
drivers/video/mxc/tve.c:1078:		regulator_set_voltage(tve->dac_reg, 2750000, 2750000);
drivers/video/mxc/tve.c:1079:		regulator_enable(tve->dac_reg);
drivers/video/mxc/tve.c:1081:	tve->dig_reg = regulator_get(&tve->pdev->dev, plat_data->dig_reg);
drivers/video/mxc/tve.c:1082:	if (!IS_ERR(tve->dig_reg)) {
drivers/video/mxc/tve.c:1083:		regulator_set_voltage(tve->dig_reg, 1250000, 1250000);
drivers/video/mxc/tve.c:1084:		regulator_enable(tve->dig_reg);
drivers/video/mxc/tve.c:1087:	tve->clk = clk_get(&tve->pdev->dev, "tve_clk");
drivers/video/mxc/tve.c:1088:	if (IS_ERR(tve->clk)) {
drivers/video/mxc/tve.c:1089:		ret = PTR_ERR(tve->clk);
drivers/video/mxc/tve.c:1092:	tve->di_clk = clk_get(NULL, "ipu1_di1_clk");
drivers/video/mxc/tve.c:1093:	if (IS_ERR(tve->di_clk)) {
drivers/video/mxc/tve.c:1094:		ret = PTR_ERR(tve->di_clk);
drivers/video/mxc/tve.c:1098:	clk_set_rate(tve->clk, 216000000);
drivers/video/mxc/tve.c:1099:	clk_set_parent(tve->di_clk, tve->clk);
drivers/video/mxc/tve.c:1100:	clk_enable(tve->clk);
drivers/video/mxc/tve.c:1102:	tve->revision = _tve_get_revision(tve);
drivers/video/mxc/tve.c:1103:	if (tve->revision == 1) {
drivers/video/mxc/tve.c:1104:		tve->regs = &tve_regs_v1;
drivers/video/mxc/tve.c:1105:		tve->reg_fields = &tve_reg_fields_v1;
drivers/video/mxc/tve.c:1107:		tve->regs = &tve_regs_v2;
drivers/video/mxc/tve.c:1108:		tve->reg_fields = &tve_reg_fields_v2;
drivers/video/mxc/tve.c:1124:		setting->if_fmt = IPU_PIX_FMT_GBR24;
drivers/video/mxc/tve.c:1128:		setting->if_fmt = IPU_PIX_FMT_YUV444;
drivers/video/mxc/tve.c:1129:		if (tve->revision == 1) {
drivers/video/mxc/tve.c:1138:	fb_videomode_to_modelist(modedb, modedb_sz, &setting->fbi->modelist);
drivers/video/mxc/tve.c:1141:	ret = fb_find_mode(&setting->fbi->var, setting->fbi, setting->dft_mode_str,
drivers/video/mxc/tve.c:1142:				modedb, modedb_sz, NULL, setting->default_bpp);
drivers/video/mxc/tve.c:1144:		fb_videomode_to_var(&setting->fbi->var, &modedb[0]);
drivers/video/mxc/tve.c:1146:	ret = request_irq(tve->irq, tve_detect_handler, 0, tve->pdev->name, tve);
drivers/video/mxc/tve.c:1150:	/* Setup cable detect, for YPrPb mode, default use channel#-1 for Y */
drivers/video/mxc/tve.c:1151:	INIT_DELAYED_WORK(&tve->cd_work, cd_work_func);
drivers/video/mxc/tve.c:1152:	if (tve->revision == 1)
drivers/video/mxc/tve.c:1153:		writel(0x01067701, tve->base + tve->regs->tve_cd_cont_reg);
drivers/video/mxc/tve.c:1155:		writel(0x00770601, tve->base + tve->regs->tve_cd_cont_reg);
drivers/video/mxc/tve.c:1158:	writel(conf_reg, tve->base + tve->regs->tve_com_conf_reg);
drivers/video/mxc/tve.c:1160:	writel(0x00000000, tve->base + tve->regs->tve_mv_cont_reg - 4 * 5);
drivers/video/mxc/tve.c:1161:	writel(0x00000000, tve->base + tve->regs->tve_mv_cont_reg - 4 * 4);
drivers/video/mxc/tve.c:1162:	writel(0x00000000, tve->base + tve->regs->tve_mv_cont_reg - 4 * 3);
drivers/video/mxc/tve.c:1163:	writel(0x00000000, tve->base + tve->regs->tve_mv_cont_reg - 4 * 2);
drivers/video/mxc/tve.c:1164:	writel(0x00000000, tve->base + tve->regs->tve_mv_cont_reg - 4);
drivers/video/mxc/tve.c:1165:	writel(0x00000000, tve->base + tve->regs->tve_mv_cont_reg);
drivers/video/mxc/tve.c:1167:	clk_disable(tve->clk);
drivers/video/mxc/tve.c:1169:	tve->nb.notifier_call = tve_fb_event;
drivers/video/mxc/tve.c:1170:	ret = fb_register_client(&tve->nb);
drivers/video/mxc/tve.c:1174:	dev_set_drvdata(&tve->pdev->dev, tve);
drivers/video/mxc/tve.c:1176:	spin_lock_init(&tve->tve_lock);
drivers/video/mxc/tve.c:1178:	tve->inited = true;
drivers/video/mxc/tve.c:1183:	free_irq(tve->irq, tve->pdev);
drivers/video/mxc/tve.c:1187:	device_remove_file(&tve->pdev->dev, &dev_attr_headphone);
drivers/video/mxc/tve.c:1189:	iounmap(tve->base);
drivers/video/mxc/tve.c:1213:	if (tve->enabled)
drivers/video/mxc/tve.c:1214:		clk_disable(tve->clk);
drivers/video/mxc/tve.c:1216:	fb_unregister_client(&tve->nb);
drivers/video/mxc/tve.c:1217:	free_irq(tve->irq, tve->pdev);
drivers/video/mxc/tve.c:1218:	device_remove_file(&tve->pdev->dev, &dev_attr_headphone);
drivers/video/mxc/tve.c:1219:	iounmap(tve->base);
drivers/video/mxc/tve.c:1237:	tve->disp_tve = mxc_dispdrv_register(&tve_drv);
drivers/video/mxc/tve.c:1238:	mxc_dispdrv_setdata(tve->disp_tve, tve);
drivers/video/mxc/tve.c:1239:	tve->disp_vga = mxc_dispdrv_register(&vga_drv);
drivers/video/mxc/tve.c:1240:	mxc_dispdrv_setdata(tve->disp_vga, tve);
drivers/video/mxc/tve.c:1246:	mxc_dispdrv_puthandle(tve->disp_tve);
drivers/video/mxc/tve.c:1247:	mxc_dispdrv_puthandle(tve->disp_vga);
drivers/video/mxc/tve.c:1248:	mxc_dispdrv_unregister(tve->disp_tve);
drivers/video/mxc/tve.c:1249:	mxc_dispdrv_unregister(tve->disp_vga);
drivers/video/mxc/tve.c:1259:		ret = -ENOMEM;
drivers/video/mxc/tve.c:1263:	tve->pdev = pdev;
drivers/video/mxc/tve.c:1268:	dev_set_drvdata(&pdev->dev, tve);
drivers/video/mxc/tve.c:1280:	struct tve_data *tve = dev_get_drvdata(&pdev->dev);
drivers/video/mxc/mxcfb_epson_vga.c:2: * Copyright 2007-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_epson_vga.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxcfb_epson_vga.c:42:#include <asm/mach-types.h>
drivers/video/mxc/mxcfb_epson_vga.c:59:	 "Epson-VGA", 60, 480, 640, 41701, 60, 41, 10, 5, 20, 10,
drivers/video/mxc/mxcfb_epson_vga.c:82:	info->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_epson_vga.c:84:	info->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_epson_vga.c:92:	if (strcmp(event->info->fix.id, "DISP3 BG")) {
drivers/video/mxc/mxcfb_epson_vga.c:98:		lcd_init_fb(event->info);
drivers/video/mxc/mxcfb_epson_vga.c:102:		if ((event->info->var.xres != 480) ||
drivers/video/mxc/mxcfb_epson_vga.c:103:		    (event->info->var.yres != 640)) {
drivers/video/mxc/mxcfb_epson_vga.c:106:		if (*((int *)event->data) == FB_BLANK_UNBLANK) {
drivers/video/mxc/mxcfb_epson_vga.c:130:	struct mxc_lcd_platform_data *plat = dev->platform_data;
drivers/video/mxc/mxcfb_epson_vga.c:135:		io_reg = regulator_get(dev, plat->io_reg);
drivers/video/mxc/mxcfb_epson_vga.c:140:		core_reg = regulator_get(dev, plat->core_reg);
drivers/video/mxc/mxcfb_epson_vga.c:146:		lcd_reset = plat->reset;
drivers/video/mxc/mxcfb_epson_vga.c:154:		if (strcmp(registered_fb[i]->fix.id, "DISP3 BG") == 0) {
drivers/video/mxc/mxcfb_epson_vga.c:179:	return lcd_probe(&pdev->dev);
drivers/video/mxc/mxcfb_epson_vga.c:186:	spi->bits_per_word = 9;
drivers/video/mxc/mxcfb_epson_vga.c:189:	return lcd_probe(&spi->dev);
drivers/video/mxc/mxcfb_epson_vga.c:204:	int ret = lcd_remove(&spi->dev);
drivers/video/mxc/mxcfb_epson_vga.c:211:	return lcd_remove(&pdev->dev);
drivers/video/mxc/epdc_regs.h:2: * Copyright (C) 2010-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/epdc_regs.h:16: * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
drivers/video/mxc/mxcfb_seiko_wvga.c:2: * Copyright (C) 2011-2012 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_seiko_wvga.c:18: * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
drivers/video/mxc/mxcfb_seiko_wvga.c:60:	 //"SEIKO-WVGA", 60, 800, 480, 29850, 99, 164, 33, 10, 10, 10,
drivers/video/mxc/mxcfb_seiko_wvga.c:63:        "SEIKO-WVGA", 60, 640, 480, 41701, 60, 41, 10, 5, 20, 10,
drivers/video/mxc/mxcfb_seiko_wvga.c:81:	info->flags |= FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_seiko_wvga.c:83:	info->flags &= ~FBINFO_MISC_USEREVENT;
drivers/video/mxc/mxcfb_seiko_wvga.c:91:	if (strcmp(event->info->fix.id, "mxc_elcdif_fb"))
drivers/video/mxc/mxcfb_seiko_wvga.c:96:		if ((event->info->var.xres != 640) ||
drivers/video/mxc/mxcfb_seiko_wvga.c:97:		    (event->info->var.yres != 480)) {
drivers/video/mxc/mxcfb_seiko_wvga.c:100:		if (*((int *)event->data) == FB_BLANK_UNBLANK)
drivers/video/mxc/mxcfb_seiko_wvga.c:123:	struct fsl_mxc_lcd_platform_data *plat = pdev->dev.platform_data;
drivers/video/mxc/mxcfb_seiko_wvga.c:128:		if (plat->reset)
drivers/video/mxc/mxcfb_seiko_wvga.c:129:			plat->reset();
drivers/video/mxc/mxcfb_seiko_wvga.c:131:		io_reg = regulator_get(&pdev->dev, plat->io_reg);
drivers/video/mxc/mxcfb_seiko_wvga.c:134:		core_reg = regulator_get(&pdev->dev, plat->core_reg);
drivers/video/mxc/mxcfb_seiko_wvga.c:142:		if (strcmp(registered_fb[i]->fix.id, "mxc_elcdif_fb") == 0) {
drivers/video/mxc/mxcfb_seiko_wvga.c:204:	dev_dbg(&plcd_dev->dev, "turning on LCD\n");
drivers/video/mxc/mxcfb_seiko_wvga.c:219:	dev_dbg(&plcd_dev->dev, "turning off LCD\n");
drivers/video/mxc/mxc_dispdrv.h:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxc_dispdrv.h:22:	/*input-feedback parameter*/
drivers/video/mxc/mxc_epdc_fb.c:2: * Copyright (C) 2010-2013 Freescale Semiconductor, Inc.
drivers/video/mxc/mxc_epdc_fb.c:16: * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
drivers/video/mxc/mxc_epdc_fb.c:36:#include <linux/dma-mapping.h>
drivers/video/mxc/mxc_epdc_fb.c:70:#define INVALID_LUT		(-1)
drivers/video/mxc/mxc_epdc_fb.c:287:	dev_info(fb_data->dev, "S0 fmt 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:288:		pxp_conf->s0_param.pixel_fmt);
drivers/video/mxc/mxc_epdc_fb.c:289:	dev_info(fb_data->dev, "S0 width 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:290:		pxp_conf->s0_param.width);
drivers/video/mxc/mxc_epdc_fb.c:291:	dev_info(fb_data->dev, "S0 height 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:292:		pxp_conf->s0_param.height);
drivers/video/mxc/mxc_epdc_fb.c:293:	dev_info(fb_data->dev, "S0 ckey 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:294:		pxp_conf->s0_param.color_key);
drivers/video/mxc/mxc_epdc_fb.c:295:	dev_info(fb_data->dev, "S0 ckey en 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:296:		pxp_conf->s0_param.color_key_enable);
drivers/video/mxc/mxc_epdc_fb.c:298:	dev_info(fb_data->dev, "OL0 combine en 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:299:		pxp_conf->ol_param[0].combine_enable);
drivers/video/mxc/mxc_epdc_fb.c:300:	dev_info(fb_data->dev, "OL0 fmt 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:301:		pxp_conf->ol_param[0].pixel_fmt);
drivers/video/mxc/mxc_epdc_fb.c:302:	dev_info(fb_data->dev, "OL0 width 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:303:		pxp_conf->ol_param[0].width);
drivers/video/mxc/mxc_epdc_fb.c:304:	dev_info(fb_data->dev, "OL0 height 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:305:		pxp_conf->ol_param[0].height);
drivers/video/mxc/mxc_epdc_fb.c:306:	dev_info(fb_data->dev, "OL0 ckey 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:307:		pxp_conf->ol_param[0].color_key);
drivers/video/mxc/mxc_epdc_fb.c:308:	dev_info(fb_data->dev, "OL0 ckey en 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:309:		pxp_conf->ol_param[0].color_key_enable);
drivers/video/mxc/mxc_epdc_fb.c:310:	dev_info(fb_data->dev, "OL0 alpha 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:311:		pxp_conf->ol_param[0].global_alpha);
drivers/video/mxc/mxc_epdc_fb.c:312:	dev_info(fb_data->dev, "OL0 alpha en 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:313:		pxp_conf->ol_param[0].global_alpha_enable);
drivers/video/mxc/mxc_epdc_fb.c:314:	dev_info(fb_data->dev, "OL0 local alpha en 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:315:		pxp_conf->ol_param[0].local_alpha_enable);
drivers/video/mxc/mxc_epdc_fb.c:317:	dev_info(fb_data->dev, "Out fmt 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:318:		pxp_conf->out_param.pixel_fmt);
drivers/video/mxc/mxc_epdc_fb.c:319:	dev_info(fb_data->dev, "Out width 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:320:		pxp_conf->out_param.width);
drivers/video/mxc/mxc_epdc_fb.c:321:	dev_info(fb_data->dev, "Out height 0x%x",
drivers/video/mxc/mxc_epdc_fb.c:322:		pxp_conf->out_param.height);
drivers/video/mxc/mxc_epdc_fb.c:324:	dev_info(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:326:		pxp_conf->proc_data.drect.left, pxp_conf->proc_data.drect.top,
drivers/video/mxc/mxc_epdc_fb.c:327:		pxp_conf->proc_data.drect.width,
drivers/video/mxc/mxc_epdc_fb.c:328:		pxp_conf->proc_data.drect.height);
drivers/video/mxc/mxc_epdc_fb.c:329:	dev_info(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:331:		pxp_conf->proc_data.srect.left, pxp_conf->proc_data.srect.top,
drivers/video/mxc/mxc_epdc_fb.c:332:		pxp_conf->proc_data.srect.width,
drivers/video/mxc/mxc_epdc_fb.c:333:		pxp_conf->proc_data.srect.height);
drivers/video/mxc/mxc_epdc_fb.c:334:	dev_info(fb_data->dev, "Scaling en 0x%x", pxp_conf->proc_data.scaling);
drivers/video/mxc/mxc_epdc_fb.c:335:	dev_info(fb_data->dev, "HFlip en 0x%x", pxp_conf->proc_data.hflip);
drivers/video/mxc/mxc_epdc_fb.c:336:	dev_info(fb_data->dev, "VFlip en 0x%x", pxp_conf->proc_data.vflip);
drivers/video/mxc/mxc_epdc_fb.c:337:	dev_info(fb_data->dev, "Rotation 0x%x", pxp_conf->proc_data.rotate);
drivers/video/mxc/mxc_epdc_fb.c:338:	dev_info(fb_data->dev, "BG Color 0x%x", pxp_conf->proc_data.bgcolor);
drivers/video/mxc/mxc_epdc_fb.c:407:		upd_data_list->update_desc->upd_data.update_region.left,
drivers/video/mxc/mxc_epdc_fb.c:408:		upd_data_list->update_desc->upd_data.update_region.top,
drivers/video/mxc/mxc_epdc_fb.c:409:		upd_data_list->update_desc->upd_data.update_region.width,
drivers/video/mxc/mxc_epdc_fb.c:410:		upd_data_list->update_desc->upd_data.update_region.height,
drivers/video/mxc/mxc_epdc_fb.c:411:		upd_data_list->update_desc->upd_data.waveform_mode,
drivers/video/mxc/mxc_epdc_fb.c:412:		upd_data_list->lut_num,
drivers/video/mxc/mxc_epdc_fb.c:413:		upd_data_list->collision_mask,
drivers/video/mxc/mxc_epdc_fb.c:414:		upd_data_list->update_desc->update_order);
drivers/video/mxc/mxc_epdc_fb.c:421:	dev_info(fb_data->dev, "Collision List:\n");
drivers/video/mxc/mxc_epdc_fb.c:422:	if (list_empty(&fb_data->upd_buf_collision_list))
drivers/video/mxc/mxc_epdc_fb.c:423:		dev_info(fb_data->dev, "Empty");
drivers/video/mxc/mxc_epdc_fb.c:424:	list_for_each_entry(plist, &fb_data->upd_buf_collision_list, list) {
drivers/video/mxc/mxc_epdc_fb.c:425:		dev_info(fb_data->dev, "Virt Addr = 0x%x, Phys Addr = 0x%x ",
drivers/video/mxc/mxc_epdc_fb.c:426:			(u32)plist->virt_addr, plist->phys_addr);
drivers/video/mxc/mxc_epdc_fb.c:427:		dump_update_data(fb_data->dev, plist);
drivers/video/mxc/mxc_epdc_fb.c:435:	dev_info(fb_data->dev, "Free List:\n");
drivers/video/mxc/mxc_epdc_fb.c:436:	if (list_empty(&fb_data->upd_buf_free_list))
drivers/video/mxc/mxc_epdc_fb.c:437:		dev_info(fb_data->dev, "Empty");
drivers/video/mxc/mxc_epdc_fb.c:438:	list_for_each_entry(plist, &fb_data->upd_buf_free_list, list)
drivers/video/mxc/mxc_epdc_fb.c:439:		dev_info(fb_data->dev, "Virt Addr = 0x%x, Phys Addr = 0x%x ",
drivers/video/mxc/mxc_epdc_fb.c:440:			(u32)plist->virt_addr, plist->phys_addr);
drivers/video/mxc/mxc_epdc_fb.c:447:	dev_info(fb_data->dev, "Queue:\n");
drivers/video/mxc/mxc_epdc_fb.c:448:	if (list_empty(&fb_data->upd_buf_queue))
drivers/video/mxc/mxc_epdc_fb.c:449:		dev_info(fb_data->dev, "Empty");
drivers/video/mxc/mxc_epdc_fb.c:450:	list_for_each_entry(plist, &fb_data->upd_buf_queue, list) {
drivers/video/mxc/mxc_epdc_fb.c:451:		dev_info(fb_data->dev, "Virt Addr = 0x%x, Phys Addr = 0x%x ",
drivers/video/mxc/mxc_epdc_fb.c:452:			(u32)plist->virt_addr, plist->phys_addr);
drivers/video/mxc/mxc_epdc_fb.c:453:		dump_update_data(fb_data->dev, plist);
drivers/video/mxc/mxc_epdc_fb.c:463:		upd_desc_list->upd_data.update_region.left,
drivers/video/mxc/mxc_epdc_fb.c:464:		upd_desc_list->upd_data.update_region.top,
drivers/video/mxc/mxc_epdc_fb.c:465:		upd_desc_list->upd_data.update_region.width,
drivers/video/mxc/mxc_epdc_fb.c:466:		upd_desc_list->upd_data.update_region.height,
drivers/video/mxc/mxc_epdc_fb.c:467:		upd_desc_list->upd_data.waveform_mode,
drivers/video/mxc/mxc_epdc_fb.c:468:		upd_desc_list->update_order);
drivers/video/mxc/mxc_epdc_fb.c:475:	dev_info(fb_data->dev, "Queue:\n");
drivers/video/mxc/mxc_epdc_fb.c:476:	if (list_empty(&fb_data->upd_pending_list))
drivers/video/mxc/mxc_epdc_fb.c:477:		dev_info(fb_data->dev, "Empty");
drivers/video/mxc/mxc_epdc_fb.c:478:	list_for_each_entry(plist, &fb_data->upd_pending_list, list)
drivers/video/mxc/mxc_epdc_fb.c:479:		dump_desc_data(fb_data->dev, plist);
drivers/video/mxc/mxc_epdc_fb.c:487:	dev_info(fb_data->dev, "Current update being processed:\n");
drivers/video/mxc/mxc_epdc_fb.c:488:	if (fb_data->cur_update == NULL)
drivers/video/mxc/mxc_epdc_fb.c:489:		dev_info(fb_data->dev, "No current update\n");
drivers/video/mxc/mxc_epdc_fb.c:491:		dump_update_data(fb_data->dev, fb_data->cur_update);
drivers/video/mxc/mxc_epdc_fb.c:508: * Start Low-Level EPDC Functions
drivers/video/mxc/mxc_epdc_fb.c:523:				__raw_writel(1 << (lut_num - 32),
drivers/video/mxc/mxc_epdc_fb.c:530:				__raw_writel(1 << (lut_num - 32),
drivers/video/mxc/mxc_epdc_fb.c:601:	/* Configure the auto-waveform look-up table based on waveform modes */
drivers/video/mxc/mxc_epdc_fb.c:604:	val = (wv_modes->mode_du << EPDC_AUTOWV_LUT_DATA_OFFSET) |
drivers/video/mxc/mxc_epdc_fb.c:607:	val = (wv_modes->mode_du << EPDC_AUTOWV_LUT_DATA_OFFSET) |
drivers/video/mxc/mxc_epdc_fb.c:610:	val = (wv_modes->mode_gc4 << EPDC_AUTOWV_LUT_DATA_OFFSET) |
drivers/video/mxc/mxc_epdc_fb.c:613:	val = (wv_modes->mode_gc8 << EPDC_AUTOWV_LUT_DATA_OFFSET) |
drivers/video/mxc/mxc_epdc_fb.c:616:	val = (wv_modes->mode_gc16 << EPDC_AUTOWV_LUT_DATA_OFFSET) |
drivers/video/mxc/mxc_epdc_fb.c:619:	val = (wv_modes->mode_gc32 << EPDC_AUTOWV_LUT_DATA_OFFSET) |
drivers/video/mxc/mxc_epdc_fb.c:673:		is_compl = val & (1 << (lut_num - 32)) ? true : false;
drivers/video/mxc/mxc_epdc_fb.c:686:		__raw_writel(1 << (lut_num - 32), EPDC_IRQ2_CLEAR);
drivers/video/mxc/mxc_epdc_fb.c:699:		is_active = val & (1 << (lut_num - 32)) ? true : false;
drivers/video/mxc/mxc_epdc_fb.c:737:	/* Available LUTs are reduced to 16 in 5-bit waveform mode */
drivers/video/mxc/mxc_epdc_fb.c:770:	 * --------------------------------------------------------
drivers/video/mxc/mxc_epdc_fb.c:870:	struct imx_epdc_fb_mode *epdc_mode = fb_data->cur_mode;
drivers/video/mxc/mxc_epdc_fb.c:871:	struct fb_var_screeninfo *screeninfo = &fb_data->epdc_fb_var;
drivers/video/mxc/mxc_epdc_fb.c:877:	clk_enable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:878:	clk_enable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:899:	/* EPDC_FORMAT - 2bit TFT and 4bit Buf pixel format */
drivers/video/mxc/mxc_epdc_fb.c:916:	/* EPDC_TEMP - Use default temp to get index */
drivers/video/mxc/mxc_epdc_fb.c:920:	epdc_set_screen_res(epdc_mode->vmode->xres, epdc_mode->vmode->yres);
drivers/video/mxc/mxc_epdc_fb.c:923:	/* Initialize all auto-wavefrom look-up values to 2 - GC16 */
drivers/video/mxc/mxc_epdc_fb.c:941:	    ((epdc_mode->vscan_holdoff << EPDC_TCE_CTRL_VSCAN_HOLDOFF_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:947:	epdc_set_horizontal_timing(screeninfo->left_margin,
drivers/video/mxc/mxc_epdc_fb.c:948:				   screeninfo->right_margin,
drivers/video/mxc/mxc_epdc_fb.c:949:				   screeninfo->hsync_len,
drivers/video/mxc/mxc_epdc_fb.c:950:				   screeninfo->hsync_len);
drivers/video/mxc/mxc_epdc_fb.c:953:	epdc_set_vertical_timing(screeninfo->upper_margin,
drivers/video/mxc/mxc_epdc_fb.c:954:				 screeninfo->lower_margin,
drivers/video/mxc/mxc_epdc_fb.c:955:				 screeninfo->vsync_len);
drivers/video/mxc/mxc_epdc_fb.c:959:	    ((epdc_mode->sdoed_width << EPDC_TCE_OE_SDOED_WIDTH_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:961:	    | ((epdc_mode->sdoed_delay << EPDC_TCE_OE_SDOED_DLY_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:963:	    | ((epdc_mode->sdoez_width << EPDC_TCE_OE_SDOEZ_WIDTH_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:965:	    | ((epdc_mode->sdoez_delay << EPDC_TCE_OE_SDOEZ_DLY_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:974:	    ((epdc_mode->gdclk_hp_offs << EPDC_TCE_TIMING2_GDCLK_HP_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:976:	    | ((epdc_mode->gdsp_offs << EPDC_TCE_TIMING2_GDSP_OFFSET_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:982:	    ((epdc_mode->gdoe_offs << EPDC_TCE_TIMING3_GDOE_OFFSET_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:984:	    | ((epdc_mode->gdclk_offs << EPDC_TCE_TIMING3_GDCLK_OFFSET_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:997:	num_ce = epdc_mode->num_ce;
drivers/video/mxc/mxc_epdc_fb.c:1004:	    | ((epdc_mode->vmode->xres/num_ce << EPDC_TCE_SDCFG_PIXELS_PER_CE_OFFSET) &
drivers/video/mxc/mxc_epdc_fb.c:1043:	__raw_writel(fb_data->waveform_buffer_phys, EPDC_WVADDR);
drivers/video/mxc/mxc_epdc_fb.c:1044:	__raw_writel(fb_data->working_buffer_phys, EPDC_WB_ADDR);
drivers/video/mxc/mxc_epdc_fb.c:1045:	__raw_writel(fb_data->working_buffer_phys, EPDC_WB_ADDR_TCE);
drivers/video/mxc/mxc_epdc_fb.c:1048:	clk_disable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:1049:	clk_disable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:1055:	mutex_lock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1061:	if (fb_data->powering_down)
drivers/video/mxc/mxc_epdc_fb.c:1062:		fb_data->powering_down = false;
drivers/video/mxc/mxc_epdc_fb.c:1064:	if (fb_data->power_state == POWER_STATE_ON) {
drivers/video/mxc/mxc_epdc_fb.c:1065:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1069:	dev_dbg(fb_data->dev, "EPDC Powerup\n");
drivers/video/mxc/mxc_epdc_fb.c:1071:	fb_data->updates_active = true;
drivers/video/mxc/mxc_epdc_fb.c:1074:	ret = regulator_enable(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_epdc_fb.c:1076:		dev_err(fb_data->dev, "Unable to enable V3P3 regulator."
drivers/video/mxc/mxc_epdc_fb.c:1078:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1085:	if (fb_data->pdata->enable_pins)
drivers/video/mxc/mxc_epdc_fb.c:1086:		fb_data->pdata->enable_pins();
drivers/video/mxc/mxc_epdc_fb.c:1089:	clk_enable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:1090:	clk_enable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:1095:	ret = regulator_enable(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:1097:		dev_err(fb_data->dev, "Unable to enable DISPLAY regulator."
drivers/video/mxc/mxc_epdc_fb.c:1099:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1102:	ret = regulator_enable(fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:1104:		dev_err(fb_data->dev, "Unable to enable VCOM regulator."
drivers/video/mxc/mxc_epdc_fb.c:1106:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1110:	fb_data->power_state = POWER_STATE_ON;
drivers/video/mxc/mxc_epdc_fb.c:1112:	mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1117:	mutex_lock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1120:	 * request is pre-empting this powerdown request.
drivers/video/mxc/mxc_epdc_fb.c:1122:	if (!fb_data->powering_down
drivers/video/mxc/mxc_epdc_fb.c:1123:		|| (fb_data->power_state == POWER_STATE_OFF)) {
drivers/video/mxc/mxc_epdc_fb.c:1124:		mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1128:	dev_dbg(fb_data->dev, "EPDC Powerdown\n");
drivers/video/mxc/mxc_epdc_fb.c:1131:	regulator_disable(fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:1132:	regulator_disable(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:1136:	clk_disable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:1137:	clk_disable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:1140:	if (fb_data->pdata->disable_pins)
drivers/video/mxc/mxc_epdc_fb.c:1141:		fb_data->pdata->disable_pins();
drivers/video/mxc/mxc_epdc_fb.c:1144:	regulator_disable(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_epdc_fb.c:1146:	fb_data->power_state = POWER_STATE_OFF;
drivers/video/mxc/mxc_epdc_fb.c:1147:	fb_data->powering_down = false;
drivers/video/mxc/mxc_epdc_fb.c:1149:	if (fb_data->wait_for_powerdown) {
drivers/video/mxc/mxc_epdc_fb.c:1150:		fb_data->wait_for_powerdown = false;
drivers/video/mxc/mxc_epdc_fb.c:1151:		complete(&fb_data->powerdown_compl);
drivers/video/mxc/mxc_epdc_fb.c:1154:	mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1161:	fb_data->in_init = true;
drivers/video/mxc/mxc_epdc_fb.c:1165:	fb_data->powering_down = true;
drivers/video/mxc/mxc_epdc_fb.c:1167:	fb_data->updates_active = false;
drivers/video/mxc/mxc_epdc_fb.c:1173:	unsigned long offset = vma->vm_pgoff << PAGE_SHIFT;
drivers/video/mxc/mxc_epdc_fb.c:1175:	if (offset < info->fix.smem_len) {
drivers/video/mxc/mxc_epdc_fb.c:1177:		len = info->fix.smem_len - offset;
drivers/video/mxc/mxc_epdc_fb.c:1178:		vma->vm_pgoff = (info->fix.smem_start + offset) >> PAGE_SHIFT;
drivers/video/mxc/mxc_epdc_fb.c:1180:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:1183:	if (vma->vm_end - vma->vm_start > len)
drivers/video/mxc/mxc_epdc_fb.c:1184:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:1187:	vma->vm_page_prot = pgprot_writecombine(vma->vm_page_prot);
drivers/video/mxc/mxc_epdc_fb.c:1189:	vma->vm_flags |= VM_IO | VM_RESERVED;
drivers/video/mxc/mxc_epdc_fb.c:1191:	if (remap_pfn_range(vma, vma->vm_start, vma->vm_pgoff,
drivers/video/mxc/mxc_epdc_fb.c:1192:			    vma->vm_end - vma->vm_start, vma->vm_page_prot)) {
drivers/video/mxc/mxc_epdc_fb.c:1193:		dev_dbg(info->device, "mmap remap_pfn_range failed\n");
drivers/video/mxc/mxc_epdc_fb.c:1194:		return -ENOBUFS;
drivers/video/mxc/mxc_epdc_fb.c:1203:	chan >>= 16 - bf->length;
drivers/video/mxc/mxc_epdc_fb.c:1204:	return chan << bf->offset;
drivers/video/mxc/mxc_epdc_fb.c:1217:	if (info->var.grayscale)
drivers/video/mxc/mxc_epdc_fb.c:1220:	switch (info->fix.visual) {
drivers/video/mxc/mxc_epdc_fb.c:1223:		 * 16-bit True Colour.  We encode the RGB value
drivers/video/mxc/mxc_epdc_fb.c:1227:			u32 *pal = info->pseudo_palette;
drivers/video/mxc/mxc_epdc_fb.c:1229:			val = _chan_to_field(red, &info->var.red);
drivers/video/mxc/mxc_epdc_fb.c:1230:			val |= _chan_to_field(green, &info->var.green);
drivers/video/mxc/mxc_epdc_fb.c:1231:			val |= _chan_to_field(blue, &info->var.blue);
drivers/video/mxc/mxc_epdc_fb.c:1254:	dev_dbg(fb_data->dev, "setcmap\n");
drivers/video/mxc/mxc_epdc_fb.c:1256:	if (info->fix.visual == FB_VISUAL_STATIC_PSEUDOCOLOR) {
drivers/video/mxc/mxc_epdc_fb.c:1257:		/* Only support an 8-bit, 256 entry lookup */
drivers/video/mxc/mxc_epdc_fb.c:1258:		if (cmap->len != 256)
drivers/video/mxc/mxc_epdc_fb.c:1263:		mutex_lock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1272:			fb_data->pxp_conf.proc_data.lut_map[i] = cmap->red[i] & 0xFF;
drivers/video/mxc/mxc_epdc_fb.c:1274:		fb_data->pxp_conf.proc_data.lut_map_updated = true;
drivers/video/mxc/mxc_epdc_fb.c:1276:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1278:		red     = cmap->red;
drivers/video/mxc/mxc_epdc_fb.c:1279:		green   = cmap->green;
drivers/video/mxc/mxc_epdc_fb.c:1280:		blue    = cmap->blue;
drivers/video/mxc/mxc_epdc_fb.c:1281:		transp  = cmap->transp;
drivers/video/mxc/mxc_epdc_fb.c:1282:		index   = cmap->start;
drivers/video/mxc/mxc_epdc_fb.c:1284:		for (count = 0; count < cmap->len; count++) {
drivers/video/mxc/mxc_epdc_fb.c:1307:			adj_update_region->top = update_region->top;
drivers/video/mxc/mxc_epdc_fb.c:1308:			adj_update_region->left = update_region->left;
drivers/video/mxc/mxc_epdc_fb.c:1309:			adj_update_region->width = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1310:			adj_update_region->height = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1313:			adj_update_region->top = update_region->left;
drivers/video/mxc/mxc_epdc_fb.c:1314:			adj_update_region->left = yres -
drivers/video/mxc/mxc_epdc_fb.c:1315:				(update_region->top + update_region->height);
drivers/video/mxc/mxc_epdc_fb.c:1316:			adj_update_region->width = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1317:			adj_update_region->height = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1320:			adj_update_region->width = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1321:			adj_update_region->height = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1322:			adj_update_region->top = yres -
drivers/video/mxc/mxc_epdc_fb.c:1323:				(update_region->top + update_region->height);
drivers/video/mxc/mxc_epdc_fb.c:1324:			adj_update_region->left = xres -
drivers/video/mxc/mxc_epdc_fb.c:1325:				(update_region->left + update_region->width);
drivers/video/mxc/mxc_epdc_fb.c:1328:			adj_update_region->left = update_region->top;
drivers/video/mxc/mxc_epdc_fb.c:1329:			adj_update_region->top = xres -
drivers/video/mxc/mxc_epdc_fb.c:1330:				(update_region->left + update_region->width);
drivers/video/mxc/mxc_epdc_fb.c:1331:			adj_update_region->width = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1332:			adj_update_region->height = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1341:			temp = update_region->top;
drivers/video/mxc/mxc_epdc_fb.c:1342:			update_region->top = update_region->left;
drivers/video/mxc/mxc_epdc_fb.c:1343:			update_region->left = yres -
drivers/video/mxc/mxc_epdc_fb.c:1344:				(temp + update_region->height);
drivers/video/mxc/mxc_epdc_fb.c:1345:			temp = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1346:			update_region->width = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1347:			update_region->height = temp;
drivers/video/mxc/mxc_epdc_fb.c:1350:			update_region->top = yres -
drivers/video/mxc/mxc_epdc_fb.c:1351:				(update_region->top + update_region->height);
drivers/video/mxc/mxc_epdc_fb.c:1352:			update_region->left = xres -
drivers/video/mxc/mxc_epdc_fb.c:1353:				(update_region->left + update_region->width);
drivers/video/mxc/mxc_epdc_fb.c:1356:			temp = update_region->left;
drivers/video/mxc/mxc_epdc_fb.c:1357:			update_region->left = update_region->top;
drivers/video/mxc/mxc_epdc_fb.c:1358:			update_region->top = xres -
drivers/video/mxc/mxc_epdc_fb.c:1359:				(temp + update_region->width);
drivers/video/mxc/mxc_epdc_fb.c:1360:			temp = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1361:			update_region->width = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1362:			update_region->height = temp;
drivers/video/mxc/mxc_epdc_fb.c:1374:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mxc_epdc_fb.c:1375:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mxc_epdc_fb.c:1377:	fix->line_length = var->xres_virtual * var->bits_per_pixel / 8;
drivers/video/mxc/mxc_epdc_fb.c:1379:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxc_epdc_fb.c:1380:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxc_epdc_fb.c:1381:	if (var->grayscale)
drivers/video/mxc/mxc_epdc_fb.c:1382:		fix->visual = FB_VISUAL_STATIC_PSEUDOCOLOR;
drivers/video/mxc/mxc_epdc_fb.c:1384:		fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxc_epdc_fb.c:1385:	fix->xpanstep = 1;
drivers/video/mxc/mxc_epdc_fb.c:1386:	fix->ypanstep = 1;
drivers/video/mxc/mxc_epdc_fb.c:1393: * the hardware state info->par and fix which can be affected by the
drivers/video/mxc/mxc_epdc_fb.c:1400:	struct pxp_config_data *pxp_conf = &fb_data->pxp_conf;
drivers/video/mxc/mxc_epdc_fb.c:1401:	struct pxp_proc_data *proc_data = &pxp_conf->proc_data;
drivers/video/mxc/mxc_epdc_fb.c:1402:	struct fb_var_screeninfo *screeninfo = &fb_data->info.var;
drivers/video/mxc/mxc_epdc_fb.c:1403:	struct imx_epdc_fb_mode *epdc_modes = fb_data->pdata->epdc_mode;
drivers/video/mxc/mxc_epdc_fb.c:1414:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1419:	xoffset_old = fb_data->epdc_fb_var.xoffset;
drivers/video/mxc/mxc_epdc_fb.c:1420:	yoffset_old = fb_data->epdc_fb_var.yoffset;
drivers/video/mxc/mxc_epdc_fb.c:1421:	fb_data->epdc_fb_var = *screeninfo;
drivers/video/mxc/mxc_epdc_fb.c:1422:	fb_data->epdc_fb_var.xoffset = xoffset_old;
drivers/video/mxc/mxc_epdc_fb.c:1423:	fb_data->epdc_fb_var.yoffset = yoffset_old;
drivers/video/mxc/mxc_epdc_fb.c:1424:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1426:	mutex_lock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1433:	/* Initialize non-channel-specific PxP parameters */
drivers/video/mxc/mxc_epdc_fb.c:1434:	proc_data->drect.left = proc_data->srect.left = 0;
drivers/video/mxc/mxc_epdc_fb.c:1435:	proc_data->drect.top = proc_data->srect.top = 0;
drivers/video/mxc/mxc_epdc_fb.c:1436:	proc_data->drect.width = proc_data->srect.width = screeninfo->xres;
drivers/video/mxc/mxc_epdc_fb.c:1437:	proc_data->drect.height = proc_data->srect.height = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:1438:	proc_data->scaling = 0;
drivers/video/mxc/mxc_epdc_fb.c:1439:	proc_data->hflip = 0;
drivers/video/mxc/mxc_epdc_fb.c:1440:	proc_data->vflip = 0;
drivers/video/mxc/mxc_epdc_fb.c:1441:	proc_data->rotate = screeninfo->rotate;
drivers/video/mxc/mxc_epdc_fb.c:1442:	proc_data->bgcolor = 0;
drivers/video/mxc/mxc_epdc_fb.c:1443:	proc_data->overlay_state = 0;
drivers/video/mxc/mxc_epdc_fb.c:1444:	proc_data->lut_transform = PXP_LUT_NONE;
drivers/video/mxc/mxc_epdc_fb.c:1450:	if (screeninfo->grayscale)
drivers/video/mxc/mxc_epdc_fb.c:1451:		pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_GREY;
drivers/video/mxc/mxc_epdc_fb.c:1453:		switch (screeninfo->bits_per_pixel) {
drivers/video/mxc/mxc_epdc_fb.c:1455:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_epdc_fb.c:1458:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB24;
drivers/video/mxc/mxc_epdc_fb.c:1461:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB32;
drivers/video/mxc/mxc_epdc_fb.c:1464:			pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_epdc_fb.c:1468:	pxp_conf->s0_param.width = screeninfo->xres_virtual;
drivers/video/mxc/mxc_epdc_fb.c:1469:	pxp_conf->s0_param.height = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:1470:	pxp_conf->s0_param.color_key = -1;
drivers/video/mxc/mxc_epdc_fb.c:1471:	pxp_conf->s0_param.color_key_enable = false;
drivers/video/mxc/mxc_epdc_fb.c:1475:	 * Output is Y-only greyscale
drivers/video/mxc/mxc_epdc_fb.c:1478:	pxp_conf->out_param.width = screeninfo->xres;
drivers/video/mxc/mxc_epdc_fb.c:1479:	pxp_conf->out_param.height = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:1480:	pxp_conf->out_param.pixel_fmt = PXP_PIX_FMT_GREY;
drivers/video/mxc/mxc_epdc_fb.c:1482:	mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1488:	if (!fb_data->hw_ready) {
drivers/video/mxc/mxc_epdc_fb.c:1496:		if ((screeninfo->rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_epdc_fb.c:1497:			(screeninfo->rotate == FB_ROTATE_CCW)) {
drivers/video/mxc/mxc_epdc_fb.c:1507:		if (fb_data->cur_mode &&
drivers/video/mxc/mxc_epdc_fb.c:1508:			!fb_mode_is_equal(fb_data->cur_mode->vmode,
drivers/video/mxc/mxc_epdc_fb.c:1513:			for (i = 0; i < fb_data->pdata->num_modes; i++) {
drivers/video/mxc/mxc_epdc_fb.c:1517:				fb_data->cur_mode = &epdc_modes[i];
drivers/video/mxc/mxc_epdc_fb.c:1523:				dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:1530:		/* Found a match - Grab timing params */
drivers/video/mxc/mxc_epdc_fb.c:1531:		screeninfo->left_margin = mode.left_margin;
drivers/video/mxc/mxc_epdc_fb.c:1532:		screeninfo->right_margin = mode.right_margin;
drivers/video/mxc/mxc_epdc_fb.c:1533:		screeninfo->upper_margin = mode.upper_margin;
drivers/video/mxc/mxc_epdc_fb.c:1534:		screeninfo->lower_margin = mode.lower_margin;
drivers/video/mxc/mxc_epdc_fb.c:1535:		screeninfo->hsync_len = mode.hsync_len;
drivers/video/mxc/mxc_epdc_fb.c:1536:		screeninfo->vsync_len = mode.vsync_len;
drivers/video/mxc/mxc_epdc_fb.c:1538:		fb_data->hw_initializing = true;
drivers/video/mxc/mxc_epdc_fb.c:1544:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:1555:	fb_data->eof_sync_period = (fb_data->cur_mode->vscan_holdoff + 1) *
drivers/video/mxc/mxc_epdc_fb.c:1556:		1000000/(fb_data->cur_mode->vmode->refresh *
drivers/video/mxc/mxc_epdc_fb.c:1557:		(fb_data->cur_mode->vmode->upper_margin +
drivers/video/mxc/mxc_epdc_fb.c:1558:		fb_data->cur_mode->vmode->yres +
drivers/video/mxc/mxc_epdc_fb.c:1559:		fb_data->cur_mode->vmode->lower_margin +
drivers/video/mxc/mxc_epdc_fb.c:1560:		fb_data->cur_mode->vmode->vsync_len)) + 25;
drivers/video/mxc/mxc_epdc_fb.c:1572:	if (!var->xres)
drivers/video/mxc/mxc_epdc_fb.c:1573:		var->xres = 1;
drivers/video/mxc/mxc_epdc_fb.c:1574:	if (!var->yres)
drivers/video/mxc/mxc_epdc_fb.c:1575:		var->yres = 1;
drivers/video/mxc/mxc_epdc_fb.c:1577:	if (var->xres_virtual < var->xoffset + var->xres)
drivers/video/mxc/mxc_epdc_fb.c:1578:		var->xres_virtual = var->xoffset + var->xres;
drivers/video/mxc/mxc_epdc_fb.c:1579:	if (var->yres_virtual < var->yoffset + var->yres)
drivers/video/mxc/mxc_epdc_fb.c:1580:		var->yres_virtual = var->yoffset + var->yres;
drivers/video/mxc/mxc_epdc_fb.c:1582:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mxc_epdc_fb.c:1583:	    (var->bits_per_pixel != 16) && (var->bits_per_pixel != 8))
drivers/video/mxc/mxc_epdc_fb.c:1584:		var->bits_per_pixel = default_bpp;
drivers/video/mxc/mxc_epdc_fb.c:1586:	switch (var->bits_per_pixel) {
drivers/video/mxc/mxc_epdc_fb.c:1588:		if (var->grayscale != 0) {
drivers/video/mxc/mxc_epdc_fb.c:1590:			 * For 8-bit grayscale, R, G, and B offset are equal.
drivers/video/mxc/mxc_epdc_fb.c:1593:			var->red.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1594:			var->red.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1595:			var->red.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1597:			var->green.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1598:			var->green.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1599:			var->green.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1601:			var->blue.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1602:			var->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1603:			var->blue.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1605:			var->transp.length = 0;
drivers/video/mxc/mxc_epdc_fb.c:1606:			var->transp.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1607:			var->transp.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1609:			var->red.length = 3;
drivers/video/mxc/mxc_epdc_fb.c:1610:			var->red.offset = 5;
drivers/video/mxc/mxc_epdc_fb.c:1611:			var->red.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1613:			var->green.length = 3;
drivers/video/mxc/mxc_epdc_fb.c:1614:			var->green.offset = 2;
drivers/video/mxc/mxc_epdc_fb.c:1615:			var->green.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1617:			var->blue.length = 2;
drivers/video/mxc/mxc_epdc_fb.c:1618:			var->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1619:			var->blue.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1621:			var->transp.length = 0;
drivers/video/mxc/mxc_epdc_fb.c:1622:			var->transp.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1623:			var->transp.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1627:		var->red.length = 5;
drivers/video/mxc/mxc_epdc_fb.c:1628:		var->red.offset = 11;
drivers/video/mxc/mxc_epdc_fb.c:1629:		var->red.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1631:		var->green.length = 6;
drivers/video/mxc/mxc_epdc_fb.c:1632:		var->green.offset = 5;
drivers/video/mxc/mxc_epdc_fb.c:1633:		var->green.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1635:		var->blue.length = 5;
drivers/video/mxc/mxc_epdc_fb.c:1636:		var->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1637:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1639:		var->transp.length = 0;
drivers/video/mxc/mxc_epdc_fb.c:1640:		var->transp.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1641:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1644:		var->red.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1645:		var->red.offset = 16;
drivers/video/mxc/mxc_epdc_fb.c:1646:		var->red.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1648:		var->green.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1649:		var->green.offset = 8;
drivers/video/mxc/mxc_epdc_fb.c:1650:		var->green.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1652:		var->blue.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1653:		var->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1654:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1656:		var->transp.length = 0;
drivers/video/mxc/mxc_epdc_fb.c:1657:		var->transp.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1658:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1661:		var->red.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1662:		var->red.offset = 16;
drivers/video/mxc/mxc_epdc_fb.c:1663:		var->red.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1665:		var->green.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1666:		var->green.offset = 8;
drivers/video/mxc/mxc_epdc_fb.c:1667:		var->green.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1669:		var->blue.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1670:		var->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:1671:		var->blue.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1673:		var->transp.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:1674:		var->transp.offset = 24;
drivers/video/mxc/mxc_epdc_fb.c:1675:		var->transp.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:1679:	switch (var->rotate) {
drivers/video/mxc/mxc_epdc_fb.c:1682:		var->xres = fb_data->native_width;
drivers/video/mxc/mxc_epdc_fb.c:1683:		var->yres = fb_data->native_height;
drivers/video/mxc/mxc_epdc_fb.c:1687:		var->xres = fb_data->native_height;
drivers/video/mxc/mxc_epdc_fb.c:1688:		var->yres = fb_data->native_width;
drivers/video/mxc/mxc_epdc_fb.c:1692:		var->rotate = 0;
drivers/video/mxc/mxc_epdc_fb.c:1693:		dev_dbg(fb_data->dev, "Invalid rotation request\n");
drivers/video/mxc/mxc_epdc_fb.c:1694:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:1697:	var->xres_virtual = ALIGN(var->xres, 32);
drivers/video/mxc/mxc_epdc_fb.c:1698:	var->yres_virtual = ALIGN(var->yres, 128) * fb_data->num_screens;
drivers/video/mxc/mxc_epdc_fb.c:1700:	var->height = -1;
drivers/video/mxc/mxc_epdc_fb.c:1701:	var->width = -1;
drivers/video/mxc/mxc_epdc_fb.c:1712:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1714:	memcpy(&fb_data->wv_modes, modes, sizeof(struct mxcfb_waveform_modes));
drivers/video/mxc/mxc_epdc_fb.c:1718:	fb_data->wv_modes_update = true;
drivers/video/mxc/mxc_epdc_fb.c:1720:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1727:	int index = -1;
drivers/video/mxc/mxc_epdc_fb.c:1729:	if (fb_data->trt_entries == 0) {
drivers/video/mxc/mxc_epdc_fb.c:1730:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:1736:	for (i = 0; i < fb_data->trt_entries - 1; i++) {
drivers/video/mxc/mxc_epdc_fb.c:1737:		if ((temp >= fb_data->temp_range_bounds[i])
drivers/video/mxc/mxc_epdc_fb.c:1738:			&& (temp < fb_data->temp_range_bounds[i+1])) {
drivers/video/mxc/mxc_epdc_fb.c:1745:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:1750:	dev_dbg(fb_data->dev, "Using temperature index %d\n", index);
drivers/video/mxc/mxc_epdc_fb.c:1761:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1762:	fb_data->temp_index = mxc_epdc_fb_get_temp_index(fb_data, temperature);
drivers/video/mxc/mxc_epdc_fb.c:1763:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1774:	dev_dbg(fb_data->dev, "Setting auto update mode to %d\n", auto_mode);
drivers/video/mxc/mxc_epdc_fb.c:1778:		fb_data->auto_mode = auto_mode;
drivers/video/mxc/mxc_epdc_fb.c:1780:		dev_err(fb_data->dev, "Invalid auto update mode parameter.\n");
drivers/video/mxc/mxc_epdc_fb.c:1781:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:1793:	dev_dbg(fb_data->dev, "Setting optimization level to %d\n", upd_scheme);
drivers/video/mxc/mxc_epdc_fb.c:1804:		fb_data->upd_scheme = upd_scheme;
drivers/video/mxc/mxc_epdc_fb.c:1806:		dev_err(fb_data->dev, "Invalid update scheme specified.\n");
drivers/video/mxc/mxc_epdc_fb.c:1807:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:1818:		&upd_data_list->update_desc->upd_data;
drivers/video/mxc/mxc_epdc_fb.c:1820:	unsigned char *temp_buf_ptr = fb_data->virt_addr_copybuf;
drivers/video/mxc/mxc_epdc_fb.c:1825:	int bpp = fb_data->epdc_fb_var.bits_per_pixel;
drivers/video/mxc/mxc_epdc_fb.c:1831:	if (upd_data->flags & EPDC_FLAG_USE_ALT_BUFFER) {
drivers/video/mxc/mxc_epdc_fb.c:1832:		src_upd_region = &upd_data->alt_buffer_data.alt_update_region;
drivers/video/mxc/mxc_epdc_fb.c:1834:			upd_data->alt_buffer_data.width * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1835:		alt_buf_offset = upd_data->alt_buffer_data.phys_addr -
drivers/video/mxc/mxc_epdc_fb.c:1836:			fb_data->info.fix.smem_start;
drivers/video/mxc/mxc_epdc_fb.c:1837:		src_ptr = fb_data->info.screen_base + alt_buf_offset
drivers/video/mxc/mxc_epdc_fb.c:1838:			+ src_upd_region->top * src_stride;
drivers/video/mxc/mxc_epdc_fb.c:1840:		src_upd_region = &upd_data->update_region;
drivers/video/mxc/mxc_epdc_fb.c:1841:		src_stride = fb_data->epdc_fb_var.xres_virtual * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1842:		src_ptr = fb_data->info.screen_base + fb_data->fb_offset
drivers/video/mxc/mxc_epdc_fb.c:1843:			+ src_upd_region->top * src_stride;
drivers/video/mxc/mxc_epdc_fb.c:1846:	temp_buf_stride = ALIGN(src_upd_region->width, 8) * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1847:	left_offs = src_upd_region->left * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1848:	right_offs = src_upd_region->width * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1849:	x_trailing_bytes = (ALIGN(src_upd_region->width, 8)
drivers/video/mxc/mxc_epdc_fb.c:1850:		- src_upd_region->width) * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1852:	for (i = 0; i < src_upd_region->height; i++) {
drivers/video/mxc/mxc_epdc_fb.c:1855:			src_upd_region->width * bpp/8);
drivers/video/mxc/mxc_epdc_fb.c:1858:		if (src_upd_region->width & 0x7) {
drivers/video/mxc/mxc_epdc_fb.c:1868:	if (src_upd_region->height & 0x7) {
drivers/video/mxc/mxc_epdc_fb.c:1869:		y_trailing_bytes = (ALIGN(src_upd_region->height, 8)
drivers/video/mxc/mxc_epdc_fb.c:1870:			- src_upd_region->height) *
drivers/video/mxc/mxc_epdc_fb.c:1871:			ALIGN(src_upd_region->width, 8) * bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:1892:	struct update_desc_list *upd_desc_list = upd_data_list->update_desc;
drivers/video/mxc/mxc_epdc_fb.c:1899:	 * Note: Applies to pre-2.0 versions of EPDC/PxP
drivers/video/mxc/mxc_epdc_fb.c:1906:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_USE_ALT_BUFFER) {
drivers/video/mxc/mxc_epdc_fb.c:1907:		src_width = upd_desc_list->upd_data.alt_buffer_data.width;
drivers/video/mxc/mxc_epdc_fb.c:1908:		src_height = upd_desc_list->upd_data.alt_buffer_data.height;
drivers/video/mxc/mxc_epdc_fb.c:1909:		src_upd_region = &upd_desc_list->upd_data.alt_buffer_data.alt_update_region;
drivers/video/mxc/mxc_epdc_fb.c:1911:		src_width = fb_data->epdc_fb_var.xres_virtual;
drivers/video/mxc/mxc_epdc_fb.c:1912:		src_height = fb_data->epdc_fb_var.yres;
drivers/video/mxc/mxc_epdc_fb.c:1913:		src_upd_region = &upd_desc_list->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:1916:	bytes_per_pixel = fb_data->epdc_fb_var.bits_per_pixel/8;
drivers/video/mxc/mxc_epdc_fb.c:1919:	 * SW workaround for PxP limitation (for pre-v2.0 HW)
drivers/video/mxc/mxc_epdc_fb.c:1925:	 * are considered for auto-waveform mode selection. If the
drivers/video/mxc/mxc_epdc_fb.c:1927:	 * will be considered in auto-waveform mode selection.
drivers/video/mxc/mxc_epdc_fb.c:1929:	 * 2) PxP input must be 32-bit aligned, so any update
drivers/video/mxc/mxc_epdc_fb.c:1930:	 * address not 32-bit aligned must be shifted to meet the
drivers/video/mxc/mxc_epdc_fb.c:1931:	 * 32-bit alignment.  The PxP will thus end up processing pixels
drivers/video/mxc/mxc_epdc_fb.c:1933:	 * which can affect auto-waveform mode selection.
drivers/video/mxc/mxc_epdc_fb.c:1935:	 * 3) If input fails 32-bit alignment, and the resulting expansion
drivers/video/mxc/mxc_epdc_fb.c:1945:	width_unaligned = src_upd_region->width & 0x7;
drivers/video/mxc/mxc_epdc_fb.c:1946:	height_unaligned = src_upd_region->height & 0x7;
drivers/video/mxc/mxc_epdc_fb.c:1948:	offset_from_4 = src_upd_region->left & 0x3;
drivers/video/mxc/mxc_epdc_fb.c:1954:	if ((((fb_data->epdc_fb_var.rotate == FB_ROTATE_UR) ||
drivers/video/mxc/mxc_epdc_fb.c:1955:		fb_data->epdc_fb_var.rotate == FB_ROTATE_UD)) &&
drivers/video/mxc/mxc_epdc_fb.c:1956:		(ALIGN(src_upd_region->width, 8) <
drivers/video/mxc/mxc_epdc_fb.c:1957:			ALIGN(src_upd_region->width + pix_per_line_added, 8)))
drivers/video/mxc/mxc_epdc_fb.c:1962:	mutex_lock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:1965:		(upd_desc_list->upd_data.waveform_mode == WAVEFORM_MODE_AUTO))
drivers/video/mxc/mxc_epdc_fb.c:1966:		|| line_overflow) && (fb_data->rev < 20)) ||
drivers/video/mxc/mxc_epdc_fb.c:1967:		fb_data->restrict_width) {
drivers/video/mxc/mxc_epdc_fb.c:1968:		dev_dbg(fb_data->dev, "Copying update before processing.\n");
drivers/video/mxc/mxc_epdc_fb.c:1971:		src_width = ALIGN(src_upd_region->width, 8);
drivers/video/mxc/mxc_epdc_fb.c:1972:		src_height = ALIGN(src_upd_region->height, 8);
drivers/video/mxc/mxc_epdc_fb.c:1982:		temp_buf_upd_region.width = src_upd_region->width;
drivers/video/mxc/mxc_epdc_fb.c:1983:		temp_buf_upd_region.height = src_upd_region->height;
drivers/video/mxc/mxc_epdc_fb.c:1990:	 * For pre-2.0 HW, input address must be 32-bit aligned
drivers/video/mxc/mxc_epdc_fb.c:1993:	offset_from_4 = src_upd_region->left & 0x3;
drivers/video/mxc/mxc_epdc_fb.c:1996:	if ((fb_data->rev < 20) && input_unaligned) {
drivers/video/mxc/mxc_epdc_fb.c:1999:			(src_upd_region->top * src_width + src_upd_region->left)
drivers/video/mxc/mxc_epdc_fb.c:2006:			(src_upd_region->top * src_width + src_upd_region->left)
drivers/video/mxc/mxc_epdc_fb.c:2015:	 * need to align width & height (rotation always requires 8-pixel
drivers/video/mxc/mxc_epdc_fb.c:2018:	if ((fb_data->epdc_fb_var.rotate == 0) && (fb_data->rev >= 20)) {
drivers/video/mxc/mxc_epdc_fb.c:2019:		pxp_upd_region.width = src_upd_region->width;
drivers/video/mxc/mxc_epdc_fb.c:2020:		pxp_upd_region.height = src_upd_region->height;
drivers/video/mxc/mxc_epdc_fb.c:2023:		pxp_upd_region.width = ALIGN(src_upd_region->width + pxp_upd_region.left, 8);
drivers/video/mxc/mxc_epdc_fb.c:2024:		pxp_upd_region.height = ALIGN(src_upd_region->height, 8);
drivers/video/mxc/mxc_epdc_fb.c:2027:	switch (fb_data->epdc_fb_var.rotate) {
drivers/video/mxc/mxc_epdc_fb.c:2036:		post_rotation_xcoord = width_pxp_blocks - src_upd_region->height;
drivers/video/mxc/mxc_epdc_fb.c:2041:		post_rotation_xcoord = width_pxp_blocks - src_upd_region->width - pxp_upd_region.left;
drivers/video/mxc/mxc_epdc_fb.c:2042:		post_rotation_ycoord = pxp_upd_region.height - src_upd_region->height - pxp_upd_region.top;
drivers/video/mxc/mxc_epdc_fb.c:2047:		post_rotation_ycoord = pxp_upd_region.width - src_upd_region->width - pxp_upd_region.left;
drivers/video/mxc/mxc_epdc_fb.c:2055:	if (fb_data->rev < 20) {
drivers/video/mxc/mxc_epdc_fb.c:2057:			- post_rotation_xcoord;
drivers/video/mxc/mxc_epdc_fb.c:2062:		upd_desc_list->epdc_offs = ALIGN(pxp_output_offs, 8);
drivers/video/mxc/mxc_epdc_fb.c:2068:		upd_desc_list->epdc_offs = pxp_output_offs;
drivers/video/mxc/mxc_epdc_fb.c:2071:	upd_desc_list->epdc_stride = width_pxp_blocks;
drivers/video/mxc/mxc_epdc_fb.c:2076:		sg_dma_address(&fb_data->sg[0]) =
drivers/video/mxc/mxc_epdc_fb.c:2077:			fb_data->phys_addr_copybuf;
drivers/video/mxc/mxc_epdc_fb.c:2078:	else if (upd_desc_list->upd_data.flags & EPDC_FLAG_USE_ALT_BUFFER)
drivers/video/mxc/mxc_epdc_fb.c:2079:		sg_dma_address(&fb_data->sg[0]) =
drivers/video/mxc/mxc_epdc_fb.c:2080:			upd_desc_list->upd_data.alt_buffer_data.phys_addr
drivers/video/mxc/mxc_epdc_fb.c:2083:		sg_dma_address(&fb_data->sg[0]) =
drivers/video/mxc/mxc_epdc_fb.c:2084:			fb_data->info.fix.smem_start + fb_data->fb_offset
drivers/video/mxc/mxc_epdc_fb.c:2086:		sg_set_page(&fb_data->sg[0],
drivers/video/mxc/mxc_epdc_fb.c:2087:			virt_to_page(fb_data->info.screen_base),
drivers/video/mxc/mxc_epdc_fb.c:2088:			fb_data->info.fix.smem_len,
drivers/video/mxc/mxc_epdc_fb.c:2089:			offset_in_page(fb_data->info.screen_base));
drivers/video/mxc/mxc_epdc_fb.c:2093:	sg_dma_address(&fb_data->sg[1]) = upd_data_list->phys_addr
drivers/video/mxc/mxc_epdc_fb.c:2095:	sg_set_page(&fb_data->sg[1], virt_to_page(upd_data_list->virt_addr),
drivers/video/mxc/mxc_epdc_fb.c:2096:		    fb_data->max_pix_size,
drivers/video/mxc/mxc_epdc_fb.c:2097:		    offset_in_page(upd_data_list->virt_addr));
drivers/video/mxc/mxc_epdc_fb.c:2102:	fb_data->pxp_conf.proc_data.lut_transform = 0;
drivers/video/mxc/mxc_epdc_fb.c:2103:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_ENABLE_INVERSION)
drivers/video/mxc/mxc_epdc_fb.c:2104:		fb_data->pxp_conf.proc_data.lut_transform |= PXP_LUT_INVERT;
drivers/video/mxc/mxc_epdc_fb.c:2105:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_FORCE_MONOCHROME)
drivers/video/mxc/mxc_epdc_fb.c:2106:		fb_data->pxp_conf.proc_data.lut_transform |=
drivers/video/mxc/mxc_epdc_fb.c:2108:	if (upd_desc_list->upd_data.flags & EPDC_FLAG_USE_CMAP)
drivers/video/mxc/mxc_epdc_fb.c:2109:		fb_data->pxp_conf.proc_data.lut_transform |=
drivers/video/mxc/mxc_epdc_fb.c:2113:	 * Toggle inversion processing if 8-bit
drivers/video/mxc/mxc_epdc_fb.c:2116:	if (fb_data->epdc_fb_var.grayscale == GRAYSCALE_8BIT_INVERTED)
drivers/video/mxc/mxc_epdc_fb.c:2117:		fb_data->pxp_conf.proc_data.lut_transform ^= PXP_LUT_INVERT;
drivers/video/mxc/mxc_epdc_fb.c:2123:		dev_err(fb_data->dev, "Unable to submit PxP update task.\n");
drivers/video/mxc/mxc_epdc_fb.c:2124:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2129:	if ((fb_data->power_state == POWER_STATE_OFF)
drivers/video/mxc/mxc_epdc_fb.c:2130:		|| fb_data->powering_down) {
drivers/video/mxc/mxc_epdc_fb.c:2137:		dev_err(fb_data->dev, "Unable to complete PxP update task.\n");
drivers/video/mxc/mxc_epdc_fb.c:2138:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2142:	mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2145:	if ((fb_data->rev <= 20) &&
drivers/video/mxc/mxc_epdc_fb.c:2146:		(upd_desc_list->upd_data.waveform_mode == WAVEFORM_MODE_AUTO)) {
drivers/video/mxc/mxc_epdc_fb.c:2148:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_epdc_fb.c:2149:				fb_data->wv_modes.mode_du;
drivers/video/mxc/mxc_epdc_fb.c:2151:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_epdc_fb.c:2152:				fb_data->wv_modes.mode_gc4;
drivers/video/mxc/mxc_epdc_fb.c:2154:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_epdc_fb.c:2155:				fb_data->wv_modes.mode_gc8;
drivers/video/mxc/mxc_epdc_fb.c:2157:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_epdc_fb.c:2158:				fb_data->wv_modes.mode_gc16;
drivers/video/mxc/mxc_epdc_fb.c:2160:			upd_desc_list->upd_data.waveform_mode =
drivers/video/mxc/mxc_epdc_fb.c:2161:				fb_data->wv_modes.mode_gc32;
drivers/video/mxc/mxc_epdc_fb.c:2163:		dev_dbg(fb_data->dev, "hist_stat = 0x%x, new waveform = 0x%x\n",
drivers/video/mxc/mxc_epdc_fb.c:2164:			hist_stat, upd_desc_list->upd_data.waveform_mode);
drivers/video/mxc/mxc_epdc_fb.c:2179:	a = &upd_desc_list->upd_data;
drivers/video/mxc/mxc_epdc_fb.c:2180:	b = &update_to_merge->upd_data;
drivers/video/mxc/mxc_epdc_fb.c:2181:	arect = &upd_desc_list->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:2182:	brect = &update_to_merge->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:2184:	/* Do not merge a dry-run collision test update */
drivers/video/mxc/mxc_epdc_fb.c:2185:	if ((a->flags & EPDC_FLAG_TEST_COLLISION) ||
drivers/video/mxc/mxc_epdc_fb.c:2186:		(b->flags & EPDC_FLAG_TEST_COLLISION))
drivers/video/mxc/mxc_epdc_fb.c:2193:	if (a->flags != b->flags) {
drivers/video/mxc/mxc_epdc_fb.c:2198:		if ((arect->left != brect->left) ||
drivers/video/mxc/mxc_epdc_fb.c:2199:			(arect->top != brect->top) ||
drivers/video/mxc/mxc_epdc_fb.c:2200:			(arect->width != brect->width) ||
drivers/video/mxc/mxc_epdc_fb.c:2201:			(arect->height != brect->height))
drivers/video/mxc/mxc_epdc_fb.c:2207:	if (a->update_mode != b->update_mode)
drivers/video/mxc/mxc_epdc_fb.c:2208:		a->update_mode = UPDATE_MODE_FULL;
drivers/video/mxc/mxc_epdc_fb.c:2210:	if (a->waveform_mode != b->waveform_mode)
drivers/video/mxc/mxc_epdc_fb.c:2211:		a->waveform_mode = WAVEFORM_MODE_AUTO;
drivers/video/mxc/mxc_epdc_fb.c:2213:	if (arect->left > (brect->left + brect->width) ||
drivers/video/mxc/mxc_epdc_fb.c:2214:		brect->left > (arect->left + arect->width) ||
drivers/video/mxc/mxc_epdc_fb.c:2215:		arect->top > (brect->top + brect->height) ||
drivers/video/mxc/mxc_epdc_fb.c:2216:		brect->top > (arect->top + arect->height))
drivers/video/mxc/mxc_epdc_fb.c:2219:	combine.left = arect->left < brect->left ? arect->left : brect->left;
drivers/video/mxc/mxc_epdc_fb.c:2220:	combine.top = arect->top < brect->top ? arect->top : brect->top;
drivers/video/mxc/mxc_epdc_fb.c:2221:	combine.width = (arect->left + arect->width) >
drivers/video/mxc/mxc_epdc_fb.c:2222:			(brect->left + brect->width) ?
drivers/video/mxc/mxc_epdc_fb.c:2223:			(arect->left + arect->width - combine.left) :
drivers/video/mxc/mxc_epdc_fb.c:2224:			(brect->left + brect->width - combine.left);
drivers/video/mxc/mxc_epdc_fb.c:2225:	combine.height = (arect->top + arect->height) >
drivers/video/mxc/mxc_epdc_fb.c:2226:			(brect->top + brect->height) ?
drivers/video/mxc/mxc_epdc_fb.c:2227:			(arect->top + arect->height - combine.top) :
drivers/video/mxc/mxc_epdc_fb.c:2228:			(brect->top + brect->height - combine.top);
drivers/video/mxc/mxc_epdc_fb.c:2231:	if (fb_data->restrict_width) {
drivers/video/mxc/mxc_epdc_fb.c:2234:		if (fb_data->epdc_fb_var.rotate != FB_ROTATE_UR)
drivers/video/mxc/mxc_epdc_fb.c:2235:			max_width -= EPDC_V2_ROTATION_ALIGNMENT;
drivers/video/mxc/mxc_epdc_fb.c:2236:		if ((fb_data->epdc_fb_var.rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_epdc_fb.c:2237:			(fb_data->epdc_fb_var.rotate == FB_ROTATE_CCW))
drivers/video/mxc/mxc_epdc_fb.c:2247:		a->flags = b->flags;
drivers/video/mxc/mxc_epdc_fb.c:2250:	list_splice_tail(&update_to_merge->upd_marker_list,
drivers/video/mxc/mxc_epdc_fb.c:2251:		&upd_desc_list->upd_marker_list);
drivers/video/mxc/mxc_epdc_fb.c:2254:	upd_desc_list->update_order =
drivers/video/mxc/mxc_epdc_fb.c:2255:		(upd_desc_list->update_order > update_to_merge->update_order) ?
drivers/video/mxc/mxc_epdc_fb.c:2256:		update_to_merge->update_order : upd_desc_list->update_order;
drivers/video/mxc/mxc_epdc_fb.c:2278:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2286:				&fb_data->upd_buf_collision_list, list) {
drivers/video/mxc/mxc_epdc_fb.c:2288:		if (next_update->collision_mask != 0)
drivers/video/mxc/mxc_epdc_fb.c:2291:		dev_dbg(fb_data->dev, "A collision update is ready to go!\n");
drivers/video/mxc/mxc_epdc_fb.c:2294:		next_update->update_desc->upd_data.waveform_mode =
drivers/video/mxc/mxc_epdc_fb.c:2303:			list_del_init(&next_update->list);
drivers/video/mxc/mxc_epdc_fb.c:2304:			if (fb_data->upd_scheme == UPDATE_SCHEME_QUEUE)
drivers/video/mxc/mxc_epdc_fb.c:2308:			switch (epdc_submit_merge(upd_data_list->update_desc,
drivers/video/mxc/mxc_epdc_fb.c:2309:						next_update->update_desc,
drivers/video/mxc/mxc_epdc_fb.c:2312:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2314:				list_del_init(&next_update->update_desc->list);
drivers/video/mxc/mxc_epdc_fb.c:2315:				kfree(next_update->update_desc);
drivers/video/mxc/mxc_epdc_fb.c:2316:				next_update->update_desc = NULL;
drivers/video/mxc/mxc_epdc_fb.c:2317:				list_del_init(&next_update->list);
drivers/video/mxc/mxc_epdc_fb.c:2319:				list_add_tail(&next_update->list,
drivers/video/mxc/mxc_epdc_fb.c:2320:					 &fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_epdc_fb.c:2323:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2327:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2344:	if (!((fb_data->upd_scheme == UPDATE_SCHEME_QUEUE) &&
drivers/video/mxc/mxc_epdc_fb.c:2356:			list_empty(&fb_data->upd_buf_free_list)) {
drivers/video/mxc/mxc_epdc_fb.c:2357:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2362:				&fb_data->upd_pending_list, list) {
drivers/video/mxc/mxc_epdc_fb.c:2364:			dev_dbg(fb_data->dev, "Found a pending update!\n");
drivers/video/mxc/mxc_epdc_fb.c:2367:				if (list_empty(&fb_data->upd_buf_free_list))
drivers/video/mxc/mxc_epdc_fb.c:2370:					list_entry(fb_data->upd_buf_free_list.next,
drivers/video/mxc/mxc_epdc_fb.c:2372:				list_del_init(&upd_data_list->list);
drivers/video/mxc/mxc_epdc_fb.c:2373:				upd_data_list->update_desc = next_desc;
drivers/video/mxc/mxc_epdc_fb.c:2374:				list_del_init(&next_desc->list);
drivers/video/mxc/mxc_epdc_fb.c:2375:				if (fb_data->upd_scheme == UPDATE_SCHEME_QUEUE)
drivers/video/mxc/mxc_epdc_fb.c:2379:				switch (epdc_submit_merge(upd_data_list->update_desc,
drivers/video/mxc/mxc_epdc_fb.c:2382:					dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2384:					list_del_init(&next_desc->list);
drivers/video/mxc/mxc_epdc_fb.c:2388:					dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2392:					dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2406:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2413:	 *   - FB unrotated
drivers/video/mxc/mxc_epdc_fb.c:2414:	 *   - FB pixel format = 8-bit grayscale
drivers/video/mxc/mxc_epdc_fb.c:2415:	 *   - No look-up transformations (inversion, posterization, etc.)
drivers/video/mxc/mxc_epdc_fb.c:2420:	is_transform = upd_data_list->update_desc->upd_data.flags &
drivers/video/mxc/mxc_epdc_fb.c:2425:	if ((fb_data->epdc_fb_var.rotate == FB_ROTATE_UR) &&
drivers/video/mxc/mxc_epdc_fb.c:2426:		(fb_data->epdc_fb_var.grayscale == GRAYSCALE_8BIT) &&
drivers/video/mxc/mxc_epdc_fb.c:2427:		!is_transform && (fb_data->rev > 20) &&
drivers/video/mxc/mxc_epdc_fb.c:2428:		!fb_data->restrict_width) {
drivers/video/mxc/mxc_epdc_fb.c:2431:		if ((fb_data->power_state == POWER_STATE_OFF)
drivers/video/mxc/mxc_epdc_fb.c:2432:			|| fb_data->powering_down)
drivers/video/mxc/mxc_epdc_fb.c:2439:		upd_region = &upd_data_list->update_desc->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:2440:		update_addr = fb_data->info.fix.smem_start +
drivers/video/mxc/mxc_epdc_fb.c:2441:			((upd_region->top * fb_data->info.var.xres_virtual) +
drivers/video/mxc/mxc_epdc_fb.c:2442:			upd_region->left) * fb_data->info.var.bits_per_pixel/8;
drivers/video/mxc/mxc_epdc_fb.c:2443:		upd_data_list->update_desc->epdc_stride =
drivers/video/mxc/mxc_epdc_fb.c:2444:					fb_data->info.var.xres_virtual *
drivers/video/mxc/mxc_epdc_fb.c:2445:					fb_data->info.var.bits_per_pixel/8;
drivers/video/mxc/mxc_epdc_fb.c:2448:		upd_data_list->phys_addr =
drivers/video/mxc/mxc_epdc_fb.c:2449:			fb_data->phys_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_epdc_fb.c:2450:		upd_data_list->virt_addr =
drivers/video/mxc/mxc_epdc_fb.c:2451:			fb_data->virt_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_epdc_fb.c:2452:		fb_data->upd_buffer_num++;
drivers/video/mxc/mxc_epdc_fb.c:2453:		if (fb_data->upd_buffer_num > fb_data->max_num_buffers-1)
drivers/video/mxc/mxc_epdc_fb.c:2454:			fb_data->upd_buffer_num = 0;
drivers/video/mxc/mxc_epdc_fb.c:2457:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2459:		/* Perform PXP processing - EPDC power will also be enabled */
drivers/video/mxc/mxc_epdc_fb.c:2461:			dev_dbg(fb_data->dev, "PXP processing error.\n");
drivers/video/mxc/mxc_epdc_fb.c:2463:			mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2464:			list_del_init(&upd_data_list->update_desc->list);
drivers/video/mxc/mxc_epdc_fb.c:2465:			kfree(upd_data_list->update_desc);
drivers/video/mxc/mxc_epdc_fb.c:2466:			upd_data_list->update_desc = NULL;
drivers/video/mxc/mxc_epdc_fb.c:2468:			list_add_tail(&upd_data_list->list,
drivers/video/mxc/mxc_epdc_fb.c:2469:				&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_epdc_fb.c:2471:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2476:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2478:		update_addr = upd_data_list->phys_addr
drivers/video/mxc/mxc_epdc_fb.c:2479:				+ upd_data_list->update_desc->epdc_offs;
drivers/video/mxc/mxc_epdc_fb.c:2482:	/* Get rotation-adjusted coordinates */
drivers/video/mxc/mxc_epdc_fb.c:2483:	adjust_coordinates(fb_data->epdc_fb_var.xres,
drivers/video/mxc/mxc_epdc_fb.c:2484:		fb_data->epdc_fb_var.yres, fb_data->epdc_fb_var.rotate,
drivers/video/mxc/mxc_epdc_fb.c:2485:		&upd_data_list->update_desc->upd_data.update_region,
drivers/video/mxc/mxc_epdc_fb.c:2493:	if (fb_data->cur_update != NULL) {
drivers/video/mxc/mxc_epdc_fb.c:2494:		dev_dbg(fb_data->dev, "working buf busy!\n");
drivers/video/mxc/mxc_epdc_fb.c:2497:		init_completion(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:2499:		fb_data->waiting_for_wb = true;
drivers/video/mxc/mxc_epdc_fb.c:2502:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2503:		wait_for_completion(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:2504:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2508:	 * Dithering Processing (Version 1.0 - for i.MX508 and i.MX6SL)
drivers/video/mxc/mxc_epdc_fb.c:2510:	if (upd_data_list->update_desc->upd_data.flags &
drivers/video/mxc/mxc_epdc_fb.c:2513:		err_dist = kzalloc((fb_data->info.var.xres_virtual + 3) * 3
drivers/video/mxc/mxc_epdc_fb.c:2516:		/* Dithering Y8 -> Y1 */
drivers/video/mxc/mxc_epdc_fb.c:2518:				(uint8_t *)(upd_data_list->virt_addr +
drivers/video/mxc/mxc_epdc_fb.c:2519:				upd_data_list->update_desc->epdc_offs),
drivers/video/mxc/mxc_epdc_fb.c:2521:				(fb_data->rev < 20) ?
drivers/video/mxc/mxc_epdc_fb.c:2527:	} else if (upd_data_list->update_desc->upd_data.flags &
drivers/video/mxc/mxc_epdc_fb.c:2530:		err_dist = kzalloc((fb_data->info.var.xres_virtual + 3) * 3
drivers/video/mxc/mxc_epdc_fb.c:2533:		/* Dithering Y8 -> Y1 */
drivers/video/mxc/mxc_epdc_fb.c:2535:				(uint8_t *)(upd_data_list->virt_addr +
drivers/video/mxc/mxc_epdc_fb.c:2536:				upd_data_list->update_desc->epdc_offs),
drivers/video/mxc/mxc_epdc_fb.c:2538:				(fb_data->rev < 20) ?
drivers/video/mxc/mxc_epdc_fb.c:2552:		dev_dbg(fb_data->dev, "no luts available!\n");
drivers/video/mxc/mxc_epdc_fb.c:2555:		init_completion(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:2557:		fb_data->waiting_for_lut = true;
drivers/video/mxc/mxc_epdc_fb.c:2560:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2561:		wait_for_completion(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:2562:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2565:	ret = epdc_choose_next_lut(fb_data->rev, &upd_data_list->lut_num);
drivers/video/mxc/mxc_epdc_fb.c:2567:	 * If LUT15 is in use (for pre-EPDC v2.0 hardware):
drivers/video/mxc/mxc_epdc_fb.c:2568:	 *   - Wait for LUT15 to complete is if TCE underrun prevent is enabled
drivers/video/mxc/mxc_epdc_fb.c:2569:	 *   - If we go ahead with update, sync update submission with EOF
drivers/video/mxc/mxc_epdc_fb.c:2571:	if (ret && fb_data->tce_prevent && (fb_data->rev < 20)) {
drivers/video/mxc/mxc_epdc_fb.c:2572:		dev_dbg(fb_data->dev, "Waiting for LUT15\n");
drivers/video/mxc/mxc_epdc_fb.c:2575:		init_completion(&fb_data->lut15_free);
drivers/video/mxc/mxc_epdc_fb.c:2577:		fb_data->waiting_for_lut15 = true;
drivers/video/mxc/mxc_epdc_fb.c:2580:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2581:		wait_for_completion(&fb_data->lut15_free);
drivers/video/mxc/mxc_epdc_fb.c:2582:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2584:		epdc_choose_next_lut(fb_data->rev, &upd_data_list->lut_num);
drivers/video/mxc/mxc_epdc_fb.c:2585:	} else if (ret && (fb_data->rev < 20)) {
drivers/video/mxc/mxc_epdc_fb.c:2588:		init_completion(&fb_data->eof_event);
drivers/video/mxc/mxc_epdc_fb.c:2593:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2594:		ret = wait_for_completion_timeout(&fb_data->eof_event,
drivers/video/mxc/mxc_epdc_fb.c:2597:			dev_err(fb_data->dev, "Missed EOF event!\n");
drivers/video/mxc/mxc_epdc_fb.c:2600:		udelay(fb_data->eof_sync_period);
drivers/video/mxc/mxc_epdc_fb.c:2601:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2606:	fb_data->cur_update = upd_data_list;
drivers/video/mxc/mxc_epdc_fb.c:2609:	fb_data->luts_complete_wb = 0;
drivers/video/mxc/mxc_epdc_fb.c:2612:	 * so we don't need to update LUT-related resources. */
drivers/video/mxc/mxc_epdc_fb.c:2613:	if (!(upd_data_list->update_desc->upd_data.flags
drivers/video/mxc/mxc_epdc_fb.c:2617:			&upd_data_list->update_desc->upd_marker_list, upd_list)
drivers/video/mxc/mxc_epdc_fb.c:2618:			next_marker->lut_num = fb_data->cur_update->lut_num;
drivers/video/mxc/mxc_epdc_fb.c:2621:		fb_data->lut_update_order[upd_data_list->lut_num] =
drivers/video/mxc/mxc_epdc_fb.c:2622:			upd_data_list->update_desc->update_order;
drivers/video/mxc/mxc_epdc_fb.c:2624:		epdc_lut_complete_intr(fb_data->rev, upd_data_list->lut_num,
drivers/video/mxc/mxc_epdc_fb.c:2632:	if (upd_data_list->update_desc->upd_data.temp != TEMP_USE_AMBIENT) {
drivers/video/mxc/mxc_epdc_fb.c:2634:			upd_data_list->update_desc->upd_data.temp);
drivers/video/mxc/mxc_epdc_fb.c:2637:		epdc_set_temp(fb_data->temp_index);
drivers/video/mxc/mxc_epdc_fb.c:2642:	if (fb_data->rev > 20)
drivers/video/mxc/mxc_epdc_fb.c:2643:		epdc_set_update_stride(upd_data_list->update_desc->epdc_stride);
drivers/video/mxc/mxc_epdc_fb.c:2644:	if (fb_data->wv_modes_update &&
drivers/video/mxc/mxc_epdc_fb.c:2645:		(upd_data_list->update_desc->upd_data.waveform_mode
drivers/video/mxc/mxc_epdc_fb.c:2647:		epdc_set_update_waveform(&fb_data->wv_modes);
drivers/video/mxc/mxc_epdc_fb.c:2648:		fb_data->wv_modes_update = false;
drivers/video/mxc/mxc_epdc_fb.c:2651:	epdc_submit_update(upd_data_list->lut_num,
drivers/video/mxc/mxc_epdc_fb.c:2652:			   upd_data_list->update_desc->upd_data.waveform_mode,
drivers/video/mxc/mxc_epdc_fb.c:2653:			   upd_data_list->update_desc->upd_data.update_mode,
drivers/video/mxc/mxc_epdc_fb.c:2654:			   (upd_data_list->update_desc->upd_data.flags
drivers/video/mxc/mxc_epdc_fb.c:2659:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2675:	if (!fb_data->hw_ready) {
drivers/video/mxc/mxc_epdc_fb.c:2676:		/* Throw message if we are not mid-initialization */
drivers/video/mxc/mxc_epdc_fb.c:2677:		if (!fb_data->hw_initializing)
drivers/video/mxc/mxc_epdc_fb.c:2678:			dev_err(fb_data->dev, "Display HW not properly"
drivers/video/mxc/mxc_epdc_fb.c:2680:		return -EPERM;
drivers/video/mxc/mxc_epdc_fb.c:2684:	if ((upd_data->update_mode != UPDATE_MODE_PARTIAL) &&
drivers/video/mxc/mxc_epdc_fb.c:2685:		(upd_data->update_mode != UPDATE_MODE_FULL)) {
drivers/video/mxc/mxc_epdc_fb.c:2686:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2688:			upd_data->update_mode);
drivers/video/mxc/mxc_epdc_fb.c:2689:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:2691:	if ((upd_data->waveform_mode > 255) &&
drivers/video/mxc/mxc_epdc_fb.c:2692:		(upd_data->waveform_mode != WAVEFORM_MODE_AUTO)) {
drivers/video/mxc/mxc_epdc_fb.c:2693:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2696:			upd_data->waveform_mode);
drivers/video/mxc/mxc_epdc_fb.c:2697:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:2699:	if ((upd_data->update_region.left + upd_data->update_region.width > fb_data->epdc_fb_var.xres) ||
drivers/video/mxc/mxc_epdc_fb.c:2700:		(upd_data->update_region.top + upd_data->update_region.height > fb_data->epdc_fb_var.yres)) {
drivers/video/mxc/mxc_epdc_fb.c:2701:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2704:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:2706:	if (upd_data->flags & EPDC_FLAG_USE_ALT_BUFFER) {
drivers/video/mxc/mxc_epdc_fb.c:2707:		if ((upd_data->update_region.width !=
drivers/video/mxc/mxc_epdc_fb.c:2708:			upd_data->alt_buffer_data.alt_update_region.width) ||
drivers/video/mxc/mxc_epdc_fb.c:2709:			(upd_data->update_region.height !=
drivers/video/mxc/mxc_epdc_fb.c:2710:			upd_data->alt_buffer_data.alt_update_region.height)) {
drivers/video/mxc/mxc_epdc_fb.c:2711:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2714:			return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:2717:		if ((upd_data->alt_buffer_data.phys_addr <
drivers/video/mxc/mxc_epdc_fb.c:2718:			fb_data->info.fix.smem_start) ||
drivers/video/mxc/mxc_epdc_fb.c:2719:			(upd_data->alt_buffer_data.phys_addr >
drivers/video/mxc/mxc_epdc_fb.c:2720:			fb_data->info.fix.smem_start + fb_data->map_size)) {
drivers/video/mxc/mxc_epdc_fb.c:2721:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2724:			return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:2728:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2734:	if ((fb_data->waiting_for_idle) ||
drivers/video/mxc/mxc_epdc_fb.c:2735:		(fb_data->blank != FB_BLANK_UNBLANK)) {
drivers/video/mxc/mxc_epdc_fb.c:2736:		dev_dbg(fb_data->dev, "EPDC not active."
drivers/video/mxc/mxc_epdc_fb.c:2738:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2739:		return -EPERM;
drivers/video/mxc/mxc_epdc_fb.c:2742:	if (fb_data->upd_scheme == UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_epdc_fb.c:2753:		if (upd_data->update_mode == UPDATE_MODE_FULL) {
drivers/video/mxc/mxc_epdc_fb.c:2754:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2756:			mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2760:		list_for_each_entry(plist, &fb_data->upd_buf_free_list, list)
drivers/video/mxc/mxc_epdc_fb.c:2765:		if (count + fb_data->max_num_buffers
drivers/video/mxc/mxc_epdc_fb.c:2766:			<= fb_data->max_num_updates) {
drivers/video/mxc/mxc_epdc_fb.c:2767:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2769:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2770:			return -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:2775:		    list_entry(fb_data->upd_buf_free_list.next,
drivers/video/mxc/mxc_epdc_fb.c:2778:		list_del_init(&upd_data_list->list);
drivers/video/mxc/mxc_epdc_fb.c:2787:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:2789:		if (fb_data->upd_scheme == UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_epdc_fb.c:2790:			list_add(&upd_data_list->list,
drivers/video/mxc/mxc_epdc_fb.c:2791:				&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_epdc_fb.c:2793:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2794:		return -EPERM;
drivers/video/mxc/mxc_epdc_fb.c:2796:	/* Initialize per-update marker list */
drivers/video/mxc/mxc_epdc_fb.c:2797:	INIT_LIST_HEAD(&upd_desc->upd_marker_list);
drivers/video/mxc/mxc_epdc_fb.c:2798:	upd_desc->upd_data = *upd_data;
drivers/video/mxc/mxc_epdc_fb.c:2799:	upd_desc->update_order = fb_data->order_cnt++;
drivers/video/mxc/mxc_epdc_fb.c:2800:	list_add_tail(&upd_desc->list, &fb_data->upd_pending_list);
drivers/video/mxc/mxc_epdc_fb.c:2803:	if (upd_data->update_marker != 0) {
drivers/video/mxc/mxc_epdc_fb.c:2808:			dev_err(fb_data->dev, "No memory for marker!\n");
drivers/video/mxc/mxc_epdc_fb.c:2809:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2810:			return -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:2812:		list_add_tail(&marker_data->upd_list,
drivers/video/mxc/mxc_epdc_fb.c:2813:			&upd_desc->upd_marker_list);
drivers/video/mxc/mxc_epdc_fb.c:2814:		marker_data->update_marker = upd_data->update_marker;
drivers/video/mxc/mxc_epdc_fb.c:2815:		if (upd_desc->upd_data.flags & EPDC_FLAG_TEST_COLLISION)
drivers/video/mxc/mxc_epdc_fb.c:2816:			marker_data->lut_num = DRY_RUN_NO_LUT;
drivers/video/mxc/mxc_epdc_fb.c:2818:			marker_data->lut_num = INVALID_LUT;
drivers/video/mxc/mxc_epdc_fb.c:2819:		init_completion(&marker_data->update_completion);
drivers/video/mxc/mxc_epdc_fb.c:2821:		list_add_tail(&marker_data->full_list,
drivers/video/mxc/mxc_epdc_fb.c:2822:			&fb_data->full_marker_list);
drivers/video/mxc/mxc_epdc_fb.c:2825:	if (fb_data->upd_scheme != UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_epdc_fb.c:2828:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2831:		queue_work(fb_data->epdc_submit_workqueue,
drivers/video/mxc/mxc_epdc_fb.c:2832:			&fb_data->epdc_submit_work);
drivers/video/mxc/mxc_epdc_fb.c:2840:	upd_data_list->update_desc = upd_desc;
drivers/video/mxc/mxc_epdc_fb.c:2841:	list_del_init(&upd_desc->list);
drivers/video/mxc/mxc_epdc_fb.c:2843:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2849:	screen_upd_region = &upd_desc->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:2852:	upd_data_list->phys_addr =
drivers/video/mxc/mxc_epdc_fb.c:2853:		fb_data->phys_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_epdc_fb.c:2854:	upd_data_list->virt_addr =
drivers/video/mxc/mxc_epdc_fb.c:2855:		fb_data->virt_addr_updbuf[fb_data->upd_buffer_num];
drivers/video/mxc/mxc_epdc_fb.c:2856:	fb_data->upd_buffer_num++;
drivers/video/mxc/mxc_epdc_fb.c:2857:	if (fb_data->upd_buffer_num > fb_data->max_num_buffers-1)
drivers/video/mxc/mxc_epdc_fb.c:2858:		fb_data->upd_buffer_num = 0;
drivers/video/mxc/mxc_epdc_fb.c:2862:		mutex_unlock(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2867:	upd_data->waveform_mode = upd_desc->upd_data.waveform_mode;
drivers/video/mxc/mxc_epdc_fb.c:2869:	/* Get rotation-adjusted coordinates */
drivers/video/mxc/mxc_epdc_fb.c:2870:	adjust_coordinates(fb_data->epdc_fb_var.xres,
drivers/video/mxc/mxc_epdc_fb.c:2871:		fb_data->epdc_fb_var.yres, fb_data->epdc_fb_var.rotate,
drivers/video/mxc/mxc_epdc_fb.c:2872:		&upd_desc->upd_data.update_region, NULL);
drivers/video/mxc/mxc_epdc_fb.c:2875:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2882:	if ((fb_data->cur_update != NULL) || !epdc_any_luts_available()) {
drivers/video/mxc/mxc_epdc_fb.c:2884:		list_add_tail(&upd_data_list->list, &fb_data->upd_buf_queue);
drivers/video/mxc/mxc_epdc_fb.c:2887:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2892:	ret = epdc_choose_next_lut(fb_data->rev, &upd_data_list->lut_num);
drivers/video/mxc/mxc_epdc_fb.c:2893:	if (ret && fb_data->tce_prevent && (fb_data->rev < 20)) {
drivers/video/mxc/mxc_epdc_fb.c:2894:		dev_dbg(fb_data->dev, "Must wait for LUT15\n");
drivers/video/mxc/mxc_epdc_fb.c:2896:		list_add_tail(&upd_data_list->list, &fb_data->upd_buf_queue);
drivers/video/mxc/mxc_epdc_fb.c:2899:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2903:	if (!(upd_data_list->update_desc->upd_data.flags
drivers/video/mxc/mxc_epdc_fb.c:2907:		fb_data->cur_update = upd_data_list;
drivers/video/mxc/mxc_epdc_fb.c:2910:		fb_data->luts_complete_wb = 0;
drivers/video/mxc/mxc_epdc_fb.c:2914:			&upd_data_list->update_desc->upd_marker_list, upd_list)
drivers/video/mxc/mxc_epdc_fb.c:2915:			next_marker->lut_num = upd_data_list->lut_num;
drivers/video/mxc/mxc_epdc_fb.c:2918:		fb_data->lut_update_order[upd_data_list->lut_num] =
drivers/video/mxc/mxc_epdc_fb.c:2919:			upd_desc->update_order;
drivers/video/mxc/mxc_epdc_fb.c:2921:		epdc_lut_complete_intr(fb_data->rev, upd_data_list->lut_num,
drivers/video/mxc/mxc_epdc_fb.c:2929:	epdc_set_update_addr(upd_data_list->phys_addr + upd_desc->epdc_offs);
drivers/video/mxc/mxc_epdc_fb.c:2930:	epdc_set_update_coord(screen_upd_region->left, screen_upd_region->top);
drivers/video/mxc/mxc_epdc_fb.c:2931:	epdc_set_update_dimensions(screen_upd_region->width,
drivers/video/mxc/mxc_epdc_fb.c:2932:		screen_upd_region->height);
drivers/video/mxc/mxc_epdc_fb.c:2933:	if (fb_data->rev > 20)
drivers/video/mxc/mxc_epdc_fb.c:2934:		epdc_set_update_stride(upd_desc->epdc_stride);
drivers/video/mxc/mxc_epdc_fb.c:2935:	if (upd_desc->upd_data.temp != TEMP_USE_AMBIENT) {
drivers/video/mxc/mxc_epdc_fb.c:2937:			upd_desc->upd_data.temp);
drivers/video/mxc/mxc_epdc_fb.c:2940:		epdc_set_temp(fb_data->temp_index);
drivers/video/mxc/mxc_epdc_fb.c:2941:	if (fb_data->wv_modes_update &&
drivers/video/mxc/mxc_epdc_fb.c:2942:		(upd_desc->upd_data.waveform_mode == WAVEFORM_MODE_AUTO)) {
drivers/video/mxc/mxc_epdc_fb.c:2943:		epdc_set_update_waveform(&fb_data->wv_modes);
drivers/video/mxc/mxc_epdc_fb.c:2944:		fb_data->wv_modes_update = false;
drivers/video/mxc/mxc_epdc_fb.c:2947:	epdc_submit_update(upd_data_list->lut_num,
drivers/video/mxc/mxc_epdc_fb.c:2948:			   upd_desc->upd_data.waveform_mode,
drivers/video/mxc/mxc_epdc_fb.c:2949:			   upd_desc->upd_data.update_mode,
drivers/video/mxc/mxc_epdc_fb.c:2950:			   (upd_desc->upd_data.flags
drivers/video/mxc/mxc_epdc_fb.c:2954:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:2964:	if (!fb_data->restrict_width) {
drivers/video/mxc/mxc_epdc_fb.c:2977:		if (fb_data->epdc_fb_var.rotate != FB_ROTATE_UR)
drivers/video/mxc/mxc_epdc_fb.c:2978:			max_upd_width -= EPDC_V2_ROTATION_ALIGNMENT;
drivers/video/mxc/mxc_epdc_fb.c:2981:		if ((fb_data->epdc_fb_var.rotate == FB_ROTATE_UR) ||
drivers/video/mxc/mxc_epdc_fb.c:2982:			(fb_data->epdc_fb_var.rotate == FB_ROTATE_UD)) {
drivers/video/mxc/mxc_epdc_fb.c:2983:			region_width = &upd_data->update_region.width;
drivers/video/mxc/mxc_epdc_fb.c:2984:			region_left = &upd_data->update_region.left;
drivers/video/mxc/mxc_epdc_fb.c:2986:			region_width = &upd_data->update_region.height;
drivers/video/mxc/mxc_epdc_fb.c:2987:			region_left = &upd_data->update_region.top;
drivers/video/mxc/mxc_epdc_fb.c:2995:		marker = upd_data->update_marker;
drivers/video/mxc/mxc_epdc_fb.c:2996:		upd_data->update_marker = 0;
drivers/video/mxc/mxc_epdc_fb.c:3004:			width -= max_upd_width;
drivers/video/mxc/mxc_epdc_fb.c:3010:		upd_data->update_marker = marker;
drivers/video/mxc/mxc_epdc_fb.c:3027:	if (marker_data->update_marker == 0)
drivers/video/mxc/mxc_epdc_fb.c:3028:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:3037:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3040:		&fb_data->full_marker_list, full_list) {
drivers/video/mxc/mxc_epdc_fb.c:3041:		if (next_marker->update_marker == marker_data->update_marker) {
drivers/video/mxc/mxc_epdc_fb.c:3042:			dev_dbg(fb_data->dev, "Waiting for marker %d\n",
drivers/video/mxc/mxc_epdc_fb.c:3043:				marker_data->update_marker);
drivers/video/mxc/mxc_epdc_fb.c:3044:			next_marker->waiting = true;
drivers/video/mxc/mxc_epdc_fb.c:3050:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3059:	ret = wait_for_completion_timeout(&next_marker->update_completion,
drivers/video/mxc/mxc_epdc_fb.c:3062:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3064:		return -ETIMEDOUT;
drivers/video/mxc/mxc_epdc_fb.c:3067:	marker_data->collision_test = next_marker->collision_test;
drivers/video/mxc/mxc_epdc_fb.c:3082:	fb_data->pwrdown_delay = pwrdown_delay;
drivers/video/mxc/mxc_epdc_fb.c:3093:	return fb_data->pwrdown_delay;
drivers/video/mxc/mxc_epdc_fb.c:3101:	int ret = -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:3145:					ret = -EFAULT;
drivers/video/mxc/mxc_epdc_fb.c:3147:				ret = -EFAULT;
drivers/video/mxc/mxc_epdc_fb.c:3161:					ret = -EFAULT;
drivers/video/mxc/mxc_epdc_fb.c:3163:				ret = -EFAULT;
drivers/video/mxc/mxc_epdc_fb.c:3183:				ret = -EFAULT;
drivers/video/mxc/mxc_epdc_fb.c:3196:				(const void *) fb_data->working_buffer_virt,
drivers/video/mxc/mxc_epdc_fb.c:3197:				fb_data->working_buffer_size))
drivers/video/mxc/mxc_epdc_fb.c:3198:				ret = -EFAULT;
drivers/video/mxc/mxc_epdc_fb.c:3219:	update.update_region.width = fb_data->epdc_fb_var.xres;
drivers/video/mxc/mxc_epdc_fb.c:3221:	update.update_region.height = y2 - y1;
drivers/video/mxc/mxc_epdc_fb.c:3228:	mxc_epdc_fb_send_update(&update, &fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:3240:	if (fb_data->auto_mode != AUTO_UPDATE_MODE_AUTOMATIC_MODE)
drivers/video/mxc/mxc_epdc_fb.c:3246:		beg = page->index << PAGE_SHIFT;
drivers/video/mxc/mxc_epdc_fb.c:3247:		end = beg + PAGE_SIZE - 1;
drivers/video/mxc/mxc_epdc_fb.c:3248:		y1 = beg / info->fix.line_length;
drivers/video/mxc/mxc_epdc_fb.c:3249:		y2 = end / info->fix.line_length;
drivers/video/mxc/mxc_epdc_fb.c:3250:		if (y2 >= fb_data->epdc_fb_var.yres)
drivers/video/mxc/mxc_epdc_fb.c:3251:			y2 = fb_data->epdc_fb_var.yres - 1;
drivers/video/mxc/mxc_epdc_fb.c:3265:	if (fb_data->in_init)
drivers/video/mxc/mxc_epdc_fb.c:3269:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3275:	 *   3) Active updates to panel - We can key off of EPDC
drivers/video/mxc/mxc_epdc_fb.c:3278:	if (!list_empty(&fb_data->upd_pending_list) ||
drivers/video/mxc/mxc_epdc_fb.c:3280:		(fb_data->updates_active == true)) {
drivers/video/mxc/mxc_epdc_fb.c:3282:		init_completion(&fb_data->updates_done);
drivers/video/mxc/mxc_epdc_fb.c:3283:		fb_data->waiting_for_idle = true;
drivers/video/mxc/mxc_epdc_fb.c:3285:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3287:		ret = wait_for_completion_timeout(&fb_data->updates_done,
drivers/video/mxc/mxc_epdc_fb.c:3290:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3293:		mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3294:		fb_data->waiting_for_idle = false;
drivers/video/mxc/mxc_epdc_fb.c:3297:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3305:	dev_dbg(fb_data->dev, "blank = %d\n", blank);
drivers/video/mxc/mxc_epdc_fb.c:3307:	if (fb_data->blank == blank)
drivers/video/mxc/mxc_epdc_fb.c:3310:	fb_data->blank = blank;
drivers/video/mxc/mxc_epdc_fb.c:3316:		mutex_lock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3317:		if ((fb_data->power_state == POWER_STATE_ON) &&
drivers/video/mxc/mxc_epdc_fb.c:3318:			(fb_data->pwrdown_delay == FB_POWERDOWN_DISABLE)) {
drivers/video/mxc/mxc_epdc_fb.c:3324:			mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3327:			while (fb_data->updates_active) {
drivers/video/mxc/mxc_epdc_fb.c:3335:			fb_data->powering_down = true;
drivers/video/mxc/mxc_epdc_fb.c:3337:		} else if (fb_data->power_state != POWER_STATE_OFF) {
drivers/video/mxc/mxc_epdc_fb.c:3338:			fb_data->wait_for_powerdown = true;
drivers/video/mxc/mxc_epdc_fb.c:3339:			init_completion(&fb_data->powerdown_compl);
drivers/video/mxc/mxc_epdc_fb.c:3340:			mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3341:			ret = wait_for_completion_timeout(&fb_data->powerdown_compl,
drivers/video/mxc/mxc_epdc_fb.c:3344:				dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3346:				return -ETIMEDOUT;
drivers/video/mxc/mxc_epdc_fb.c:3349:			mutex_unlock(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3366:	dev_dbg(info->device, "%s: var->yoffset %d, info->var.yoffset %d\n",
drivers/video/mxc/mxc_epdc_fb.c:3367:		 __func__, var->yoffset, info->var.yoffset);
drivers/video/mxc/mxc_epdc_fb.c:3369:	if (!var || (var->xoffset != info->var.xoffset) ||
drivers/video/mxc/mxc_epdc_fb.c:3370:	    (var->yoffset + var->yres > var->yres_virtual)) {
drivers/video/mxc/mxc_epdc_fb.c:3371:		dev_dbg(info->device, "x panning not supported\n");
drivers/video/mxc/mxc_epdc_fb.c:3372:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:3375:	if ((fb_data->epdc_fb_var.xoffset == var->xoffset) &&
drivers/video/mxc/mxc_epdc_fb.c:3376:		(fb_data->epdc_fb_var.yoffset == var->yoffset))
drivers/video/mxc/mxc_epdc_fb.c:3379:	y_bottom = var->yoffset;
drivers/video/mxc/mxc_epdc_fb.c:3381:	if (!(var->vmode & FB_VMODE_YWRAP))
drivers/video/mxc/mxc_epdc_fb.c:3382:		y_bottom += var->yres;
drivers/video/mxc/mxc_epdc_fb.c:3384:	if (y_bottom > info->var.yres_virtual)
drivers/video/mxc/mxc_epdc_fb.c:3385:		return -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:3387:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3389:	fb_data->fb_offset = (var->yoffset * var->xres_virtual + var->xoffset)
drivers/video/mxc/mxc_epdc_fb.c:3390:		* (var->bits_per_pixel) / 8;
drivers/video/mxc/mxc_epdc_fb.c:3392:	fb_data->epdc_fb_var.xoffset = var->xoffset;
drivers/video/mxc/mxc_epdc_fb.c:3393:	fb_data->epdc_fb_var.yoffset = var->yoffset;
drivers/video/mxc/mxc_epdc_fb.c:3395:	if (var->vmode & FB_VMODE_YWRAP)
drivers/video/mxc/mxc_epdc_fb.c:3396:		info->var.vmode |= FB_VMODE_YWRAP;
drivers/video/mxc/mxc_epdc_fb.c:3398:		info->var.vmode &= ~FB_VMODE_YWRAP;
drivers/video/mxc/mxc_epdc_fb.c:3400:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3439:	list_for_each_entry(plist, &fb_data->upd_buf_free_list, list)
drivers/video/mxc/mxc_epdc_fb.c:3443:	if (count == fb_data->max_num_updates)
drivers/video/mxc/mxc_epdc_fb.c:3455:	 * If we just completed one-time panel init, bypass
drivers/video/mxc/mxc_epdc_fb.c:3458:	if (fb_data->in_init) {
drivers/video/mxc/mxc_epdc_fb.c:3462:			dev_dbg(fb_data->dev, "Cleared WB for init update\n");
drivers/video/mxc/mxc_epdc_fb.c:3465:		if (epdc_is_lut_complete(fb_data->rev, 0)) {
drivers/video/mxc/mxc_epdc_fb.c:3466:			epdc_lut_complete_intr(fb_data->rev, 0, false);
drivers/video/mxc/mxc_epdc_fb.c:3467:			epdc_clear_lut_complete_irq(fb_data->rev, 0);
drivers/video/mxc/mxc_epdc_fb.c:3468:			fb_data->in_init = false;
drivers/video/mxc/mxc_epdc_fb.c:3469:			dev_dbg(fb_data->dev, "Cleared LUT complete for init update\n");
drivers/video/mxc/mxc_epdc_fb.c:3476:	if (fb_data->rev < 20) {
drivers/video/mxc/mxc_epdc_fb.c:3488:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3498:		complete(&fb_data->eof_event);
drivers/video/mxc/mxc_epdc_fb.c:3508:	 * here should be up-to-date and accurate when the WB processing
drivers/video/mxc/mxc_epdc_fb.c:3512:	if (fb_data->cur_update != NULL)
drivers/video/mxc/mxc_epdc_fb.c:3513:		fb_data->epdc_colliding_luts = epdc_get_colliding_luts(fb_data->rev);
drivers/video/mxc/mxc_epdc_fb.c:3520:	dev_dbg(fb_data->dev, "EPDC interrupts fired = 0x%x, "
drivers/video/mxc/mxc_epdc_fb.c:3524:	queue_work(fb_data->epdc_intr_workqueue,
drivers/video/mxc/mxc_epdc_fb.c:3525:		&fb_data->epdc_intr_work);
drivers/video/mxc/mxc_epdc_fb.c:3554:	mutex_lock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3557:	epdc_luts_active = epdc_any_luts_active(fb_data->rev);
drivers/video/mxc/mxc_epdc_fb.c:3562:	if (fb_data->rev < 20)
drivers/video/mxc/mxc_epdc_fb.c:3567:	epdc_waiting_on_wb = (fb_data->cur_update != NULL) ? true : false;
drivers/video/mxc/mxc_epdc_fb.c:3570:	for (i = 0; i < fb_data->num_luts; i++) {
drivers/video/mxc/mxc_epdc_fb.c:3574:		dev_dbg(fb_data->dev, "LUT %d completed\n", i);
drivers/video/mxc/mxc_epdc_fb.c:3577:		epdc_lut_complete_intr(fb_data->rev, i, false);
drivers/video/mxc/mxc_epdc_fb.c:3585:				    &fb_data->upd_buf_collision_list, list) {
drivers/video/mxc/mxc_epdc_fb.c:3586:			collision_update->collision_mask =
drivers/video/mxc/mxc_epdc_fb.c:3587:			    collision_update->collision_mask & ~(1 << i);
drivers/video/mxc/mxc_epdc_fb.c:3590:		epdc_clear_lut_complete_irq(fb_data->rev, i);
drivers/video/mxc/mxc_epdc_fb.c:3592:		fb_data->luts_complete_wb |= 1ULL << i;
drivers/video/mxc/mxc_epdc_fb.c:3594:		fb_data->lut_update_order[i] = 0;
drivers/video/mxc/mxc_epdc_fb.c:3597:		if (fb_data->waiting_for_lut) {
drivers/video/mxc/mxc_epdc_fb.c:3598:			complete(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:3599:			fb_data->waiting_for_lut = false;
drivers/video/mxc/mxc_epdc_fb.c:3603:		if (fb_data->waiting_for_lut15 && (i == 15)) {
drivers/video/mxc/mxc_epdc_fb.c:3604:			complete(&fb_data->lut15_free);
drivers/video/mxc/mxc_epdc_fb.c:3605:			fb_data->waiting_for_lut15 = false;
drivers/video/mxc/mxc_epdc_fb.c:3611:			(i == fb_data->cur_update->lut_num))
drivers/video/mxc/mxc_epdc_fb.c:3617:				&fb_data->full_marker_list,
drivers/video/mxc/mxc_epdc_fb.c:3619:				if (next_marker->lut_num != i)
drivers/video/mxc/mxc_epdc_fb.c:3622:				/* Found marker to signal - remove from list */
drivers/video/mxc/mxc_epdc_fb.c:3623:				list_del_init(&next_marker->full_list);
drivers/video/mxc/mxc_epdc_fb.c:3626:				dev_dbg(fb_data->dev, "Signaling marker %d\n",
drivers/video/mxc/mxc_epdc_fb.c:3627:					next_marker->update_marker);
drivers/video/mxc/mxc_epdc_fb.c:3628:				if (next_marker->waiting)
drivers/video/mxc/mxc_epdc_fb.c:3629:					complete(&next_marker->update_completion);
drivers/video/mxc/mxc_epdc_fb.c:3636:	if (list_empty(&fb_data->upd_pending_list) &&
drivers/video/mxc/mxc_epdc_fb.c:3641:		fb_data->updates_active = false;
drivers/video/mxc/mxc_epdc_fb.c:3643:		if (fb_data->pwrdown_delay != FB_POWERDOWN_DISABLE) {
drivers/video/mxc/mxc_epdc_fb.c:3648:			fb_data->powering_down = true;
drivers/video/mxc/mxc_epdc_fb.c:3651:			schedule_delayed_work(&fb_data->epdc_done_work,
drivers/video/mxc/mxc_epdc_fb.c:3652:				msecs_to_jiffies(fb_data->pwrdown_delay));
drivers/video/mxc/mxc_epdc_fb.c:3655:			fb_data->order_cnt = 0;
drivers/video/mxc/mxc_epdc_fb.c:3658:		if (fb_data->waiting_for_idle)
drivers/video/mxc/mxc_epdc_fb.c:3659:			complete(&fb_data->updates_done);
drivers/video/mxc/mxc_epdc_fb.c:3665:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3674:		dev_dbg(fb_data->dev, "\nWorking buffer completed\n");
drivers/video/mxc/mxc_epdc_fb.c:3677:		if (fb_data->waiting_for_wb) {
drivers/video/mxc/mxc_epdc_fb.c:3678:			complete(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:3679:			fb_data->waiting_for_wb = false;
drivers/video/mxc/mxc_epdc_fb.c:3682:		if (fb_data->cur_update->update_desc->upd_data.flags
drivers/video/mxc/mxc_epdc_fb.c:3688:				&fb_data->full_marker_list,
drivers/video/mxc/mxc_epdc_fb.c:3690:				if (next_marker->lut_num != DRY_RUN_NO_LUT)
drivers/video/mxc/mxc_epdc_fb.c:3694:					next_marker->collision_test = true;
drivers/video/mxc/mxc_epdc_fb.c:3696:					next_marker->collision_test = false;
drivers/video/mxc/mxc_epdc_fb.c:3698:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3700:					next_marker->collision_test);
drivers/video/mxc/mxc_epdc_fb.c:3702:				/* Found marker to signal - remove from list */
drivers/video/mxc/mxc_epdc_fb.c:3703:				list_del_init(&next_marker->full_list);
drivers/video/mxc/mxc_epdc_fb.c:3706:				dev_dbg(fb_data->dev, "Signaling marker "
drivers/video/mxc/mxc_epdc_fb.c:3707:					"for dry-run - %d\n",
drivers/video/mxc/mxc_epdc_fb.c:3708:					next_marker->update_marker);
drivers/video/mxc/mxc_epdc_fb.c:3709:				complete(&next_marker->update_completion);
drivers/video/mxc/mxc_epdc_fb.c:3725:			epdc_lut_complete_intr(fb_data->rev,
drivers/video/mxc/mxc_epdc_fb.c:3726:					fb_data->cur_update->lut_num, false);
drivers/video/mxc/mxc_epdc_fb.c:3727:			epdc_clear_lut_complete_irq(fb_data->rev,
drivers/video/mxc/mxc_epdc_fb.c:3728:					fb_data->cur_update->lut_num);
drivers/video/mxc/mxc_epdc_fb.c:3730:			fb_data->lut_update_order[fb_data->cur_update->lut_num] = 0;
drivers/video/mxc/mxc_epdc_fb.c:3733:			if (fb_data->waiting_for_lut) {
drivers/video/mxc/mxc_epdc_fb.c:3734:				complete(&fb_data->update_res_free);
drivers/video/mxc/mxc_epdc_fb.c:3735:				fb_data->waiting_for_lut = false;
drivers/video/mxc/mxc_epdc_fb.c:3739:				&fb_data->cur_update->update_desc->upd_marker_list,
drivers/video/mxc/mxc_epdc_fb.c:3742:				/* Del from per-update & full list */
drivers/video/mxc/mxc_epdc_fb.c:3743:				list_del_init(&next_marker->upd_list);
drivers/video/mxc/mxc_epdc_fb.c:3744:				list_del_init(&next_marker->full_list);
drivers/video/mxc/mxc_epdc_fb.c:3747:				dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3749:					next_marker->update_marker);
drivers/video/mxc/mxc_epdc_fb.c:3750:				if (next_marker->waiting)
drivers/video/mxc/mxc_epdc_fb.c:3751:					complete(&next_marker->update_completion);
drivers/video/mxc/mxc_epdc_fb.c:3756:			/* Real update (no dry-run), collision occurred */
drivers/video/mxc/mxc_epdc_fb.c:3759:			fb_data->cur_update->collision_mask =
drivers/video/mxc/mxc_epdc_fb.c:3760:			    fb_data->epdc_colliding_luts;
drivers/video/mxc/mxc_epdc_fb.c:3763:			fb_data->cur_update->collision_mask &=
drivers/video/mxc/mxc_epdc_fb.c:3764:				~fb_data->luts_complete_wb;
drivers/video/mxc/mxc_epdc_fb.c:3766:			dev_dbg(fb_data->dev, "Collision mask = 0x%llx\n",
drivers/video/mxc/mxc_epdc_fb.c:3767:			       fb_data->epdc_colliding_luts);
drivers/video/mxc/mxc_epdc_fb.c:3771:			if ((fb_data->upd_scheme != UPDATE_SCHEME_SNAPSHOT)
drivers/video/mxc/mxc_epdc_fb.c:3772:				&& (fb_data->rev >= 20)) {
drivers/video/mxc/mxc_epdc_fb.c:3775:					&fb_data->cur_update->update_desc->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:3792:				dev_dbg(fb_data->dev, "Coll region: l = %d, "
drivers/video/mxc/mxc_epdc_fb.c:3798:				switch (fb_data->epdc_fb_var.rotate) {
drivers/video/mxc/mxc_epdc_fb.c:3800:					xres = fb_data->epdc_fb_var.yres;
drivers/video/mxc/mxc_epdc_fb.c:3801:					yres = fb_data->epdc_fb_var.xres;
drivers/video/mxc/mxc_epdc_fb.c:3805:					xres = fb_data->epdc_fb_var.xres;
drivers/video/mxc/mxc_epdc_fb.c:3806:					yres = fb_data->epdc_fb_var.yres;
drivers/video/mxc/mxc_epdc_fb.c:3810:					xres = fb_data->epdc_fb_var.yres;
drivers/video/mxc/mxc_epdc_fb.c:3811:					yres = fb_data->epdc_fb_var.xres;
drivers/video/mxc/mxc_epdc_fb.c:3815:					xres = fb_data->epdc_fb_var.xres;
drivers/video/mxc/mxc_epdc_fb.c:3816:					yres = fb_data->epdc_fb_var.yres;
drivers/video/mxc/mxc_epdc_fb.c:3823:				dev_dbg(fb_data->dev, "Adj coll region: l = %d, "
drivers/video/mxc/mxc_epdc_fb.c:3825:					cur_upd_rect->left, cur_upd_rect->top,
drivers/video/mxc/mxc_epdc_fb.c:3826:					cur_upd_rect->width,
drivers/video/mxc/mxc_epdc_fb.c:3827:					cur_upd_rect->height);
drivers/video/mxc/mxc_epdc_fb.c:3832:			 * we don't need to re-submit the update. The
drivers/video/mxc/mxc_epdc_fb.c:3837:			for (temp_mask = fb_data->cur_update->collision_mask, lut = 0;
drivers/video/mxc/mxc_epdc_fb.c:3843:				if (fb_data->lut_update_order[lut] >=
drivers/video/mxc/mxc_epdc_fb.c:3844:					fb_data->cur_update->update_desc->update_order) {
drivers/video/mxc/mxc_epdc_fb.c:3845:					dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3860:					&fb_data->cur_update->update_desc->upd_marker_list,
drivers/video/mxc/mxc_epdc_fb.c:3862:					next_marker->lut_num = INVALID_LUT;
drivers/video/mxc/mxc_epdc_fb.c:3865:				list_add_tail(&fb_data->cur_update->list,
drivers/video/mxc/mxc_epdc_fb.c:3866:					 &fb_data->upd_buf_collision_list);
drivers/video/mxc/mxc_epdc_fb.c:3875:					&fb_data->cur_update->update_desc->upd_marker_list,
drivers/video/mxc/mxc_epdc_fb.c:3878:					/* Del from per-update & full list */
drivers/video/mxc/mxc_epdc_fb.c:3879:					list_del_init(&next_marker->upd_list);
drivers/video/mxc/mxc_epdc_fb.c:3880:					list_del_init(&next_marker->full_list);
drivers/video/mxc/mxc_epdc_fb.c:3883:					dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:3885:						next_marker->update_marker);
drivers/video/mxc/mxc_epdc_fb.c:3886:					if (next_marker->waiting)
drivers/video/mxc/mxc_epdc_fb.c:3887:						complete(&next_marker->update_completion);
drivers/video/mxc/mxc_epdc_fb.c:3893:			kfree(fb_data->cur_update->update_desc);
drivers/video/mxc/mxc_epdc_fb.c:3896:			list_add_tail(&fb_data->cur_update->list,
drivers/video/mxc/mxc_epdc_fb.c:3897:				 &fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_epdc_fb.c:3900:			if (list_empty(&fb_data->upd_pending_list) &&
drivers/video/mxc/mxc_epdc_fb.c:3904:				fb_data->updates_active = false;
drivers/video/mxc/mxc_epdc_fb.c:3906:				if (fb_data->pwrdown_delay !=
drivers/video/mxc/mxc_epdc_fb.c:3912:					fb_data->powering_down = true;
drivers/video/mxc/mxc_epdc_fb.c:3915:					schedule_delayed_work(&fb_data->epdc_done_work,
drivers/video/mxc/mxc_epdc_fb.c:3916:						msecs_to_jiffies(fb_data->pwrdown_delay));
drivers/video/mxc/mxc_epdc_fb.c:3919:					fb_data->order_cnt = 0;
drivers/video/mxc/mxc_epdc_fb.c:3922:				if (fb_data->waiting_for_idle)
drivers/video/mxc/mxc_epdc_fb.c:3923:					complete(&fb_data->updates_done);
drivers/video/mxc/mxc_epdc_fb.c:3928:		fb_data->cur_update = NULL;
drivers/video/mxc/mxc_epdc_fb.c:3935:	if (fb_data->upd_scheme != UPDATE_SCHEME_SNAPSHOT) {
drivers/video/mxc/mxc_epdc_fb.c:3939:		if (!fb_data->powering_down)
drivers/video/mxc/mxc_epdc_fb.c:3940:			queue_work(fb_data->epdc_submit_workqueue,
drivers/video/mxc/mxc_epdc_fb.c:3941:				&fb_data->epdc_submit_work);
drivers/video/mxc/mxc_epdc_fb.c:3944:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3953:		dev_dbg(fb_data->dev, "No luts available.\n");
drivers/video/mxc/mxc_epdc_fb.c:3954:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3958:	epdc_next_lut_15 = epdc_choose_next_lut(fb_data->rev, &next_lut);
drivers/video/mxc/mxc_epdc_fb.c:3960:	if (epdc_next_lut_15 && fb_data->tce_prevent && (fb_data->rev < 20)) {
drivers/video/mxc/mxc_epdc_fb.c:3961:		dev_dbg(fb_data->dev, "Must wait for LUT15\n");
drivers/video/mxc/mxc_epdc_fb.c:3962:		mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:3972:			    &fb_data->upd_buf_collision_list, list) {
drivers/video/mxc/mxc_epdc_fb.c:3974:		if (collision_update->collision_mask != 0)
drivers/video/mxc/mxc_epdc_fb.c:3977:		dev_dbg(fb_data->dev, "A collision update is ready to go!\n");
drivers/video/mxc/mxc_epdc_fb.c:3982:		fb_data->cur_update = collision_update;
drivers/video/mxc/mxc_epdc_fb.c:3983:		list_del_init(&fb_data->cur_update->list);
drivers/video/mxc/mxc_epdc_fb.c:3991:	if (fb_data->cur_update == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:3993:		if (list_empty(&fb_data->upd_buf_queue)) {
drivers/video/mxc/mxc_epdc_fb.c:3994:			dev_dbg(fb_data->dev, "No pending updates.\n");
drivers/video/mxc/mxc_epdc_fb.c:3997:			mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:4000:			dev_dbg(fb_data->dev, "Found a pending update!\n");
drivers/video/mxc/mxc_epdc_fb.c:4003:			fb_data->cur_update =
drivers/video/mxc/mxc_epdc_fb.c:4004:			    list_entry(fb_data->upd_buf_queue.next,
drivers/video/mxc/mxc_epdc_fb.c:4006:			list_del_init(&fb_data->cur_update->list);
drivers/video/mxc/mxc_epdc_fb.c:4011:	fb_data->cur_update->lut_num = next_lut;
drivers/video/mxc/mxc_epdc_fb.c:4015:		&fb_data->cur_update->update_desc->upd_marker_list, upd_list)
drivers/video/mxc/mxc_epdc_fb.c:4016:		next_marker->lut_num = fb_data->cur_update->lut_num;
drivers/video/mxc/mxc_epdc_fb.c:4019:	fb_data->lut_update_order[fb_data->cur_update->lut_num] =
drivers/video/mxc/mxc_epdc_fb.c:4020:		fb_data->cur_update->update_desc->update_order;
drivers/video/mxc/mxc_epdc_fb.c:4024:	epdc_lut_complete_intr(fb_data->rev, fb_data->cur_update->lut_num, true);
drivers/video/mxc/mxc_epdc_fb.c:4028:		&fb_data->cur_update->update_desc->upd_data.update_region;
drivers/video/mxc/mxc_epdc_fb.c:4029:	if (fb_data->cur_update->update_desc->upd_data.temp
drivers/video/mxc/mxc_epdc_fb.c:4032:			fb_data->cur_update->update_desc->upd_data.temp);
drivers/video/mxc/mxc_epdc_fb.c:4035:		epdc_set_temp(fb_data->temp_index);
drivers/video/mxc/mxc_epdc_fb.c:4036:	epdc_set_update_addr(fb_data->cur_update->phys_addr +
drivers/video/mxc/mxc_epdc_fb.c:4037:				fb_data->cur_update->update_desc->epdc_offs);
drivers/video/mxc/mxc_epdc_fb.c:4038:	epdc_set_update_coord(next_upd_region->left, next_upd_region->top);
drivers/video/mxc/mxc_epdc_fb.c:4039:	epdc_set_update_dimensions(next_upd_region->width,
drivers/video/mxc/mxc_epdc_fb.c:4040:				   next_upd_region->height);
drivers/video/mxc/mxc_epdc_fb.c:4041:	if (fb_data->rev > 20)
drivers/video/mxc/mxc_epdc_fb.c:4042:		epdc_set_update_stride(fb_data->cur_update->update_desc->epdc_stride);
drivers/video/mxc/mxc_epdc_fb.c:4043:	if (fb_data->wv_modes_update &&
drivers/video/mxc/mxc_epdc_fb.c:4044:		(fb_data->cur_update->update_desc->upd_data.waveform_mode
drivers/video/mxc/mxc_epdc_fb.c:4046:		epdc_set_update_waveform(&fb_data->wv_modes);
drivers/video/mxc/mxc_epdc_fb.c:4047:		fb_data->wv_modes_update = false;
drivers/video/mxc/mxc_epdc_fb.c:4050:	epdc_submit_update(fb_data->cur_update->lut_num,
drivers/video/mxc/mxc_epdc_fb.c:4051:			   fb_data->cur_update->update_desc->upd_data.waveform_mode,
drivers/video/mxc/mxc_epdc_fb.c:4052:			   fb_data->cur_update->update_desc->upd_data.update_mode,
drivers/video/mxc/mxc_epdc_fb.c:4056:	mutex_unlock(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:4065:	struct fb_var_screeninfo *screeninfo = &fb_data->epdc_fb_var;
drivers/video/mxc/mxc_epdc_fb.c:4068:	upd_buf_ptr = (u32 *)fb_data->info.screen_base;
drivers/video/mxc/mxc_epdc_fb.c:4071:	epdc_lut_complete_intr(fb_data->rev, 0, true);
drivers/video/mxc/mxc_epdc_fb.c:4074:	if ((screeninfo->rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_epdc_fb.c:4075:		(screeninfo->rotate == FB_ROTATE_CCW)) {
drivers/video/mxc/mxc_epdc_fb.c:4076:		xres = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:4077:		yres = screeninfo->xres;
drivers/video/mxc/mxc_epdc_fb.c:4079:		xres = screeninfo->xres;
drivers/video/mxc/mxc_epdc_fb.c:4080:		yres = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:4084:	epdc_set_update_addr(fb_data->phys_start);
drivers/video/mxc/mxc_epdc_fb.c:4087:	if (fb_data->rev > 20)
drivers/video/mxc/mxc_epdc_fb.c:4089:	epdc_submit_update(0, fb_data->wv_modes.mode_init, UPDATE_MODE_FULL,
drivers/video/mxc/mxc_epdc_fb.c:4092:	dev_dbg(fb_data->dev, "Mode0 update - Waiting for LUT to complete...\n");
drivers/video/mxc/mxc_epdc_fb.c:4094:	/* Will timeout after ~4-5 seconds */
drivers/video/mxc/mxc_epdc_fb.c:4098:			dev_dbg(fb_data->dev, "Mode0 init complete\n");
drivers/video/mxc/mxc_epdc_fb.c:4104:	dev_err(fb_data->dev, "Mode0 init failed!\n");
drivers/video/mxc/mxc_epdc_fb.c:4120:	struct fb_var_screeninfo *screeninfo = &fb_data->epdc_fb_var;
drivers/video/mxc/mxc_epdc_fb.c:4128:		if (fb_data->fw_default_load)
drivers/video/mxc/mxc_epdc_fb.c:4132:		dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:4134:		fb_data->fw_default_load = true;
drivers/video/mxc/mxc_epdc_fb.c:4136:			"imx/epdc.fw", fb_data->dev, GFP_KERNEL, fb_data,
drivers/video/mxc/mxc_epdc_fb.c:4139:			dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:4145:	wv_file = (struct mxcfb_waveform_data_file *)fw->data;
drivers/video/mxc/mxc_epdc_fb.c:4148:	fb_data->trt_entries = wv_file->wdh.trc + 1;
drivers/video/mxc/mxc_epdc_fb.c:4149:	fb_data->temp_range_bounds = kzalloc(fb_data->trt_entries, GFP_KERNEL);
drivers/video/mxc/mxc_epdc_fb.c:4151:	for (i = 0; i < fb_data->trt_entries; i++)
drivers/video/mxc/mxc_epdc_fb.c:4152:		dev_dbg(fb_data->dev, "trt entry #%d = 0x%x\n", i, *((u8 *)&wv_file->data + i));
drivers/video/mxc/mxc_epdc_fb.c:4155:	memcpy(fb_data->temp_range_bounds, &wv_file->data, fb_data->trt_entries);
drivers/video/mxc/mxc_epdc_fb.c:4158:	fb_data->temp_index = mxc_epdc_fb_get_temp_index(fb_data, DEFAULT_TEMP);
drivers/video/mxc/mxc_epdc_fb.c:4161:	wv_data_offs = sizeof(wv_file->wdh) + fb_data->trt_entries + 1;
drivers/video/mxc/mxc_epdc_fb.c:4162:	fb_data->waveform_buffer_size = fw->size - wv_data_offs;
drivers/video/mxc/mxc_epdc_fb.c:4165:	fb_data->waveform_buffer_virt = dma_alloc_coherent(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:4166:						fb_data->waveform_buffer_size,
drivers/video/mxc/mxc_epdc_fb.c:4167:						&fb_data->waveform_buffer_phys,
drivers/video/mxc/mxc_epdc_fb.c:4169:	if (fb_data->waveform_buffer_virt == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:4170:		dev_err(fb_data->dev, "Can't allocate mem for waveform!\n");
drivers/video/mxc/mxc_epdc_fb.c:4174:	memcpy(fb_data->waveform_buffer_virt, (u8 *)(fw->data) + wv_data_offs,
drivers/video/mxc/mxc_epdc_fb.c:4175:		fb_data->waveform_buffer_size);
drivers/video/mxc/mxc_epdc_fb.c:4180:	clk_enable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:4182:	target_pix_clk = fb_data->cur_mode->vmode->pixclock;
drivers/video/mxc/mxc_epdc_fb.c:4184:	clk_enable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:4185:	rounded_pix_clk = clk_round_rate(fb_data->epdc_clk_pix, target_pix_clk);
drivers/video/mxc/mxc_epdc_fb.c:4188:		(rounded_pix_clk <= target_pix_clk - target_pix_clk/100))) {
drivers/video/mxc/mxc_epdc_fb.c:4190:		epdc_parent = clk_get_parent(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:4198:		rounded_pix_clk = clk_round_rate(fb_data->epdc_clk_pix, target_pix_clk);
drivers/video/mxc/mxc_epdc_fb.c:4200:			(rounded_pix_clk <= target_pix_clk - target_pix_clk/100)))
drivers/video/mxc/mxc_epdc_fb.c:4202:			dev_err(fb_data->dev, "Unable to get an accurate EPDC pix clk"
drivers/video/mxc/mxc_epdc_fb.c:4207:	clk_set_rate(fb_data->epdc_clk_pix, rounded_pix_clk);
drivers/video/mxc/mxc_epdc_fb.c:4212:	clk_disable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:4213:	clk_disable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:4215:	fb_data->hw_ready = true;
drivers/video/mxc/mxc_epdc_fb.c:4216:	fb_data->hw_initializing = false;
drivers/video/mxc/mxc_epdc_fb.c:4219:	if ((screeninfo->rotate == FB_ROTATE_CW) ||
drivers/video/mxc/mxc_epdc_fb.c:4220:		(screeninfo->rotate == FB_ROTATE_CCW)) {
drivers/video/mxc/mxc_epdc_fb.c:4221:		xres = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:4222:		yres = screeninfo->xres;
drivers/video/mxc/mxc_epdc_fb.c:4224:		xres = screeninfo->xres;
drivers/video/mxc/mxc_epdc_fb.c:4225:		yres = screeninfo->yres;
drivers/video/mxc/mxc_epdc_fb.c:4240:	mxc_epdc_fb_send_update(&update, &fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:4244:		&fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:4246:		dev_err(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:4260:	if (fb_data->cur_mode) {
drivers/video/mxc/mxc_epdc_fb.c:4261:		strcat(fb_data->fw_str, "imx/epdc_");
drivers/video/mxc/mxc_epdc_fb.c:4262:		strcat(fb_data->fw_str, fb_data->cur_mode->vmode->name);
drivers/video/mxc/mxc_epdc_fb.c:4263:		strcat(fb_data->fw_str, ".fw");
drivers/video/mxc/mxc_epdc_fb.c:4266:	fb_data->fw_default_load = false;
drivers/video/mxc/mxc_epdc_fb.c:4269:				fb_data->fw_str, fb_data->dev, GFP_KERNEL,
drivers/video/mxc/mxc_epdc_fb.c:4272:		dev_dbg(fb_data->dev,
drivers/video/mxc/mxc_epdc_fb.c:4287:		update.waveform_mode = fb_data->wv_modes.mode_du;
drivers/video/mxc/mxc_epdc_fb.c:4289:		update.waveform_mode = fb_data->wv_modes.mode_gc16;
drivers/video/mxc/mxc_epdc_fb.c:4291:		update.waveform_mode = fb_data->wv_modes.mode_gc4;
drivers/video/mxc/mxc_epdc_fb.c:4295:	update.update_region.width = fb_data->epdc_fb_var.xres;
drivers/video/mxc/mxc_epdc_fb.c:4297:	update.update_region.height = fb_data->epdc_fb_var.yres;
drivers/video/mxc/mxc_epdc_fb.c:4336:			sizeof(struct mxc_epdc_fb_data), &pdev->dev);
drivers/video/mxc/mxc_epdc_fb.c:4338:		ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4343:	fb_data->pdata = pdev->dev.platform_data;
drivers/video/mxc/mxc_epdc_fb.c:4344:	if ((fb_data->pdata == NULL) || (fb_data->pdata->num_modes < 1)
drivers/video/mxc/mxc_epdc_fb.c:4345:		|| (fb_data->pdata->epdc_mode == NULL)
drivers/video/mxc/mxc_epdc_fb.c:4346:		|| (fb_data->pdata->epdc_mode->vmode == NULL)) {
drivers/video/mxc/mxc_epdc_fb.c:4347:		ret = -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:4352:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4356:	fb_data->tce_prevent = 0;
drivers/video/mxc/mxc_epdc_fb.c:4364:				fb_data->default_bpp =
drivers/video/mxc/mxc_epdc_fb.c:4369:				fb_data->tce_prevent = 1;
drivers/video/mxc/mxc_epdc_fb.c:4374:	fb_data->dev = &pdev->dev;
drivers/video/mxc/mxc_epdc_fb.c:4376:	if (!fb_data->default_bpp)
drivers/video/mxc/mxc_epdc_fb.c:4377:		fb_data->default_bpp = 16;
drivers/video/mxc/mxc_epdc_fb.c:4380:	fb_data->cur_mode = &fb_data->pdata->epdc_mode[0];
drivers/video/mxc/mxc_epdc_fb.c:4383:		for (i = 0; i < fb_data->pdata->num_modes; i++)
drivers/video/mxc/mxc_epdc_fb.c:4384:			if (!strcmp(fb_data->pdata->epdc_mode[i].vmode->name,
drivers/video/mxc/mxc_epdc_fb.c:4386:				fb_data->cur_mode =
drivers/video/mxc/mxc_epdc_fb.c:4387:					&fb_data->pdata->epdc_mode[i];
drivers/video/mxc/mxc_epdc_fb.c:4391:	vmode = fb_data->cur_mode->vmode;
drivers/video/mxc/mxc_epdc_fb.c:4394:	info = &fb_data->info;
drivers/video/mxc/mxc_epdc_fb.c:4397:	ret = fb_alloc_cmap(&info->cmap, 256, 0);
drivers/video/mxc/mxc_epdc_fb.c:4401:	dev_dbg(&pdev->dev, "resolution %dx%d, bpp %d\n",
drivers/video/mxc/mxc_epdc_fb.c:4402:		vmode->xres, vmode->yres, fb_data->default_bpp);
drivers/video/mxc/mxc_epdc_fb.c:4406:	 * - 32-byte alignment for buffer width
drivers/video/mxc/mxc_epdc_fb.c:4407:	 * - 128-byte alignment for buffer height
drivers/video/mxc/mxc_epdc_fb.c:4410:	xres_virt = ALIGN(vmode->xres, 32);
drivers/video/mxc/mxc_epdc_fb.c:4411:	yres_virt = ALIGN(vmode->yres, 128);
drivers/video/mxc/mxc_epdc_fb.c:4412:	fb_data->max_pix_size = PAGE_ALIGN(xres_virt * yres_virt);
drivers/video/mxc/mxc_epdc_fb.c:4418:	xres_virt_rot = ALIGN(vmode->yres, 32);
drivers/video/mxc/mxc_epdc_fb.c:4419:	yres_virt_rot = ALIGN(vmode->xres, 128);
drivers/video/mxc/mxc_epdc_fb.c:4421:	fb_data->max_pix_size = (fb_data->max_pix_size > pix_size_rot) ?
drivers/video/mxc/mxc_epdc_fb.c:4422:				fb_data->max_pix_size : pix_size_rot;
drivers/video/mxc/mxc_epdc_fb.c:4424:	buf_size = fb_data->max_pix_size * fb_data->default_bpp/8;
drivers/video/mxc/mxc_epdc_fb.c:4428:		fb_data->num_screens = DIV_ROUND_UP(x_mem_size, buf_size);
drivers/video/mxc/mxc_epdc_fb.c:4429:		if (fb_data->num_screens < NUM_SCREENS_MIN)
drivers/video/mxc/mxc_epdc_fb.c:4430:			fb_data->num_screens = NUM_SCREENS_MIN;
drivers/video/mxc/mxc_epdc_fb.c:4431:		else if (buf_size * fb_data->num_screens > SZ_16M)
drivers/video/mxc/mxc_epdc_fb.c:4432:			fb_data->num_screens = SZ_16M / buf_size;
drivers/video/mxc/mxc_epdc_fb.c:4434:		fb_data->num_screens = NUM_SCREENS_MIN;
drivers/video/mxc/mxc_epdc_fb.c:4436:	fb_data->map_size = buf_size * fb_data->num_screens;
drivers/video/mxc/mxc_epdc_fb.c:4437:	dev_dbg(&pdev->dev, "memory to allocate: %d\n", fb_data->map_size);
drivers/video/mxc/mxc_epdc_fb.c:4441:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4445:	epdc_base = ioremap(res->start, SZ_4K);
drivers/video/mxc/mxc_epdc_fb.c:4447:		ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4452:	info->screen_base = dma_alloc_writecombine(&pdev->dev,
drivers/video/mxc/mxc_epdc_fb.c:4453:						  fb_data->map_size,
drivers/video/mxc/mxc_epdc_fb.c:4454:						  &fb_data->phys_start,
drivers/video/mxc/mxc_epdc_fb.c:4457:	if (info->screen_base == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:4458:		ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4461:	dev_dbg(&pdev->dev, "allocated at %p:0x%x\n", info->screen_base,
drivers/video/mxc/mxc_epdc_fb.c:4462:		fb_data->phys_start);
drivers/video/mxc/mxc_epdc_fb.c:4464:	var_info = &info->var;
drivers/video/mxc/mxc_epdc_fb.c:4465:	var_info->activate = FB_ACTIVATE_TEST;
drivers/video/mxc/mxc_epdc_fb.c:4466:	var_info->bits_per_pixel = fb_data->default_bpp;
drivers/video/mxc/mxc_epdc_fb.c:4467:	var_info->xres = vmode->xres;
drivers/video/mxc/mxc_epdc_fb.c:4468:	var_info->yres = vmode->yres;
drivers/video/mxc/mxc_epdc_fb.c:4469:	var_info->xres_virtual = xres_virt;
drivers/video/mxc/mxc_epdc_fb.c:4471:	var_info->yres_virtual = yres_virt * fb_data->num_screens;
drivers/video/mxc/mxc_epdc_fb.c:4473:	var_info->pixclock = vmode->pixclock;
drivers/video/mxc/mxc_epdc_fb.c:4474:	var_info->left_margin = vmode->left_margin;
drivers/video/mxc/mxc_epdc_fb.c:4475:	var_info->right_margin = vmode->right_margin;
drivers/video/mxc/mxc_epdc_fb.c:4476:	var_info->upper_margin = vmode->upper_margin;
drivers/video/mxc/mxc_epdc_fb.c:4477:	var_info->lower_margin = vmode->lower_margin;
drivers/video/mxc/mxc_epdc_fb.c:4478:	var_info->hsync_len = vmode->hsync_len;
drivers/video/mxc/mxc_epdc_fb.c:4479:	var_info->vsync_len = vmode->vsync_len;
drivers/video/mxc/mxc_epdc_fb.c:4480:	var_info->vmode = FB_VMODE_NONINTERLACED;
drivers/video/mxc/mxc_epdc_fb.c:4482:	switch (fb_data->default_bpp) {
drivers/video/mxc/mxc_epdc_fb.c:4485:		var_info->red.offset = 16;
drivers/video/mxc/mxc_epdc_fb.c:4486:		var_info->red.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:4487:		var_info->green.offset = 8;
drivers/video/mxc/mxc_epdc_fb.c:4488:		var_info->green.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:4489:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:4490:		var_info->blue.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:4494:		var_info->red.offset = 11;
drivers/video/mxc/mxc_epdc_fb.c:4495:		var_info->red.length = 5;
drivers/video/mxc/mxc_epdc_fb.c:4496:		var_info->green.offset = 5;
drivers/video/mxc/mxc_epdc_fb.c:4497:		var_info->green.length = 6;
drivers/video/mxc/mxc_epdc_fb.c:4498:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:4499:		var_info->blue.length = 5;
drivers/video/mxc/mxc_epdc_fb.c:4504:		 * For 8-bit grayscale, R, G, and B offset are equal.
drivers/video/mxc/mxc_epdc_fb.c:4507:		var_info->grayscale = GRAYSCALE_8BIT;
drivers/video/mxc/mxc_epdc_fb.c:4509:		var_info->red.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:4510:		var_info->red.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:4511:		var_info->red.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:4512:		var_info->green.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:4513:		var_info->green.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:4514:		var_info->green.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:4515:		var_info->blue.length = 8;
drivers/video/mxc/mxc_epdc_fb.c:4516:		var_info->blue.offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:4517:		var_info->blue.msb_right = 0;
drivers/video/mxc/mxc_epdc_fb.c:4521:		dev_err(&pdev->dev, "unsupported bitwidth %d\n",
drivers/video/mxc/mxc_epdc_fb.c:4522:			fb_data->default_bpp);
drivers/video/mxc/mxc_epdc_fb.c:4523:		ret = -EINVAL;
drivers/video/mxc/mxc_epdc_fb.c:4527:	fix_info = &info->fix;
drivers/video/mxc/mxc_epdc_fb.c:4529:	strcpy(fix_info->id, "mxc_epdc_fb");
drivers/video/mxc/mxc_epdc_fb.c:4530:	fix_info->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxc_epdc_fb.c:4531:	fix_info->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxc_epdc_fb.c:4532:	fix_info->xpanstep = 0;
drivers/video/mxc/mxc_epdc_fb.c:4533:	fix_info->ypanstep = 0;
drivers/video/mxc/mxc_epdc_fb.c:4534:	fix_info->ywrapstep = 0;
drivers/video/mxc/mxc_epdc_fb.c:4535:	fix_info->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxc_epdc_fb.c:4536:	fix_info->smem_start = fb_data->phys_start;
drivers/video/mxc/mxc_epdc_fb.c:4537:	fix_info->smem_len = fb_data->map_size;
drivers/video/mxc/mxc_epdc_fb.c:4538:	fix_info->ypanstep = 0;
drivers/video/mxc/mxc_epdc_fb.c:4540:	fb_data->native_width = vmode->xres;
drivers/video/mxc/mxc_epdc_fb.c:4541:	fb_data->native_height = vmode->yres;
drivers/video/mxc/mxc_epdc_fb.c:4543:	info->fbops = &mxc_epdc_fb_ops;
drivers/video/mxc/mxc_epdc_fb.c:4544:	info->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mxc_epdc_fb.c:4545:	info->pseudo_palette = fb_data->pseudo_palette;
drivers/video/mxc/mxc_epdc_fb.c:4546:	info->screen_size = info->fix.smem_len;
drivers/video/mxc/mxc_epdc_fb.c:4547:	info->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mxc_epdc_fb.c:4551:	fb_data->auto_mode = AUTO_UPDATE_MODE_REGION_MODE;
drivers/video/mxc/mxc_epdc_fb.c:4552:	fb_data->upd_scheme = UPDATE_SCHEME_QUEUE_AND_MERGE;
drivers/video/mxc/mxc_epdc_fb.c:4555:	fb_data->epdc_fb_var = *var_info;
drivers/video/mxc/mxc_epdc_fb.c:4556:	fb_data->fb_offset = 0;
drivers/video/mxc/mxc_epdc_fb.c:4557:	fb_data->eof_sync_period = 0;
drivers/video/mxc/mxc_epdc_fb.c:4559:	fb_data->epdc_clk_axi = clk_get(fb_data->dev, "epdc_axi");
drivers/video/mxc/mxc_epdc_fb.c:4560:	if (IS_ERR(fb_data->epdc_clk_axi)) {
drivers/video/mxc/mxc_epdc_fb.c:4561:		dev_err(&pdev->dev, "Unable to get EPDC AXI clk."
drivers/video/mxc/mxc_epdc_fb.c:4562:			"err = 0x%x\n", (int)fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:4563:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4566:	fb_data->epdc_clk_pix = clk_get(fb_data->dev, "epdc_pix");
drivers/video/mxc/mxc_epdc_fb.c:4567:	if (IS_ERR(fb_data->epdc_clk_pix)) {
drivers/video/mxc/mxc_epdc_fb.c:4568:		dev_err(&pdev->dev, "Unable to get EPDC pix clk."
drivers/video/mxc/mxc_epdc_fb.c:4569:			"err = 0x%x\n", (int)fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:4570:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4574:	clk_enable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:4576:	clk_disable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:4577:	fb_data->rev = ((val & EPDC_VERSION_MAJOR_MASK) >>
drivers/video/mxc/mxc_epdc_fb.c:4581:	dev_dbg(&pdev->dev, "EPDC version = %d\n", fb_data->rev);
drivers/video/mxc/mxc_epdc_fb.c:4583:	if (fb_data->rev < 20) {
drivers/video/mxc/mxc_epdc_fb.c:4584:		fb_data->num_luts = EPDC_V1_NUM_LUTS;
drivers/video/mxc/mxc_epdc_fb.c:4585:		fb_data->max_num_updates = EPDC_V1_MAX_NUM_UPDATES;
drivers/video/mxc/mxc_epdc_fb.c:4587:		fb_data->num_luts = EPDC_V2_NUM_LUTS;
drivers/video/mxc/mxc_epdc_fb.c:4588:		fb_data->max_num_updates = EPDC_V2_MAX_NUM_UPDATES;
drivers/video/mxc/mxc_epdc_fb.c:4589:		if (vmode->xres > EPDC_V2_MAX_UPDATE_WIDTH)
drivers/video/mxc/mxc_epdc_fb.c:4590:			fb_data->restrict_width = true;
drivers/video/mxc/mxc_epdc_fb.c:4592:	fb_data->max_num_buffers = EPDC_MAX_NUM_BUFFERS;
drivers/video/mxc/mxc_epdc_fb.c:4599:	INIT_LIST_HEAD(&fb_data->upd_pending_list);
drivers/video/mxc/mxc_epdc_fb.c:4600:	INIT_LIST_HEAD(&fb_data->upd_buf_queue);
drivers/video/mxc/mxc_epdc_fb.c:4601:	INIT_LIST_HEAD(&fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_epdc_fb.c:4602:	INIT_LIST_HEAD(&fb_data->upd_buf_collision_list);
drivers/video/mxc/mxc_epdc_fb.c:4605:	for (i = 0; i < fb_data->max_num_updates; i++) {
drivers/video/mxc/mxc_epdc_fb.c:4608:			ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4613:		list_add(&upd_list->list, &fb_data->upd_buf_free_list);
drivers/video/mxc/mxc_epdc_fb.c:4616:	fb_data->virt_addr_updbuf =
drivers/video/mxc/mxc_epdc_fb.c:4617:		kzalloc(sizeof(void *) * fb_data->max_num_buffers, GFP_KERNEL);
drivers/video/mxc/mxc_epdc_fb.c:4618:	fb_data->phys_addr_updbuf =
drivers/video/mxc/mxc_epdc_fb.c:4619:		kzalloc(sizeof(dma_addr_t) * fb_data->max_num_buffers,
drivers/video/mxc/mxc_epdc_fb.c:4621:	for (i = 0; i < fb_data->max_num_buffers; i++) {
drivers/video/mxc/mxc_epdc_fb.c:4625:		 * be as big as the full-screen frame buffer
drivers/video/mxc/mxc_epdc_fb.c:4627:		fb_data->virt_addr_updbuf[i] =
drivers/video/mxc/mxc_epdc_fb.c:4628:			kmalloc(fb_data->max_pix_size, GFP_KERNEL);
drivers/video/mxc/mxc_epdc_fb.c:4629:		fb_data->phys_addr_updbuf[i] =
drivers/video/mxc/mxc_epdc_fb.c:4630:			virt_to_phys(fb_data->virt_addr_updbuf[i]);
drivers/video/mxc/mxc_epdc_fb.c:4631:		if (fb_data->virt_addr_updbuf[i] == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:4632:			ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4636:		dev_dbg(fb_data->info.device, "allocated %d bytes @ 0x%08X\n",
drivers/video/mxc/mxc_epdc_fb.c:4637:			fb_data->max_pix_size, fb_data->phys_addr_updbuf[i]);
drivers/video/mxc/mxc_epdc_fb.c:4641:	fb_data->upd_buffer_num = 0;
drivers/video/mxc/mxc_epdc_fb.c:4648:	fb_data->virt_addr_copybuf =
drivers/video/mxc/mxc_epdc_fb.c:4649:	    dma_alloc_coherent(fb_data->info.device, fb_data->max_pix_size*2,
drivers/video/mxc/mxc_epdc_fb.c:4650:			       &fb_data->phys_addr_copybuf, GFP_DMA);
drivers/video/mxc/mxc_epdc_fb.c:4651:	if (fb_data->virt_addr_copybuf == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:4652:		ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4656:	fb_data->working_buffer_size = vmode->yres * vmode->xres * 2;
drivers/video/mxc/mxc_epdc_fb.c:4658:	fb_data->working_buffer_virt =
drivers/video/mxc/mxc_epdc_fb.c:4659:	    dma_alloc_coherent(&pdev->dev, fb_data->working_buffer_size,
drivers/video/mxc/mxc_epdc_fb.c:4660:			       &fb_data->working_buffer_phys, GFP_DMA);
drivers/video/mxc/mxc_epdc_fb.c:4661:	if (fb_data->working_buffer_virt == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:4662:		dev_err(&pdev->dev, "Can't allocate mem for working buf!\n");
drivers/video/mxc/mxc_epdc_fb.c:4663:		ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4668:	if (fb_data->pdata->get_pins)
drivers/video/mxc/mxc_epdc_fb.c:4669:		fb_data->pdata->get_pins();
drivers/video/mxc/mxc_epdc_fb.c:4671:	fb_data->in_init = false;
drivers/video/mxc/mxc_epdc_fb.c:4673:	fb_data->hw_ready = false;
drivers/video/mxc/mxc_epdc_fb.c:4674:	fb_data->hw_initializing = false;
drivers/video/mxc/mxc_epdc_fb.c:4680:	fb_data->wv_modes.mode_init = 0;
drivers/video/mxc/mxc_epdc_fb.c:4681:	fb_data->wv_modes.mode_du = 1;
drivers/video/mxc/mxc_epdc_fb.c:4682:	fb_data->wv_modes.mode_gc4 = 3;
drivers/video/mxc/mxc_epdc_fb.c:4683:	fb_data->wv_modes.mode_gc8 = 2;
drivers/video/mxc/mxc_epdc_fb.c:4684:	fb_data->wv_modes.mode_gc16 = 2;
drivers/video/mxc/mxc_epdc_fb.c:4685:	fb_data->wv_modes.mode_gc32 = 2;
drivers/video/mxc/mxc_epdc_fb.c:4686:	fb_data->wv_modes_update = true;
drivers/video/mxc/mxc_epdc_fb.c:4689:	INIT_LIST_HEAD(&fb_data->full_marker_list);
drivers/video/mxc/mxc_epdc_fb.c:4692:	fb_data->lut_update_order =
drivers/video/mxc/mxc_epdc_fb.c:4693:		kzalloc(fb_data->num_luts * sizeof(u32 *), GFP_KERNEL);
drivers/video/mxc/mxc_epdc_fb.c:4694:	for (i = 0; i < fb_data->num_luts; i++)
drivers/video/mxc/mxc_epdc_fb.c:4695:		fb_data->lut_update_order[i] = 0;
drivers/video/mxc/mxc_epdc_fb.c:4697:	INIT_DELAYED_WORK(&fb_data->epdc_done_work, epdc_done_work_func);
drivers/video/mxc/mxc_epdc_fb.c:4698:	fb_data->epdc_submit_workqueue = alloc_workqueue("EPDC Submit",
drivers/video/mxc/mxc_epdc_fb.c:4701:	INIT_WORK(&fb_data->epdc_submit_work, epdc_submit_work_func);
drivers/video/mxc/mxc_epdc_fb.c:4702:	fb_data->epdc_intr_workqueue = alloc_workqueue("EPDC Interrupt",
drivers/video/mxc/mxc_epdc_fb.c:4705:	INIT_WORK(&fb_data->epdc_intr_work, epdc_intr_work_func);
drivers/video/mxc/mxc_epdc_fb.c:4710:		dev_err(&pdev->dev, "cannot get IRQ resource\n");
drivers/video/mxc/mxc_epdc_fb.c:4711:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4714:	fb_data->epdc_irq = res->start;
drivers/video/mxc/mxc_epdc_fb.c:4717:	ret = request_irq(fb_data->epdc_irq, mxc_epdc_irq_handler, 0,
drivers/video/mxc/mxc_epdc_fb.c:4720:		dev_err(&pdev->dev, "request_irq (%d) failed with error %d\n",
drivers/video/mxc/mxc_epdc_fb.c:4721:			fb_data->epdc_irq, ret);
drivers/video/mxc/mxc_epdc_fb.c:4722:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4726:	info->fbdefio = &mxc_epdc_fb_defio;
drivers/video/mxc/mxc_epdc_fb.c:4732:	fb_data->display_regulator = regulator_get(NULL, "DISPLAY");
drivers/video/mxc/mxc_epdc_fb.c:4733:	if (IS_ERR(fb_data->display_regulator)) {
drivers/video/mxc/mxc_epdc_fb.c:4734:		dev_err(&pdev->dev, "Unable to get display PMIC regulator."
drivers/video/mxc/mxc_epdc_fb.c:4735:			"err = 0x%x\n", (int)fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4736:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4739:	fb_data->vcom_regulator = regulator_get(NULL, "VCOM");
drivers/video/mxc/mxc_epdc_fb.c:4740:	if (IS_ERR(fb_data->vcom_regulator)) {
drivers/video/mxc/mxc_epdc_fb.c:4741:		regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4742:		dev_err(&pdev->dev, "Unable to get VCOM regulator."
drivers/video/mxc/mxc_epdc_fb.c:4743:			"err = 0x%x\n", (int)fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4744:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4747:	fb_data->v3p3_regulator = regulator_get(NULL, "V3P3");
drivers/video/mxc/mxc_epdc_fb.c:4748:	if (IS_ERR(fb_data->v3p3_regulator)) {
drivers/video/mxc/mxc_epdc_fb.c:4749:		regulator_put(fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4750:		regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4751:		dev_err(&pdev->dev, "Unable to get V3P3 regulator."
drivers/video/mxc/mxc_epdc_fb.c:4752:			"err = 0x%x\n", (int)fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4753:		ret = -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:4757:	if (device_create_file(info->dev, &fb_attrs[0]))
drivers/video/mxc/mxc_epdc_fb.c:4758:		dev_err(&pdev->dev, "Unable to create file from fb_attrs\n");
drivers/video/mxc/mxc_epdc_fb.c:4760:	fb_data->cur_update = NULL;
drivers/video/mxc/mxc_epdc_fb.c:4762:	mutex_init(&fb_data->queue_mutex);
drivers/video/mxc/mxc_epdc_fb.c:4763:	mutex_init(&fb_data->pxp_mutex);
drivers/video/mxc/mxc_epdc_fb.c:4764:	mutex_init(&fb_data->power_mutex);
drivers/video/mxc/mxc_epdc_fb.c:4770:	pxp_conf = &fb_data->pxp_conf;
drivers/video/mxc/mxc_epdc_fb.c:4771:	proc_data = &pxp_conf->proc_data;
drivers/video/mxc/mxc_epdc_fb.c:4773:	/* Initialize non-channel-specific PxP parameters */
drivers/video/mxc/mxc_epdc_fb.c:4774:	proc_data->drect.left = proc_data->srect.left = 0;
drivers/video/mxc/mxc_epdc_fb.c:4775:	proc_data->drect.top = proc_data->srect.top = 0;
drivers/video/mxc/mxc_epdc_fb.c:4776:	proc_data->drect.width = proc_data->srect.width = fb_data->info.var.xres;
drivers/video/mxc/mxc_epdc_fb.c:4777:	proc_data->drect.height = proc_data->srect.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_epdc_fb.c:4778:	proc_data->scaling = 0;
drivers/video/mxc/mxc_epdc_fb.c:4779:	proc_data->hflip = 0;
drivers/video/mxc/mxc_epdc_fb.c:4780:	proc_data->vflip = 0;
drivers/video/mxc/mxc_epdc_fb.c:4781:	proc_data->rotate = 0;
drivers/video/mxc/mxc_epdc_fb.c:4782:	proc_data->bgcolor = 0;
drivers/video/mxc/mxc_epdc_fb.c:4783:	proc_data->overlay_state = 0;
drivers/video/mxc/mxc_epdc_fb.c:4784:	proc_data->lut_transform = PXP_LUT_NONE;
drivers/video/mxc/mxc_epdc_fb.c:4785:	proc_data->lut_map = NULL;
drivers/video/mxc/mxc_epdc_fb.c:4788:	 * We initially configure PxP for RGB->YUV conversion,
drivers/video/mxc/mxc_epdc_fb.c:4796:	pxp_conf->s0_param.pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_epdc_fb.c:4797:	pxp_conf->s0_param.width = fb_data->info.var.xres_virtual;
drivers/video/mxc/mxc_epdc_fb.c:4798:	pxp_conf->s0_param.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_epdc_fb.c:4799:	pxp_conf->s0_param.color_key = -1;
drivers/video/mxc/mxc_epdc_fb.c:4800:	pxp_conf->s0_param.color_key_enable = false;
drivers/video/mxc/mxc_epdc_fb.c:4807:		pxp_conf->ol_param[i].combine_enable = false;
drivers/video/mxc/mxc_epdc_fb.c:4808:		pxp_conf->ol_param[i].width = 0;
drivers/video/mxc/mxc_epdc_fb.c:4809:		pxp_conf->ol_param[i].height = 0;
drivers/video/mxc/mxc_epdc_fb.c:4810:		pxp_conf->ol_param[i].pixel_fmt = PXP_PIX_FMT_RGB565;
drivers/video/mxc/mxc_epdc_fb.c:4811:		pxp_conf->ol_param[i].color_key_enable = false;
drivers/video/mxc/mxc_epdc_fb.c:4812:		pxp_conf->ol_param[i].color_key = -1;
drivers/video/mxc/mxc_epdc_fb.c:4813:		pxp_conf->ol_param[i].global_alpha_enable = false;
drivers/video/mxc/mxc_epdc_fb.c:4814:		pxp_conf->ol_param[i].global_alpha = 0;
drivers/video/mxc/mxc_epdc_fb.c:4815:		pxp_conf->ol_param[i].local_alpha_enable = false;
drivers/video/mxc/mxc_epdc_fb.c:4820:	 * Output is Y-only greyscale
drivers/video/mxc/mxc_epdc_fb.c:4823:	pxp_conf->out_param.width = fb_data->info.var.xres;
drivers/video/mxc/mxc_epdc_fb.c:4824:	pxp_conf->out_param.height = fb_data->info.var.yres;
drivers/video/mxc/mxc_epdc_fb.c:4825:	pxp_conf->out_param.stride = pxp_conf->out_param.width;
drivers/video/mxc/mxc_epdc_fb.c:4826:	pxp_conf->out_param.pixel_fmt = PXP_PIX_FMT_GREY;
drivers/video/mxc/mxc_epdc_fb.c:4828:	/* Initialize color map for conversion of 8-bit gray pixels */
drivers/video/mxc/mxc_epdc_fb.c:4829:	fb_data->pxp_conf.proc_data.lut_map = kmalloc(256, GFP_KERNEL);
drivers/video/mxc/mxc_epdc_fb.c:4830:	if (fb_data->pxp_conf.proc_data.lut_map == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:4831:		dev_err(&pdev->dev, "Can't allocate mem for lut map!\n");
drivers/video/mxc/mxc_epdc_fb.c:4832:		ret = -ENOMEM;
drivers/video/mxc/mxc_epdc_fb.c:4836:		fb_data->pxp_conf.proc_data.lut_map[i] = i;
drivers/video/mxc/mxc_epdc_fb.c:4838:	fb_data->pxp_conf.proc_data.lut_map_updated = true;
drivers/video/mxc/mxc_epdc_fb.c:4844:	fb_data->pxp_chan = NULL;
drivers/video/mxc/mxc_epdc_fb.c:4846:	/* Initialize Scatter-gather list containing 2 buffer addresses. */
drivers/video/mxc/mxc_epdc_fb.c:4847:	sg = fb_data->sg;
drivers/video/mxc/mxc_epdc_fb.c:4855:	sg_dma_address(&sg[0]) = info->fix.smem_start;
drivers/video/mxc/mxc_epdc_fb.c:4856:	sg_set_page(&sg[0], virt_to_page(info->screen_base),
drivers/video/mxc/mxc_epdc_fb.c:4857:		    info->fix.smem_len, offset_in_page(info->screen_base));
drivers/video/mxc/mxc_epdc_fb.c:4859:	fb_data->order_cnt = 0;
drivers/video/mxc/mxc_epdc_fb.c:4860:	fb_data->waiting_for_wb = false;
drivers/video/mxc/mxc_epdc_fb.c:4861:	fb_data->waiting_for_lut = false;
drivers/video/mxc/mxc_epdc_fb.c:4862:	fb_data->waiting_for_lut15 = false;
drivers/video/mxc/mxc_epdc_fb.c:4863:	fb_data->waiting_for_idle = false;
drivers/video/mxc/mxc_epdc_fb.c:4864:	fb_data->blank = FB_BLANK_UNBLANK;
drivers/video/mxc/mxc_epdc_fb.c:4865:	fb_data->power_state = POWER_STATE_OFF;
drivers/video/mxc/mxc_epdc_fb.c:4866:	fb_data->powering_down = false;
drivers/video/mxc/mxc_epdc_fb.c:4867:	fb_data->wait_for_powerdown = false;
drivers/video/mxc/mxc_epdc_fb.c:4868:	fb_data->updates_active = false;
drivers/video/mxc/mxc_epdc_fb.c:4869:	fb_data->pwrdown_delay = 0;
drivers/video/mxc/mxc_epdc_fb.c:4874:		dev_err(&pdev->dev,
drivers/video/mxc/mxc_epdc_fb.c:4884:		dev_err(&pdev->dev, "Failed to initialize HW!\n");
drivers/video/mxc/mxc_epdc_fb.c:4891:	kfree(fb_data->pxp_conf.proc_data.lut_map);
drivers/video/mxc/mxc_epdc_fb.c:4893:	regulator_put(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4895:	regulator_put(fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4897:	regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4899:	free_irq(fb_data->epdc_irq, fb_data);
drivers/video/mxc/mxc_epdc_fb.c:4901:	dma_free_writecombine(&pdev->dev, fb_data->working_buffer_size,
drivers/video/mxc/mxc_epdc_fb.c:4902:		fb_data->working_buffer_virt, fb_data->working_buffer_phys);
drivers/video/mxc/mxc_epdc_fb.c:4903:	if (fb_data->pdata->put_pins)
drivers/video/mxc/mxc_epdc_fb.c:4904:		fb_data->pdata->put_pins();
drivers/video/mxc/mxc_epdc_fb.c:4906:	dma_free_writecombine(&pdev->dev, fb_data->max_pix_size*2,
drivers/video/mxc/mxc_epdc_fb.c:4907:			      fb_data->virt_addr_copybuf,
drivers/video/mxc/mxc_epdc_fb.c:4908:			      fb_data->phys_addr_copybuf);
drivers/video/mxc/mxc_epdc_fb.c:4910:	for (i = 0; i < fb_data->max_num_buffers; i++)
drivers/video/mxc/mxc_epdc_fb.c:4911:		if (fb_data->virt_addr_updbuf[i] != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4912:			kfree(fb_data->virt_addr_updbuf[i]);
drivers/video/mxc/mxc_epdc_fb.c:4913:	if (fb_data->virt_addr_updbuf != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4914:		kfree(fb_data->virt_addr_updbuf);
drivers/video/mxc/mxc_epdc_fb.c:4915:	if (fb_data->phys_addr_updbuf != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4916:		kfree(fb_data->phys_addr_updbuf);
drivers/video/mxc/mxc_epdc_fb.c:4918:	list_for_each_entry_safe(plist, temp_list, &fb_data->upd_buf_free_list,
drivers/video/mxc/mxc_epdc_fb.c:4920:		list_del(&plist->list);
drivers/video/mxc/mxc_epdc_fb.c:4924:	dma_free_writecombine(&pdev->dev, fb_data->map_size, info->screen_base,
drivers/video/mxc/mxc_epdc_fb.c:4925:			      fb_data->phys_start);
drivers/video/mxc/mxc_epdc_fb.c:4930:	fb_dealloc_cmap(&info->cmap);
drivers/video/mxc/mxc_epdc_fb.c:4943:	mxc_epdc_fb_blank(FB_BLANK_POWERDOWN, &fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:4945:	flush_workqueue(fb_data->epdc_submit_workqueue);
drivers/video/mxc/mxc_epdc_fb.c:4946:	destroy_workqueue(fb_data->epdc_submit_workqueue);
drivers/video/mxc/mxc_epdc_fb.c:4948:	regulator_put(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4949:	regulator_put(fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4950:	regulator_put(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_epdc_fb.c:4952:	unregister_framebuffer(&fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:4953:	free_irq(fb_data->epdc_irq, fb_data);
drivers/video/mxc/mxc_epdc_fb.c:4955:	for (i = 0; i < fb_data->max_num_buffers; i++)
drivers/video/mxc/mxc_epdc_fb.c:4956:		if (fb_data->virt_addr_updbuf[i] != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4957:			kfree(fb_data->virt_addr_updbuf[i]);
drivers/video/mxc/mxc_epdc_fb.c:4958:	if (fb_data->virt_addr_updbuf != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4959:		kfree(fb_data->virt_addr_updbuf);
drivers/video/mxc/mxc_epdc_fb.c:4960:	if (fb_data->phys_addr_updbuf != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4961:		kfree(fb_data->phys_addr_updbuf);
drivers/video/mxc/mxc_epdc_fb.c:4963:	dma_free_writecombine(&pdev->dev, fb_data->working_buffer_size,
drivers/video/mxc/mxc_epdc_fb.c:4964:				fb_data->working_buffer_virt,
drivers/video/mxc/mxc_epdc_fb.c:4965:				fb_data->working_buffer_phys);
drivers/video/mxc/mxc_epdc_fb.c:4966:	if (fb_data->waveform_buffer_virt != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4967:		dma_free_writecombine(&pdev->dev, fb_data->waveform_buffer_size,
drivers/video/mxc/mxc_epdc_fb.c:4968:				fb_data->waveform_buffer_virt,
drivers/video/mxc/mxc_epdc_fb.c:4969:				fb_data->waveform_buffer_phys);
drivers/video/mxc/mxc_epdc_fb.c:4970:	if (fb_data->virt_addr_copybuf != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4971:		dma_free_writecombine(&pdev->dev, fb_data->max_pix_size*2,
drivers/video/mxc/mxc_epdc_fb.c:4972:				fb_data->virt_addr_copybuf,
drivers/video/mxc/mxc_epdc_fb.c:4973:				fb_data->phys_addr_copybuf);
drivers/video/mxc/mxc_epdc_fb.c:4974:	list_for_each_entry_safe(plist, temp_list, &fb_data->upd_buf_free_list,
drivers/video/mxc/mxc_epdc_fb.c:4976:		list_del(&plist->list);
drivers/video/mxc/mxc_epdc_fb.c:4980:	fb_deferred_io_cleanup(&fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:4983:	dma_free_writecombine(&pdev->dev, fb_data->map_size, fb_data->info.screen_base,
drivers/video/mxc/mxc_epdc_fb.c:4984:			      fb_data->phys_start);
drivers/video/mxc/mxc_epdc_fb.c:4986:	if (fb_data->pdata->put_pins)
drivers/video/mxc/mxc_epdc_fb.c:4987:		fb_data->pdata->put_pins();
drivers/video/mxc/mxc_epdc_fb.c:4989:	/* Release PxP-related resources */
drivers/video/mxc/mxc_epdc_fb.c:4990:	if (fb_data->pxp_chan != NULL)
drivers/video/mxc/mxc_epdc_fb.c:4991:		dma_release_channel(&fb_data->pxp_chan->dma_chan);
drivers/video/mxc/mxc_epdc_fb.c:4995:	fb_dealloc_cmap(&fb_data->info.cmap);
drivers/video/mxc/mxc_epdc_fb.c:4997:	framebuffer_release(&fb_data->info);
drivers/video/mxc/mxc_epdc_fb.c:5009:	data->pwrdown_delay = FB_POWERDOWN_DISABLE;
drivers/video/mxc/mxc_epdc_fb.c:5010:	ret = mxc_epdc_fb_blank(FB_BLANK_POWERDOWN, &data->info);
drivers/video/mxc/mxc_epdc_fb.c:5022:	mxc_epdc_fb_blank(FB_BLANK_UNBLANK, &data->info);
drivers/video/mxc/mxc_epdc_fb.c:5024:	data->updates_active = false;
drivers/video/mxc/mxc_epdc_fb.c:5034:	if (regulator_is_enabled(fb_data->vcom_regulator))
drivers/video/mxc/mxc_epdc_fb.c:5035:		regulator_disable(fb_data->vcom_regulator);
drivers/video/mxc/mxc_epdc_fb.c:5036:	if (regulator_is_enabled(fb_data->display_regulator))
drivers/video/mxc/mxc_epdc_fb.c:5037:		regulator_disable(fb_data->display_regulator);
drivers/video/mxc/mxc_epdc_fb.c:5040:	clk_enable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:5041:	clk_enable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:5043:	clk_disable(fb_data->epdc_clk_pix);
drivers/video/mxc/mxc_epdc_fb.c:5044:	clk_disable(fb_data->epdc_clk_axi);
drivers/video/mxc/mxc_epdc_fb.c:5047:	if (fb_data->pdata->disable_pins)
drivers/video/mxc/mxc_epdc_fb.c:5048:		fb_data->pdata->disable_pins();
drivers/video/mxc/mxc_epdc_fb.c:5051:	if (regulator_is_enabled(fb_data->v3p3_regulator))
drivers/video/mxc/mxc_epdc_fb.c:5052:		regulator_disable(fb_data->v3p3_regulator);
drivers/video/mxc/mxc_epdc_fb.c:5076:	struct dma_chan *chan = tx_desc->txd.chan;
drivers/video/mxc/mxc_epdc_fb.c:5078:	struct mxc_epdc_fb_data *fb_data = pxp_chan->client;
drivers/video/mxc/mxc_epdc_fb.c:5081:	complete(&fb_data->pxp_tx_cmpl);
drivers/video/mxc/mxc_epdc_fb.c:5106:		dev_err(fb_data->dev, "Unsuccessfully received channel!!!!\n");
drivers/video/mxc/mxc_epdc_fb.c:5107:		return -EBUSY;
drivers/video/mxc/mxc_epdc_fb.c:5110:	fb_data->pxp_chan = to_pxp_channel(chan);
drivers/video/mxc/mxc_epdc_fb.c:5111:	fb_data->pxp_chan->client = fb_data;
drivers/video/mxc/mxc_epdc_fb.c:5113:	init_completion(&fb_data->pxp_tx_cmpl);
drivers/video/mxc/mxc_epdc_fb.c:5128:	struct scatterlist *sg = fb_data->sg;
drivers/video/mxc/mxc_epdc_fb.c:5132:	struct pxp_config_data *pxp_conf = &fb_data->pxp_conf;
drivers/video/mxc/mxc_epdc_fb.c:5133:	struct pxp_proc_data *proc_data = &fb_data->pxp_conf.proc_data;
drivers/video/mxc/mxc_epdc_fb.c:5137:	dev_dbg(fb_data->dev, "Starting PxP Send Buffer\n");
drivers/video/mxc/mxc_epdc_fb.c:5140:	if (fb_data->pxp_chan == NULL) {
drivers/video/mxc/mxc_epdc_fb.c:5151:			dev_err(fb_data->dev, "PxP chan init failed\n");
drivers/video/mxc/mxc_epdc_fb.c:5152:			return -ENODEV;
drivers/video/mxc/mxc_epdc_fb.c:5161:	init_completion(&fb_data->pxp_tx_cmpl);
drivers/video/mxc/mxc_epdc_fb.c:5163:	dma_chan = &fb_data->pxp_chan->dma_chan;
drivers/video/mxc/mxc_epdc_fb.c:5165:	txd = dma_chan->device->device_prep_slave_sg(dma_chan, sg, 2,
drivers/video/mxc/mxc_epdc_fb.c:5169:		dev_err(fb_data->info.device,
drivers/video/mxc/mxc_epdc_fb.c:5171:		return -EIO;
drivers/video/mxc/mxc_epdc_fb.c:5174:	txd->callback_param = txd;
drivers/video/mxc/mxc_epdc_fb.c:5175:	txd->callback = pxp_dma_done;
drivers/video/mxc/mxc_epdc_fb.c:5182:	pxp_conf->s0_param.width = src_width;
drivers/video/mxc/mxc_epdc_fb.c:5183:	pxp_conf->s0_param.height = src_height;
drivers/video/mxc/mxc_epdc_fb.c:5184:	proc_data->srect.top = update_region->top;
drivers/video/mxc/mxc_epdc_fb.c:5185:	proc_data->srect.left = update_region->left;
drivers/video/mxc/mxc_epdc_fb.c:5186:	proc_data->srect.width = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:5187:	proc_data->srect.height = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:5193:	proc_data->drect.top = 0;
drivers/video/mxc/mxc_epdc_fb.c:5194:	proc_data->drect.left = 0;
drivers/video/mxc/mxc_epdc_fb.c:5195:	proc_data->drect.width = proc_data->srect.width;
drivers/video/mxc/mxc_epdc_fb.c:5196:	proc_data->drect.height = proc_data->srect.height;
drivers/video/mxc/mxc_epdc_fb.c:5199:	proc_data->rotate = fb_data->epdc_fb_var.rotate * 90;
drivers/video/mxc/mxc_epdc_fb.c:5200:	if (proc_data->rotate > 270)
drivers/video/mxc/mxc_epdc_fb.c:5201:		proc_data->rotate = 0;
drivers/video/mxc/mxc_epdc_fb.c:5203:	pxp_conf->out_param.width = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:5204:	pxp_conf->out_param.height = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:5206:	if ((proc_data->rotate == 90) || (proc_data->rotate == 270))
drivers/video/mxc/mxc_epdc_fb.c:5207:		pxp_conf->out_param.stride = update_region->height;
drivers/video/mxc/mxc_epdc_fb.c:5209:		pxp_conf->out_param.stride = update_region->width;
drivers/video/mxc/mxc_epdc_fb.c:5211:	/* For EPDC v2.0, we need output to be 64-bit
drivers/video/mxc/mxc_epdc_fb.c:5213:	if (fb_data->rev <= 20)
drivers/video/mxc/mxc_epdc_fb.c:5214:		pxp_conf->out_param.stride = ALIGN(pxp_conf->out_param.stride, 8);
drivers/video/mxc/mxc_epdc_fb.c:5218:	length = desc->len;
drivers/video/mxc/mxc_epdc_fb.c:5221:			memcpy(&desc->proc_data, proc_data, sizeof(struct pxp_proc_data));
drivers/video/mxc/mxc_epdc_fb.c:5222:			pxp_conf->s0_param.paddr = sg_dma_address(&sg[0]);
drivers/video/mxc/mxc_epdc_fb.c:5223:			memcpy(&desc->layer_param.s0_param, &pxp_conf->s0_param,
drivers/video/mxc/mxc_epdc_fb.c:5226:			pxp_conf->out_param.paddr = sg_dma_address(&sg[1]);
drivers/video/mxc/mxc_epdc_fb.c:5227:			memcpy(&desc->layer_param.out_param, &pxp_conf->out_param,
drivers/video/mxc/mxc_epdc_fb.c:5232:		desc = desc->next;
drivers/video/mxc/mxc_epdc_fb.c:5236:	cookie = txd->tx_submit(txd);
drivers/video/mxc/mxc_epdc_fb.c:5238:		dev_err(fb_data->info.device, "Error sending FB through PxP\n");
drivers/video/mxc/mxc_epdc_fb.c:5239:		return -EIO;
drivers/video/mxc/mxc_epdc_fb.c:5242:	fb_data->txd = txd;
drivers/video/mxc/mxc_epdc_fb.c:5257:	ret = wait_for_completion_timeout(&fb_data->pxp_tx_cmpl, HZ / 10);
drivers/video/mxc/mxc_epdc_fb.c:5259:		dev_info(fb_data->info.device,
drivers/video/mxc/mxc_epdc_fb.c:5262:		dma_release_channel(&fb_data->pxp_chan->dma_chan);
drivers/video/mxc/mxc_epdc_fb.c:5263:		fb_data->pxp_chan = NULL;
drivers/video/mxc/mxc_epdc_fb.c:5264:		return ret ? : -ETIMEDOUT;
drivers/video/mxc/mxc_epdc_fb.c:5267:	if ((fb_data->pxp_conf.proc_data.lut_transform & EPDC_FLAG_USE_CMAP) &&
drivers/video/mxc/mxc_epdc_fb.c:5268:		fb_data->pxp_conf.proc_data.lut_map_updated)
drivers/video/mxc/mxc_epdc_fb.c:5269:		fb_data->pxp_conf.proc_data.lut_map_updated = false;
drivers/video/mxc/mxc_epdc_fb.c:5271:	*hist_stat = to_tx_desc(fb_data->txd)->hist_status;
drivers/video/mxc/mxc_epdc_fb.c:5272:	dma_release_channel(&fb_data->pxp_chan->dma_chan);
drivers/video/mxc/mxc_epdc_fb.c:5273:	fb_data->pxp_chan = NULL;
drivers/video/mxc/mxc_epdc_fb.c:5275:	dev_dbg(fb_data->dev, "TX completed\n");
drivers/video/mxc/mxc_epdc_fb.c:5287: * Dithering algorithm implementation - Y8->Y1 version 1.0 for i.MX
drivers/video/mxc/mxc_epdc_fb.c:5301:	int width_3 = update_region->width + 3;
drivers/video/mxc/mxc_epdc_fb.c:5306:	for (y = 0; y < update_region->height; y++) {
drivers/video/mxc/mxc_epdc_fb.c:5315:		for (col = 1; col <= update_region->width; col++) {
drivers/video/mxc/mxc_epdc_fb.c:5320:				distrib_error = (bwPix - 255) >> 3;
drivers/video/mxc/mxc_epdc_fb.c:5330:			*(err_dist_l1 + col - 1) += distrib_error;
drivers/video/mxc/mxc_epdc_fb.c:5342: * Dithering algorithm implementation - Y8->Y4 version 1.0 for i.MX
drivers/video/mxc/mxc_epdc_fb.c:5357:	int width_3 = update_region->width + 3;
drivers/video/mxc/mxc_epdc_fb.c:5362:	for (y = 0; y < update_region->height; y++) {
drivers/video/mxc/mxc_epdc_fb.c:5371:		for (col = 1; col <= update_region->width; col++) {
drivers/video/mxc/mxc_epdc_fb.c:5379:			distrib_error = (*y8buf - (gcPix & 0xf0)) >> 3;
drivers/video/mxc/mxc_epdc_fb.c:5387:			*(err_dist_l1 + col - 1) += distrib_error;
drivers/video/mxc/mxcfb_epson.c:2: * Copyright 2004-2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mxcfb_epson.c:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mxcfb_epson.c:38:#include <linux/dma-mapping.h>
drivers/video/mxc/mxcfb_epson.c:41:#include <asm/mach-types.h>
drivers/video/mxc/mxcfb_epson.c:127: * @param	 x1	 x-coordinate of one vertex.
drivers/video/mxc/mxcfb_epson.c:128: * @param	 x2	 x-coordinate of second vertex.
drivers/video/mxc/mxcfb_epson.c:129: * @param	 y1	 y-coordinate of one vertex.
drivers/video/mxc/mxcfb_epson.c:130: * @param	 y2	 y-coordinate of second vertex.
drivers/video/mxc/mxcfb_epson.c:171:					    MXCFB_SCREEN_HEIGHT - 1);
drivers/video/mxc/mxcfb_epson.c:207:	/* 16-bit 565 mode */
drivers/video/mxc/mxcfb_epson.c:210:	/* 8-bit 666 mode */
drivers/video/mxc/mxcfb_epson.c:221:			 MXCFB_SCREEN_WIDTH + MXCFB_SCREEN_LEFT_OFFSET - 1,
drivers/video/mxc/mxcfb_epson.c:222:			 0, MXCFB_SCREEN_HEIGHT - 1);
drivers/video/mxc/mxcfb_epson.c:248:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:252:	uint32_t stride_pixels = (fbi->fix.line_length * 8) /
drivers/video/mxc/mxcfb_epson.c:253:	    fbi->var.bits_per_pixel;
drivers/video/mxc/mxcfb_epson.c:258:		dev_err(fbi->device, "error no bus snooping bits set\n");
drivers/video/mxc/mxcfb_epson.c:265:		lsb--;
drivers/video/mxc/mxcfb_epson.c:268:		lsb += 32 - 1;
drivers/video/mxc/mxcfb_epson.c:277:	seg_size = mxc_fbi->snoop_window_size / 64;
drivers/video/mxc/mxcfb_epson.c:280:	start_line = start_addr / fbi->fix.line_length;
drivers/video/mxc/mxcfb_epson.c:281:	start_addr = start_line * fbi->fix.line_length;	/* Addr aligned to line */
drivers/video/mxc/mxcfb_epson.c:282:	start_addr += fbi->fix.smem_start;
drivers/video/mxc/mxcfb_epson.c:285:	end_line = end_addr / fbi->fix.line_length;
drivers/video/mxc/mxcfb_epson.c:288:	if (end_line > fbi->var.yres) {
drivers/video/mxc/mxcfb_epson.c:289:		end_line = fbi->var.yres;
drivers/video/mxc/mxcfb_epson.c:292:	update_height = end_line - start_line;
drivers/video/mxc/mxcfb_epson.c:293:	dev_dbg(fbi->device, "updating rows %d to %d, start addr = 0x%08X\n",
drivers/video/mxc/mxcfb_epson.c:297:	params.adc_sys1.disp = mxc_fbi->disp_num;
drivers/video/mxc/mxcfb_epson.c:304:				bpp_to_pixfmt(fbi->var.bits_per_pixel),
drivers/video/mxc/mxcfb_epson.c:341:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb_epson.c:350:	mxc_fbi->disp_num = DISP0;
drivers/video/mxc/mxcfb_epson.c:358:	mxc_fbi->disp_num = DISP0;
drivers/video/mxc/mxcfb_epson.c:366:	fbi->disp_num = DISP1;
drivers/video/mxc/mxcfb_epson.c:372:		dev_err(fbi->device, "Error registering SYS2 irq handler.\n");
drivers/video/mxc/mxcfb_epson.c:378:		dev_err(fbi->device, "Error registering SYS1 irq handler.\n");
drivers/video/mxc/mxcfb_epson.c:386:	if (!(MXCFB_SCREEN_WIDTH & ((1UL << msb) - 1)))
drivers/video/mxc/mxcfb_epson.c:387:		msb--;	/* Already aligned to power 2 */
drivers/video/mxc/mxcfb_epson.c:389:	ipu_adc_init_panel(mxc_fbi->disp_num,
drivers/video/mxc/mxcfb_epson.c:394:	ipu_adc_init_ifc_timing(mxc_fbi->disp_num, true,
drivers/video/mxc/mxcfb_epson.c:396:	ipu_adc_init_ifc_timing(mxc_fbi->disp_num, false, 123, 17, 68, 0, 0);
drivers/video/mxc/mxcfb_epson.c:400:	params.adc_sys1.disp = mxc_fbi->disp_num;
drivers/video/mxc/mxcfb_epson.c:406:	_init_panel(mxc_fbi->disp_num);
drivers/video/mxc/mxcfb_epson.c:407:	init_channel_template(mxc_fbi->disp_num);
drivers/video/mxc/mxcfb_epson.c:418:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb_epson.c:419:	uint32_t stride_pixels = (fbi->fix.line_length * 8) /
drivers/video/mxc/mxcfb_epson.c:420:	    fbi->var.bits_per_pixel;
drivers/video/mxc/mxcfb_epson.c:421:	uint32_t memsize = fbi->fix.smem_len;
drivers/video/mxc/mxcfb_epson.c:423:	if (mxc_fbi->cur_update_mode == mode)
drivers/video/mxc/mxcfb_epson.c:426:	ret_mode = mxc_fbi->cur_update_mode;
drivers/video/mxc/mxcfb_epson.c:443:	mxc_fbi->cur_update_mode = mode;
drivers/video/mxc/mxcfb_epson.c:449:			dev_err(fbi->device, "Error enabling auto refesh.\n");
drivers/video/mxc/mxcfb_epson.c:452:			dev_err(fbi->device, "Error enabling auto refesh.\n");
drivers/video/mxc/mxcfb_epson.c:455:					bpp_to_pixfmt(fbi->var.bits_per_pixel),
drivers/video/mxc/mxcfb_epson.c:458:					fbi->fix.smem_start,
drivers/video/mxc/mxcfb_epson.c:459:					fbi->fix.smem_start, 0, 0);
drivers/video/mxc/mxcfb_epson.c:482:			dev_err(fbi->device, "Error enabling auto refesh.\n");
drivers/video/mxc/mxcfb_epson.c:486:		     fbi->fix.smem_start, &memsize) < 0) {
drivers/video/mxc/mxcfb_epson.c:487:			dev_err(fbi->device, "Error enabling auto refesh.\n");
drivers/video/mxc/mxcfb_epson.c:489:		mxc_fbi->snoop_window_size = memsize;
drivers/video/mxc/mxcfb_epson.c:492:					bpp_to_pixfmt(fbi->var.bits_per_pixel),
drivers/video/mxc/mxcfb_epson.c:495:					fbi->fix.smem_start, 0, 0, 0);
drivers/video/mxc/mxcfb_epson.c:497:		params.adc_sys1.disp = mxc_fbi->disp_num;
drivers/video/mxc/mxcfb_epson.c:504:					bpp_to_pixfmt(fbi->var.bits_per_pixel),
drivers/video/mxc/mxcfb_epson.c:507:					fbi->fix.smem_start, 0, 0, 0);
drivers/video/mxc/mxcfb_epson.c:521:		params.adc_sys1.disp = mxc_fbi->disp_num;
drivers/video/mxc/mxcfb_epson.c:524:		    update_region->left;
drivers/video/mxc/mxcfb_epson.c:526:		    update_region->top;
drivers/video/mxc/mxcfb_epson.c:530:		start_addr = update_region->top * fbi->fix.line_length;
drivers/video/mxc/mxcfb_epson.c:531:		start_addr += fbi->fix.smem_start;
drivers/video/mxc/mxcfb_epson.c:532:		start_addr += update_region->left * fbi->var.bits_per_pixel / 8;
drivers/video/mxc/mxcfb_epson.c:535:					bpp_to_pixfmt(fbi->var.bits_per_pixel),
drivers/video/mxc/mxcfb_epson.c:536:					update_region->width,
drivers/video/mxc/mxcfb_epson.c:537:					update_region->height, stride_pixels,
drivers/video/mxc/mxcfb_epson.c:544:		     fbi->fix.smem_start, &memsize) < 0)
drivers/video/mxc/mxcfb_epson.c:545:			dev_err(fbi->device, "Error enabling auto refesh.\n");
drivers/video/mxc/mxcfb_epson.c:547:		mxc_fbi->snoop_window_size = memsize;
drivers/video/mxc/mxcfb_epson.c:564:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:571:	mxc_fbi->open_count++;
drivers/video/mxc/mxcfb_epson.c:587:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:594:	--mxc_fbi->open_count;
drivers/video/mxc/mxcfb_epson.c:595:	if (mxc_fbi->open_count == 0) {
drivers/video/mxc/mxcfb_epson.c:608:	struct fb_fix_screeninfo *fix = &info->fix;
drivers/video/mxc/mxcfb_epson.c:609:	struct fb_var_screeninfo *var = &info->var;
drivers/video/mxc/mxcfb_epson.c:610:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)info->par;
drivers/video/mxc/mxcfb_epson.c:613:	strcpy(fix->id, "DISP0 FB");
drivers/video/mxc/mxcfb_epson.c:614:	fix->id[4] = '0' + mxc_fbi->disp_num;
drivers/video/mxc/mxcfb_epson.c:617:	fix->line_length = MXCFB_SCREEN_WIDTH * var->bits_per_pixel / 8;
drivers/video/mxc/mxcfb_epson.c:619:	fix->type = FB_TYPE_PACKED_PIXELS;
drivers/video/mxc/mxcfb_epson.c:620:	fix->accel = FB_ACCEL_NONE;
drivers/video/mxc/mxcfb_epson.c:621:	fix->visual = FB_VISUAL_TRUECOLOR;
drivers/video/mxc/mxcfb_epson.c:622:	fix->xpanstep = 0;
drivers/video/mxc/mxcfb_epson.c:623:	fix->ypanstep = 0;
drivers/video/mxc/mxcfb_epson.c:666:	if (var->xres > MXCFB_SCREEN_WIDTH)
drivers/video/mxc/mxcfb_epson.c:667:		var->xres = MXCFB_SCREEN_WIDTH;
drivers/video/mxc/mxcfb_epson.c:668:	if (var->yres > MXCFB_SCREEN_HEIGHT)
drivers/video/mxc/mxcfb_epson.c:669:		var->yres = MXCFB_SCREEN_HEIGHT;
drivers/video/mxc/mxcfb_epson.c:670:	if (var->xres_virtual < var->xres)
drivers/video/mxc/mxcfb_epson.c:671:		var->xres_virtual = var->xres;
drivers/video/mxc/mxcfb_epson.c:672:	if (var->yres_virtual < var->yres)
drivers/video/mxc/mxcfb_epson.c:673:		var->yres_virtual = var->yres;
drivers/video/mxc/mxcfb_epson.c:675:	if ((var->bits_per_pixel != 32) && (var->bits_per_pixel != 24) &&
drivers/video/mxc/mxcfb_epson.c:676:	    (var->bits_per_pixel != 16)) {
drivers/video/mxc/mxcfb_epson.c:677:		var->bits_per_pixel = default_bpp;
drivers/video/mxc/mxcfb_epson.c:680:	switch (var->bits_per_pixel) {
drivers/video/mxc/mxcfb_epson.c:682:		var->red.length = 5;
drivers/video/mxc/mxcfb_epson.c:683:		var->red.offset = 11;
drivers/video/mxc/mxcfb_epson.c:684:		var->red.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:686:		var->green.length = 6;
drivers/video/mxc/mxcfb_epson.c:687:		var->green.offset = 5;
drivers/video/mxc/mxcfb_epson.c:688:		var->green.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:690:		var->blue.length = 5;
drivers/video/mxc/mxcfb_epson.c:691:		var->blue.offset = 0;
drivers/video/mxc/mxcfb_epson.c:692:		var->blue.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:694:		var->transp.length = 0;
drivers/video/mxc/mxcfb_epson.c:695:		var->transp.offset = 0;
drivers/video/mxc/mxcfb_epson.c:696:		var->transp.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:699:		var->red.length = 8;
drivers/video/mxc/mxcfb_epson.c:700:		var->red.offset = 16;
drivers/video/mxc/mxcfb_epson.c:701:		var->red.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:703:		var->green.length = 8;
drivers/video/mxc/mxcfb_epson.c:704:		var->green.offset = 8;
drivers/video/mxc/mxcfb_epson.c:705:		var->green.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:707:		var->blue.length = 8;
drivers/video/mxc/mxcfb_epson.c:708:		var->blue.offset = 0;
drivers/video/mxc/mxcfb_epson.c:709:		var->blue.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:711:		var->transp.length = 0;
drivers/video/mxc/mxcfb_epson.c:712:		var->transp.offset = 0;
drivers/video/mxc/mxcfb_epson.c:713:		var->transp.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:716:		var->red.length = 8;
drivers/video/mxc/mxcfb_epson.c:717:		var->red.offset = 16;
drivers/video/mxc/mxcfb_epson.c:718:		var->red.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:720:		var->green.length = 8;
drivers/video/mxc/mxcfb_epson.c:721:		var->green.offset = 8;
drivers/video/mxc/mxcfb_epson.c:722:		var->green.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:724:		var->blue.length = 8;
drivers/video/mxc/mxcfb_epson.c:725:		var->blue.offset = 0;
drivers/video/mxc/mxcfb_epson.c:726:		var->blue.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:728:		var->transp.length = 8;
drivers/video/mxc/mxcfb_epson.c:729:		var->transp.offset = 24;
drivers/video/mxc/mxcfb_epson.c:730:		var->transp.msb_right = 0;
drivers/video/mxc/mxcfb_epson.c:734:	var->height = -1;
drivers/video/mxc/mxcfb_epson.c:735:	var->width = -1;
drivers/video/mxc/mxcfb_epson.c:736:	var->grayscale = 0;
drivers/video/mxc/mxcfb_epson.c:737:	var->nonstd = 0;
drivers/video/mxc/mxcfb_epson.c:739:	var->pixclock = -1;
drivers/video/mxc/mxcfb_epson.c:740:	var->left_margin = -1;
drivers/video/mxc/mxcfb_epson.c:741:	var->right_margin = -1;
drivers/video/mxc/mxcfb_epson.c:742:	var->upper_margin = -1;
drivers/video/mxc/mxcfb_epson.c:743:	var->lower_margin = -1;
drivers/video/mxc/mxcfb_epson.c:744:	var->hsync_len = -1;
drivers/video/mxc/mxcfb_epson.c:745:	var->vsync_len = -1;
drivers/video/mxc/mxcfb_epson.c:747:	var->vmode = FB_VMODE_NONINTERLACED;
drivers/video/mxc/mxcfb_epson.c:748:	var->sync = 0;
drivers/video/mxc/mxcfb_epson.c:756:	chan >>= 16 - bf->length;
drivers/video/mxc/mxcfb_epson.c:757:	return chan << bf->offset;
drivers/video/mxc/mxcfb_epson.c:771:	if (fbi->var.grayscale)
drivers/video/mxc/mxcfb_epson.c:774:	switch (fbi->fix.visual) {
drivers/video/mxc/mxcfb_epson.c:777:		 * 16-bit True Colour.  We encode the RGB value
drivers/video/mxc/mxcfb_epson.c:781:			u32 *pal = fbi->pseudo_palette;
drivers/video/mxc/mxcfb_epson.c:783:			val = _chan_to_field(red, &fbi->var.red);
drivers/video/mxc/mxcfb_epson.c:784:			val |= _chan_to_field(green, &fbi->var.green);
drivers/video/mxc/mxcfb_epson.c:785:			val |= _chan_to_field(blue, &fbi->var.blue);
drivers/video/mxc/mxcfb_epson.c:807:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:809:	dev_dbg(fbi->device, "blank = %d\n", blank);
drivers/video/mxc/mxcfb_epson.c:816:	mxc_fbi->blank = blank;
drivers/video/mxc/mxcfb_epson.c:852: * into a non-cached, non-buffered, memory region to allow palette and pixel
drivers/video/mxc/mxcfb_epson.c:864:	struct mxcfb_info *mxcfbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:866:	fbi->fix.smem_len = fbi->var.xres_virtual * fbi->var.yres_virtual * 4;
drivers/video/mxc/mxcfb_epson.c:869:	msb = fls(fbi->fix.smem_len);
drivers/video/mxc/mxcfb_epson.c:870:	if (!(fbi->fix.smem_len & ((1UL << msb) - 1)))
drivers/video/mxc/mxcfb_epson.c:871:		msb--;	/* Already aligned to power 2 */
drivers/video/mxc/mxcfb_epson.c:874:	mxcfbi->alloc_size = (1UL << msb) * 2;
drivers/video/mxc/mxcfb_epson.c:876:	mxcfbi->alloc_start_vaddr = dma_alloc_coherent(fbi->device,
drivers/video/mxc/mxcfb_epson.c:877:						       mxcfbi->alloc_size,
drivers/video/mxc/mxcfb_epson.c:878:						       &mxcfbi->
drivers/video/mxc/mxcfb_epson.c:882:	if (mxcfbi->alloc_start_vaddr == 0) {
drivers/video/mxc/mxcfb_epson.c:883:		dev_err(fbi->device, "Unable to allocate framebuffer memory\n");
drivers/video/mxc/mxcfb_epson.c:884:		return -ENOMEM;
drivers/video/mxc/mxcfb_epson.c:886:	dev_dbg(fbi->device, "allocated fb memory @ paddr=0x%08X, size=%d.\n",
drivers/video/mxc/mxcfb_epson.c:887:		(uint32_t) mxcfbi->alloc_start_paddr, mxcfbi->alloc_size);
drivers/video/mxc/mxcfb_epson.c:890:	    ((mxcfbi->alloc_size / 2) - 1) & ~((mxcfbi->alloc_size / 2) - 1);
drivers/video/mxc/mxcfb_epson.c:891:	fbi->fix.smem_start = mxcfbi->alloc_start_paddr + offset;
drivers/video/mxc/mxcfb_epson.c:892:	dev_dbg(fbi->device, "aligned fb start @ paddr=0x%08lX, size=%u.\n",
drivers/video/mxc/mxcfb_epson.c:893:		fbi->fix.smem_start, fbi->fix.smem_len);
drivers/video/mxc/mxcfb_epson.c:895:	fbi->screen_base = mxcfbi->alloc_start_vaddr + offset;
drivers/video/mxc/mxcfb_epson.c:898:	memset(fbi->screen_base, 0, fbi->fix.smem_len);
drivers/video/mxc/mxcfb_epson.c:903: * De-allocates the DRAM memory for the frame buffer.
drivers/video/mxc/mxcfb_epson.c:911:	struct mxcfb_info *mxc_fbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb_epson.c:913:	dma_free_coherent(fbi->device, mxc_fbi->alloc_size,
drivers/video/mxc/mxcfb_epson.c:914:			  mxc_fbi->alloc_start_vaddr,
drivers/video/mxc/mxcfb_epson.c:915:			  mxc_fbi->alloc_start_paddr);
drivers/video/mxc/mxcfb_epson.c:940:	mxcfbi = (struct mxcfb_info *)fbi->par;
drivers/video/mxc/mxcfb_epson.c:945:	fbi->var.xres = fbi->var.xres_virtual = MXCFB_SCREEN_WIDTH;
drivers/video/mxc/mxcfb_epson.c:946:	fbi->var.yres = fbi->var.yres_virtual = MXCFB_SCREEN_HEIGHT;
drivers/video/mxc/mxcfb_epson.c:947:	fbi->var.activate = FB_ACTIVATE_NOW;
drivers/video/mxc/mxcfb_epson.c:948:	mxcfb_check_var(&fbi->var, fbi);
drivers/video/mxc/mxcfb_epson.c:952:	fbi->fbops = ops;
drivers/video/mxc/mxcfb_epson.c:953:	fbi->flags = FBINFO_FLAG_DEFAULT;
drivers/video/mxc/mxcfb_epson.c:954:	fbi->pseudo_palette = mxcfbi->pseudo_palette;
drivers/video/mxc/mxcfb_epson.c:959:	fb_alloc_cmap(&fbi->cmap, 16, 0);
drivers/video/mxc/mxcfb_epson.c:983:	fbi = mxcfb_init_fbinfo(&pdev->dev, &mxcfb_ops);
drivers/video/mxc/mxcfb_epson.c:985:		ret = -ENOMEM;
drivers/video/mxc/mxcfb_epson.c:989:	mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:1012:	dev_info(&pdev->dev, "%s registered\n", MXCFB_NAME);
drivers/video/mxc/mxcfb_epson.c:1019:	if (&fbi->cmap)
drivers/video/mxc/mxcfb_epson.c:1020:		fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/mxcfb_epson.c:1043:	struct fb_info *fbi = drv_data->fbi;
drivers/video/mxc/mxcfb_epson.c:1044:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:1046:	drv_data->suspended = true;
drivers/video/mxc/mxcfb_epson.c:1048:	if (mxc_fbi->blank == FB_BLANK_UNBLANK)
drivers/video/mxc/mxcfb_epson.c:1051:	ipu_adc_write_cmd(mxc_fbi->disp_num, CMD, DISOFF, 0, 0);
drivers/video/mxc/mxcfb_epson.c:1066:	struct fb_info *fbi = drv_data->fbi;
drivers/video/mxc/mxcfb_epson.c:1067:	struct mxcfb_info *mxc_fbi = fbi->par;
drivers/video/mxc/mxcfb_epson.c:1070:	ipu_adc_write_cmd(mxc_fbi->disp_num, CMD, DISON, 0, 0);
drivers/video/mxc/mxcfb_epson.c:1071:	drv_data->suspended = false;
drivers/video/mxc/mxcfb_epson.c:1073:	if (mxc_fbi->blank == FB_BLANK_UNBLANK)
drivers/video/mxc/mxcfb_epson.c:1075:	wake_up_interruptible(&drv_data->suspend_wq);
drivers/video/mxc/mxcfb_epson.c:1135:		if (&fbi->cmap)
drivers/video/mxc/mxcfb_epson.c:1136:			fb_dealloc_cmap(&fbi->cmap);
drivers/video/mxc/Makefile:1:obj-$(CONFIG_FB_MXC_TVOUT_TVE)             	+= tve.o
drivers/video/mxc/Makefile:2:obj-$(CONFIG_FB_MXC_SII902X)                    += mxcfb_sii902x.o
drivers/video/mxc/Makefile:3:obj-$(CONFIG_FB_MXC_SII902X_ELCDIF)           += mxcfb_sii902x_elcdif.o
drivers/video/mxc/Makefile:4:obj-$(CONFIG_FB_MXC_LDB)			+= ldb.o
drivers/video/mxc/Makefile:5:obj-$(CONFIG_FB_MXC_MIPI_DSI)			+= mipi_dsi.o
drivers/video/mxc/Makefile:6:obj-$(CONFIG_FB_MXC_TRULY_WVGA_SYNC_PANEL) 	+= mxcfb_hx8369_wvga.o
drivers/video/mxc/Makefile:7:obj-$(CONFIG_FB_MXC_EDID)			+= mxc_edid.o
drivers/video/mxc/Makefile:9:	obj-$(CONFIG_FB_MXC_TVOUT)              += fs453.o
drivers/video/mxc/Makefile:10:	obj-$(CONFIG_FB_MXC_SYNC_PANEL)         += mx2fb.o mxcfb_modedb.o
drivers/video/mxc/Makefile:11:	obj-$(CONFIG_FB_MXC_EPSON_PANEL)        += mx2fb_epson.o
drivers/video/mxc/Makefile:14:	obj-$(CONFIG_FB_MXC_SYNC_PANEL)         += mxcfb.o mxcfb_modedb.o
drivers/video/mxc/Makefile:17:	obj-$(CONFIG_FB_MXC_SYNC_PANEL)         += mxc_dispdrv.o mxc_lcdif.o mxc_ipuv3_fb.o
drivers/video/mxc/Makefile:18:	obj-$(CONFIG_FB_MXC_EDID)		+= mxc_dvi.o
drivers/video/mxc/Makefile:20:	obj-$(CONFIG_FB_MXC_EPSON_PANEL)        += mxcfb_epson.o
drivers/video/mxc/Makefile:21:	obj-$(CONFIG_FB_MXC_EPSON_QVGA_PANEL)   += mxcfb_epson_qvga.o
drivers/video/mxc/Makefile:22:	obj-$(CONFIG_FB_MXC_TOSHIBA_QVGA_PANEL) += mxcfb_toshiba_qvga.o
drivers/video/mxc/Makefile:23:	obj-$(CONFIG_FB_MXC_SHARP_128_PANEL)    += mxcfb_sharp_128x128.o
drivers/video/mxc/Makefile:25:obj-$(CONFIG_FB_MXC_EPSON_VGA_SYNC_PANEL)   += mxcfb_epson_vga.o
drivers/video/mxc/Makefile:26:obj-$(CONFIG_FB_MXC_CLAA_WVGA_SYNC_PANEL)   += mxcfb_claa_wvga.o
drivers/video/mxc/Makefile:27:obj-$(CONFIG_FB_MXC_SEIKO_WVGA_SYNC_PANEL)   += mxcfb_seiko_wvga.o
drivers/video/mxc/Makefile:28:obj-$(CONFIG_FB_MXC_TVOUT_CH7024)           += ch7024.o
drivers/video/mxc/Makefile:29:obj-$(CONFIG_FB_MXC_CH7026)		    		+= mxcfb_ch7026.o
drivers/video/mxc/Makefile:30:obj-$(CONFIG_FB_MXC_EINK_PANEL)             += mxc_epdc_fb.o
drivers/video/mxc/Makefile:31:obj-$(CONFIG_FB_MXC_SIPIX_PANEL)            += mxc_spdc_fb.o
drivers/video/mxc/Makefile:32:obj-$(CONFIG_FB_MXC_ELCDIF_FB)		    += mxc_elcdif_fb.o
drivers/video/mxc/mx2fb.h:2: * Copyright (C) 2004-2007, 2011 Freescale Semiconductor, Inc. All Rights Reserved.
drivers/video/mxc/mx2fb.h:10: * http://www.opensource.org/licenses/gpl-license.html
drivers/video/mxc/mx2fb.h:26:	/*! Non-zero if graphic window is enabled */
drivers/video/mxc/mx2fb.h:34:	/*! Non-zero if graphic window color keying is enabled. */
drivers/video/mxc/mx2fb.h:58:	/*! Non-zero if graphic window vertical scan in reverse direction. */
drivers/video/mxc/mx2fb.h:71:/* 0x46E0-0x46FF are reserved for MX27 */
